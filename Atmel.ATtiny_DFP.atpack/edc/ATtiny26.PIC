<?xml version="1.0" encoding="UTF-8" standalone="no"?><edc:PIC xmlns:edc="http://crownking/edc" xmlns:atdf="http://crownking/atdf" xmlns:ltx="http://crownking/ltx" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" atdf:architecture="AVR8" atdf:family="tinyAVR" edc:arch="avr8" edc:hasfreeze="false" edc:name="ATtiny26" edc:procid="0x0000" xsi:schemaLocation="http://crownking/edc edc/PIC.xsd">
  <edc:Power>
    <edc:VDD edc:maxvoltage="5.5" edc:minvoltage="2.7"/>
  </edc:Power>
  <edc:Programming>
    <edc:ProgrammingRowSize edc:nzsize="32" edc:progop="pgm"/>
    <edc:ProgrammingRowSize edc:nzsize="1" edc:progop="cfg"/>
    <edc:ProgrammingRowSize edc:nzsize="4" edc:progop="eedata"/>
  </edc:Programming>
  <edc:ArchDef edc:desc="avr8" edc:name="avr8">
    <edc:MemTraits>
      <edc:ProgramMemTraits edc:addrinc="0x1" edc:locsize="0x2" edc:wordimpl="0xFFFF" edc:wordinit="0xFFFF" edc:wordsafe="0xFFFF" edc:wordsize="0xFFFF"/>
      <edc:DataMemTraits edc:addrinc="0x1" edc:locsize="0x1" edc:wordimpl="0xFF" edc:wordinit="0xFF" edc:wordsafe="0xFF" edc:wordsize="0x1"/>
    </edc:MemTraits>
  </edc:ArchDef>
  <edc:InstructionSet edc:instructionsetid="avr8"/>
  <edc:InterruptList>
    <edc:Interrupt edc:cname="RESET" edc:desc="External Reset, Power-on Reset and Watchdog Reset" edc:irq="0"/>
    <edc:Interrupt edc:cname="INT0" edc:desc="External Interrupt 0" edc:irq="1"/>
    <edc:Interrupt edc:cname="IO_PINS" edc:desc="External Interrupt Request 0" edc:irq="2"/>
    <edc:Interrupt edc:cname="TIMER1_CMPA" edc:desc="Timer/Counter1 Compare Match 1A" edc:irq="3"/>
    <edc:Interrupt edc:cname="TIMER1_CMPB" edc:desc="Timer/Counter1 Compare Match 1B" edc:irq="4"/>
    <edc:Interrupt edc:cname="TIMER1_OVF1" edc:desc="Timer/Counter1 Overflow" edc:irq="5"/>
    <edc:Interrupt edc:cname="TIMER0_OVF0" edc:desc="Timer/Counter0 Overflow" edc:irq="6"/>
    <edc:Interrupt edc:cname="USI_STRT" edc:desc="USI Start" edc:irq="7"/>
    <edc:Interrupt edc:cname="USI_OVF" edc:desc="USI Overflow" edc:irq="8"/>
    <edc:Interrupt edc:cname="EE_RDY" edc:desc="EEPROM Ready" edc:irq="9"/>
    <edc:Interrupt edc:cname="ANA_COMP" edc:desc="Analog Comparator" edc:irq="10"/>
    <edc:Interrupt edc:cname="ADC" edc:desc="ADC Conversion Complete" edc:irq="11"/>
  </edc:InterruptList>
  <edc:ProgramSpace>
    <edc:CodeSector edc:beginaddr="0x0" edc:endaddr="0x400" edc:regionid="FLASH"/>
  </edc:ProgramSpace>
  <edc:DataSpace edc:magicoffset="0x800000">
    <edc:RegardlessOfMode>
      <edc:NMMRPlace edc:regionid="corenmmrs">
        <edc:SFRDef edc:access="nnnnnnnnnnnnnn" edc:cname="PC" edc:desc="Program Counter" edc:impl="0x3FFF" edc:mclr="00000000000000000000000000000000" edc:nmmrid="60" edc:nzwidth="0xE" edc:por="00000000000000000000000000000000"/>
      </edc:NMMRPlace>
      <edc:SFRDataSector edc:beginaddr="0x0" edc:endaddr="0x20" edc:regionid="REGISTERS">
        <edc:SFRDef edc:_addr="0x0" edc:access="nnnnnnnn" edc:cname="R0" edc:desc="General-Purpose Register" edc:impl="0xFF" edc:mclr="xxxxxxxx" edc:nzwidth="0x8" edc:por="xxxxxxxx"/>
        <edc:SFRDef edc:_addr="0x1" edc:access="nnnnnnnn" edc:cname="R1" edc:desc="General-Purpose Register" edc:impl="0xFF" edc:mclr="xxxxxxxx" edc:nzwidth="0x8" edc:por="xxxxxxxx"/>
        <edc:SFRDef edc:_addr="0x2" edc:access="nnnnnnnn" edc:cname="R2" edc:desc="General-Purpose Register" edc:impl="0xFF" edc:mclr="xxxxxxxx" edc:nzwidth="0x8" edc:por="xxxxxxxx"/>
        <edc:SFRDef edc:_addr="0x3" edc:access="nnnnnnnn" edc:cname="R3" edc:desc="General-Purpose Register" edc:impl="0xFF" edc:mclr="xxxxxxxx" edc:nzwidth="0x8" edc:por="xxxxxxxx"/>
        <edc:SFRDef edc:_addr="0x4" edc:access="nnnnnnnn" edc:cname="R4" edc:desc="General-Purpose Register" edc:impl="0xFF" edc:mclr="xxxxxxxx" edc:nzwidth="0x8" edc:por="xxxxxxxx"/>
        <edc:SFRDef edc:_addr="0x5" edc:access="nnnnnnnn" edc:cname="R5" edc:desc="General-Purpose Register" edc:impl="0xFF" edc:mclr="xxxxxxxx" edc:nzwidth="0x8" edc:por="xxxxxxxx"/>
        <edc:SFRDef edc:_addr="0x6" edc:access="nnnnnnnn" edc:cname="R6" edc:desc="General-Purpose Register" edc:impl="0xFF" edc:mclr="xxxxxxxx" edc:nzwidth="0x8" edc:por="xxxxxxxx"/>
        <edc:SFRDef edc:_addr="0x7" edc:access="nnnnnnnn" edc:cname="R7" edc:desc="General-Purpose Register" edc:impl="0xFF" edc:mclr="xxxxxxxx" edc:nzwidth="0x8" edc:por="xxxxxxxx"/>
        <edc:SFRDef edc:_addr="0x8" edc:access="nnnnnnnn" edc:cname="R8" edc:desc="General-Purpose Register" edc:impl="0xFF" edc:mclr="xxxxxxxx" edc:nzwidth="0x8" edc:por="xxxxxxxx"/>
        <edc:SFRDef edc:_addr="0x9" edc:access="nnnnnnnn" edc:cname="R9" edc:desc="General-Purpose Register" edc:impl="0xFF" edc:mclr="xxxxxxxx" edc:nzwidth="0x8" edc:por="xxxxxxxx"/>
        <edc:SFRDef edc:_addr="0xA" edc:access="nnnnnnnn" edc:cname="R10" edc:desc="General-Purpose Register" edc:impl="0xFF" edc:mclr="xxxxxxxx" edc:nzwidth="0x8" edc:por="xxxxxxxx"/>
        <edc:SFRDef edc:_addr="0xB" edc:access="nnnnnnnn" edc:cname="R11" edc:desc="General-Purpose Register" edc:impl="0xFF" edc:mclr="xxxxxxxx" edc:nzwidth="0x8" edc:por="xxxxxxxx"/>
        <edc:SFRDef edc:_addr="0xC" edc:access="nnnnnnnn" edc:cname="R12" edc:desc="General-Purpose Register" edc:impl="0xFF" edc:mclr="xxxxxxxx" edc:nzwidth="0x8" edc:por="xxxxxxxx"/>
        <edc:SFRDef edc:_addr="0xD" edc:access="nnnnnnnn" edc:cname="R13" edc:desc="General-Purpose Register" edc:impl="0xFF" edc:mclr="xxxxxxxx" edc:nzwidth="0x8" edc:por="xxxxxxxx"/>
        <edc:SFRDef edc:_addr="0xE" edc:access="nnnnnnnn" edc:cname="R14" edc:desc="General-Purpose Register" edc:impl="0xFF" edc:mclr="xxxxxxxx" edc:nzwidth="0x8" edc:por="xxxxxxxx"/>
        <edc:SFRDef edc:_addr="0xF" edc:access="nnnnnnnn" edc:cname="R15" edc:desc="General-Purpose Register" edc:impl="0xFF" edc:mclr="xxxxxxxx" edc:nzwidth="0x8" edc:por="xxxxxxxx"/>
        <edc:SFRDef edc:_addr="0x10" edc:access="nnnnnnnn" edc:cname="R16" edc:desc="General-Purpose Register" edc:impl="0xFF" edc:mclr="xxxxxxxx" edc:nzwidth="0x8" edc:por="xxxxxxxx"/>
        <edc:SFRDef edc:_addr="0x11" edc:access="nnnnnnnn" edc:cname="R17" edc:desc="General-Purpose Register" edc:impl="0xFF" edc:mclr="xxxxxxxx" edc:nzwidth="0x8" edc:por="xxxxxxxx"/>
        <edc:SFRDef edc:_addr="0x12" edc:access="nnnnnnnn" edc:cname="R18" edc:desc="General-Purpose Register" edc:impl="0xFF" edc:mclr="xxxxxxxx" edc:nzwidth="0x8" edc:por="xxxxxxxx"/>
        <edc:SFRDef edc:_addr="0x13" edc:access="nnnnnnnn" edc:cname="R19" edc:desc="General-Purpose Register" edc:impl="0xFF" edc:mclr="xxxxxxxx" edc:nzwidth="0x8" edc:por="xxxxxxxx"/>
        <edc:SFRDef edc:_addr="0x14" edc:access="nnnnnnnn" edc:cname="R20" edc:desc="General-Purpose Register" edc:impl="0xFF" edc:mclr="xxxxxxxx" edc:nzwidth="0x8" edc:por="xxxxxxxx"/>
        <edc:SFRDef edc:_addr="0x15" edc:access="nnnnnnnn" edc:cname="R21" edc:desc="General-Purpose Register" edc:impl="0xFF" edc:mclr="xxxxxxxx" edc:nzwidth="0x8" edc:por="xxxxxxxx"/>
        <edc:SFRDef edc:_addr="0x16" edc:access="nnnnnnnn" edc:cname="R22" edc:desc="General-Purpose Register" edc:impl="0xFF" edc:mclr="xxxxxxxx" edc:nzwidth="0x8" edc:por="xxxxxxxx"/>
        <edc:SFRDef edc:_addr="0x17" edc:access="nnnnnnnn" edc:cname="R23" edc:desc="General-Purpose Register" edc:impl="0xFF" edc:mclr="xxxxxxxx" edc:nzwidth="0x8" edc:por="xxxxxxxx"/>
        <edc:SFRDef edc:_addr="0x18" edc:access="nnnnnnnn" edc:cname="R24" edc:desc="General-Purpose Register" edc:impl="0xFF" edc:mclr="xxxxxxxx" edc:nzwidth="0x8" edc:por="xxxxxxxx"/>
        <edc:SFRDef edc:_addr="0x19" edc:access="nnnnnnnn" edc:cname="R25" edc:desc="General-Purpose Register" edc:impl="0xFF" edc:mclr="xxxxxxxx" edc:nzwidth="0x8" edc:por="xxxxxxxx"/>
        <edc:SFRDef edc:_addr="0x1A" edc:access="nnnnnnnn" edc:cname="R26" edc:desc="General-Purpose Register" edc:impl="0xFF" edc:mclr="xxxxxxxx" edc:nzwidth="0x8" edc:por="xxxxxxxx"/>
        <edc:SFRDef edc:_addr="0x1B" edc:access="nnnnnnnn" edc:cname="R27" edc:desc="General-Purpose Register" edc:impl="0xFF" edc:mclr="xxxxxxxx" edc:nzwidth="0x8" edc:por="xxxxxxxx"/>
        <edc:SFRDef edc:_addr="0x1C" edc:access="nnnnnnnn" edc:cname="R28" edc:desc="General-Purpose Register" edc:impl="0xFF" edc:mclr="xxxxxxxx" edc:nzwidth="0x8" edc:por="xxxxxxxx"/>
        <edc:SFRDef edc:_addr="0x1D" edc:access="nnnnnnnn" edc:cname="R29" edc:desc="General-Purpose Register" edc:impl="0xFF" edc:mclr="xxxxxxxx" edc:nzwidth="0x8" edc:por="xxxxxxxx"/>
        <edc:SFRDef edc:_addr="0x1E" edc:access="nnnnnnnn" edc:cname="R30" edc:desc="General-Purpose Register" edc:impl="0xFF" edc:mclr="xxxxxxxx" edc:nzwidth="0x8" edc:por="xxxxxxxx"/>
        <edc:SFRDef edc:_addr="0x1F" edc:access="nnnnnnnn" edc:cname="R31" edc:desc="General-Purpose Register" edc:impl="0xFF" edc:mclr="xxxxxxxx" edc:nzwidth="0x8" edc:por="xxxxxxxx"/>
      </edc:SFRDataSector>
      <edc:SFRDataSector edc:beginaddr="0x20" edc:endaddr="0x60" edc:regionid="MAPPED_IO">
        <edc:AdjustPoint edc:_addr="0x20" edc:offset="0x4"/>
        <edc:SFRDef edc:_addr="0x24" edc:access="nnnnnnnnnnnnnnnn" edc:cname="ADC" edc:nzwidth="0x10" ltx:memberofperipheral="ADC"/>
        <edc:SFRDef edc:_addr="0x26" edc:access="nnnnnnnn" edc:cname="ADCSR" edc:nzwidth="0x8" ltx:memberofperipheral="ADC">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="ADPS" edc:desc="ADC  Prescaler Select Bits" edc:nzwidth="0x3">
                <edc:SFRFieldSemantic edc:cname="VAL_0x00" edc:desc="2" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="VAL_0x01" edc:desc="2" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="VAL_0x02" edc:desc="4" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="VAL_0x03" edc:desc="8" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="VAL_0x04" edc:desc="16" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="VAL_0x05" edc:desc="32" edc:when="(field &amp; 0x7) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="VAL_0x06" edc:desc="64" edc:when="(field &amp; 0x7) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="VAL_0x07" edc:desc="128" edc:when="(field &amp; 0x7) == 0x07"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="ADIE" edc:desc="ADC Interrupt Enable" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="ADIF" edc:desc="ADC Interrupt Flag" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="ADFR" edc:desc="ADC  Free Running Select" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="ADSC" edc:desc="ADC Start Conversion" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="ADEN" edc:desc="ADC Enable" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x27" edc:access="nnnnnnnn" edc:cname="ADMUX" edc:nzwidth="0x8" ltx:memberofperipheral="ADC">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="MUX" edc:desc="Analog Channel and Gain Selection Bits" edc:nzwidth="0x5"/>
              <edc:SFRFieldDef edc:cname="ADLAR" edc:desc="Left Adjust Result" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="REFS" edc:desc="Reference Selection Bits" edc:nzwidth="0x2">
                <edc:SFRFieldSemantic edc:cname="VAL_0x00" edc:desc="AVCC" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="VAL_0x01" edc:desc="AREF" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="VAL_0x02" edc:desc="Internal Voltage Referance" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="VAL_0x03" edc:desc="Internal Voltage Reference With External Capacitor at AREF Pin." edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x28" edc:access="nnnnnnnn" edc:cname="ACSR" edc:nzwidth="0x8" ltx:memberofperipheral="AC">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="ACIS" edc:desc="Analog Comparator Interrupt Mode Select bits" edc:nzwidth="0x2">
                <edc:SFRFieldSemantic edc:cname="VAL_0x00" edc:desc="Interrupt on Toggle" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="VAL_0x01" edc:desc="Reserved" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="VAL_0x02" edc:desc="Interrupt on Falling Edge" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="VAL_0x03" edc:desc="Interrupt on Rising Edge" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="ACME" edc:desc="Analog Comparator Multiplexer Enable" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="ACIE" edc:desc="Analog Comparator Interrupt Enable" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="ACI" edc:desc="Analog Comparator Interrupt Flag" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="ACO" edc:desc="Analog Compare Output" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="ACBG" edc:desc="Analog Comparator Bandgap Select" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="ACD" edc:desc="Analog Comparator Disable" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:_addr="0x29" edc:offset="0x4"/>
        <edc:SFRDef edc:_addr="0x2D" edc:access="nnnnnnnn" edc:cname="USICR" edc:nzwidth="0x8" ltx:memberofperipheral="USI">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="USITC" edc:desc="Toggle Clock Port Pin" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="USICLK" edc:desc="Clock Strobe" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="USICS" edc:desc="USI Clock Source Select Bits" edc:nzwidth="0x2"/>
              <edc:SFRFieldDef edc:cname="USIWM" edc:desc="USI Wire Mode Bits" edc:nzwidth="0x2">
                <edc:SFRFieldSemantic edc:cname="VAL_0x00" edc:desc="Normal Operation" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="VAL_0x01" edc:desc="Three-Wire Mode" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="VAL_0x02" edc:desc="Two-Wire Mode" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="VAL_0x03" edc:desc="Two-Wire Mode Held Low" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="USIOIE" edc:desc="Counter Overflow Interrupt Enable" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="USISIE" edc:desc="Start Condition Interrupt Enable" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x2E" edc:access="nnnnnnnn" edc:cname="USISR" edc:nzwidth="0x8" ltx:memberofperipheral="USI">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="USICNT" edc:desc="USI Counter Value Bits" edc:nzwidth="0x4"/>
              <edc:SFRFieldDef edc:cname="USIDC" edc:desc="Data Output Collision" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="USIPF" edc:desc="Stop Condition Flag" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="USIOIF" edc:desc="Counter Overflow Interrupt Flag" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="USISIF" edc:desc="Start Condition Interrupt Flag" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x2F" edc:access="nnnnnnnn" edc:cname="USIDR" edc:nzwidth="0x8" ltx:memberofperipheral="USI"/>
        <edc:AdjustPoint edc:_addr="0x30" edc:offset="0x6"/>
        <edc:SFRDef edc:_addr="0x36" edc:access="nnnnnnnn" edc:cname="PINB" edc:nzwidth="0x8" ltx:memberofperipheral="PORTB"/>
        <edc:SFRDef edc:_addr="0x37" edc:access="nnnnnnnn" edc:cname="DDRB" edc:nzwidth="0x8" ltx:memberofperipheral="PORTB"/>
        <edc:SFRDef edc:_addr="0x38" edc:access="nnnnnnnn" edc:cname="PORTB" edc:nzwidth="0x8" ltx:memberofperipheral="PORTB"/>
        <edc:SFRDef edc:_addr="0x39" edc:access="nnnnnnnn" edc:cname="PINA" edc:nzwidth="0x8" ltx:memberofperipheral="PORTA"/>
        <edc:SFRDef edc:_addr="0x3A" edc:access="nnnnnnnn" edc:cname="DDRA" edc:nzwidth="0x8" ltx:memberofperipheral="PORTA"/>
        <edc:SFRDef edc:_addr="0x3B" edc:access="nnnnnnnn" edc:cname="PORTA" edc:nzwidth="0x8" ltx:memberofperipheral="PORTA"/>
        <edc:SFRDef edc:_addr="0x3C" edc:access="----nnnn" edc:cname="EECR" edc:nzwidth="0x8" ltx:memberofperipheral="EEPROM">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="EERE" edc:desc="EEPROM Read Enable" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="EEWE" edc:desc="EEPROM Write Enable" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="EEMWE" edc:desc="EEPROM Master Write Enable" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="EERIE" edc:desc="EEProm Ready Interrupt Enable" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x3D" edc:access="nnnnnnnn" edc:cname="EEDR" edc:nzwidth="0x8" ltx:memberofperipheral="EEPROM"/>
        <edc:SFRDef edc:_addr="0x3E" edc:access="nnnnnnnn" edc:cname="EEAR" edc:nzwidth="0x8" ltx:memberofperipheral="EEPROM"/>
        <edc:AdjustPoint edc:_addr="0x3F" edc:offset="0x2"/>
        <edc:SFRDef edc:_addr="0x41" edc:access="---nnnnn" edc:cname="WDTCR" edc:nzwidth="0x8" ltx:memberofperipheral="WDT">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="WDP" edc:desc="Watch Dog Timer Prescaler bits" edc:nzwidth="0x3">
                <edc:SFRFieldSemantic edc:cname="VAL_0x00" edc:desc="Oscillator Cycles 16K" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="VAL_0x01" edc:desc="Oscillator Cycles 32K" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="VAL_0x02" edc:desc="Oscillator Cycles 64K" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="VAL_0x03" edc:desc="Oscillator Cycles 128K" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="VAL_0x04" edc:desc="Oscillator Cycles 256K" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="VAL_0x05" edc:desc="Oscillator Cycles 512K" edc:when="(field &amp; 0x7) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="VAL_0x06" edc:desc="Oscillator Cycles 1024K" edc:when="(field &amp; 0x7) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="VAL_0x07" edc:desc="Oscillator Cycles 2048K" edc:when="(field &amp; 0x7) == 0x07"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="WDE" edc:desc="Watch Dog Enable" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="WDCE" edc:desc="Watchdog Change Enable" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:_addr="0x42" edc:offset="0x7"/>
        <edc:SFRDef edc:_addr="0x49" edc:access="-----nnn" edc:cname="PLLCSR" edc:nzwidth="0x8" ltx:memberofperipheral="TC1">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="PLOCK" edc:desc="PLL Lock Detector" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="PLLE" edc:desc="PLL Enable" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="PCKE" edc:desc="PCK Enable" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:_addr="0x4A" edc:offset="0x1"/>
        <edc:SFRDef edc:_addr="0x4B" edc:access="nnnnnnnn" edc:cname="OCR1C" edc:nzwidth="0x8" ltx:memberofperipheral="TC1"/>
        <edc:SFRDef edc:_addr="0x4C" edc:access="nnnnnnnn" edc:cname="OCR1B" edc:nzwidth="0x8" ltx:memberofperipheral="TC1"/>
        <edc:SFRDef edc:_addr="0x4D" edc:access="nnnnnnnn" edc:cname="OCR1A" edc:nzwidth="0x8" ltx:memberofperipheral="TC1"/>
        <edc:SFRDef edc:_addr="0x4E" edc:access="nnnnnnnn" edc:cname="TCNT1" edc:nzwidth="0x8" ltx:memberofperipheral="TC1"/>
        <edc:SFRDef edc:_addr="0x4F" edc:access="nn--nnnn" edc:cname="TCCR1B" edc:nzwidth="0x8" ltx:memberofperipheral="TC1">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="CS1" edc:desc="Clock Select Bits" edc:nzwidth="0x4">
                <edc:SFRFieldSemantic edc:cname="VAL_0x00" edc:desc="No Clock Source (Stopped)" edc:when="(field &amp; 0xF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="VAL_0x01" edc:desc="Running, No Prescaling" edc:when="(field &amp; 0xF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="VAL_0x02" edc:desc="Running, CLK/2" edc:when="(field &amp; 0xF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="VAL_0x03" edc:desc="Running, CLK/4" edc:when="(field &amp; 0xF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="VAL_0x04" edc:desc="Running, CLK/8" edc:when="(field &amp; 0xF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="VAL_0x05" edc:desc="Running, CLK/16" edc:when="(field &amp; 0xF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="VAL_0x06" edc:desc="Running, CLK/32" edc:when="(field &amp; 0xF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="VAL_0x07" edc:desc="Running, CLK/64" edc:when="(field &amp; 0xF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="VAL_0x08" edc:desc="Running, CLK/128" edc:when="(field &amp; 0xF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="VAL_0x09" edc:desc="Running, CLK/256" edc:when="(field &amp; 0xF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="VAL_0x0A" edc:desc="Running, CLK/512" edc:when="(field &amp; 0xF) == 0x0A"/>
                <edc:SFRFieldSemantic edc:cname="VAL_0x0B" edc:desc="Running, CLK/1024" edc:when="(field &amp; 0xF) == 0x0B"/>
                <edc:SFRFieldSemantic edc:cname="VAL_0x0C" edc:desc="Running, CLK/2048" edc:when="(field &amp; 0xF) == 0x0C"/>
                <edc:SFRFieldSemantic edc:cname="VAL_0x0D" edc:desc="Running, CLK/4096" edc:when="(field &amp; 0xF) == 0x0D"/>
                <edc:SFRFieldSemantic edc:cname="VAL_0x0E" edc:desc="Running, CLK/8192" edc:when="(field &amp; 0xF) == 0x0E"/>
                <edc:SFRFieldSemantic edc:cname="VAL_0x0F" edc:desc="Running, CLK/16384" edc:when="(field &amp; 0xF) == 0x0F"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="0x2"/>
              <edc:SFRFieldDef edc:cname="PSR1" edc:desc="Prescaler Reset Timer/Counter1" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="CTC1" edc:desc="Clear Timer/Counter on Compare Match" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x50" edc:access="nnnnnnnn" edc:cname="TCCR1A" edc:nzwidth="0x8" ltx:memberofperipheral="TC1">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="PWM1B" edc:desc="Pulse Width Modulator B Enable" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="PWM1A" edc:desc="Pulse Width Modulator A Enable" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="FOC1B" edc:desc="Force Output Compare Match 1B" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="FOC1A" edc:desc="Force Output Compare Match 1A" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="COM1B" edc:desc="Comparator B Output Mode Bits" edc:nzwidth="0x2">
                <edc:SFRFieldSemantic edc:cname="VAL_0x00" edc:desc="Disconnected from OCn/PWMn" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="VAL_0x01" edc:desc="Toggle OCn/PWMn output line" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="VAL_0x02" edc:desc="Clear OCn/PWMn output line" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="VAL_0x03" edc:desc="set OCn/PWMn output line" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="COM1A" edc:desc="Comparator A Output Mode Bits" edc:nzwidth="0x2">
                <edc:SFRFieldSemantic edc:cname="VAL_0x00" edc:desc="Disconnected from OCn/PWMn" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="VAL_0x01" edc:desc="Toggle OCn/PWMn output line" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="VAL_0x02" edc:desc="Clear OCn/PWMn output line" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="VAL_0x03" edc:desc="set OCn/PWMn output line" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x51" edc:access="nnnnnnnn" edc:cname="OSCCAL" edc:nzwidth="0x8" ltx:memberofperipheral="CPU">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="OSCCAL" edc:desc="Oscillator Calibration " edc:nzwidth="0x8"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x52" edc:access="nnnnnnnn" edc:cname="TCNT0" edc:nzwidth="0x8" ltx:memberofperipheral="TC0"/>
        <edc:SFRDef edc:_addr="0x53" edc:access="----nnnn" edc:cname="TCCR0" edc:nzwidth="0x8" ltx:memberofperipheral="TC0">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="CS0" edc:desc="Clock Select0 bits" edc:nzwidth="0x3">
                <edc:SFRFieldSemantic edc:cname="VAL_0x00" edc:desc="No Clock Source (Stopped)" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="VAL_0x01" edc:desc="Running, No Prescaling" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="VAL_0x02" edc:desc="Running, CLK/8" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="VAL_0x03" edc:desc="Running, CLK/64" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="VAL_0x04" edc:desc="Running, CLK/256" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="VAL_0x05" edc:desc="Running, CLK/1024" edc:when="(field &amp; 0x7) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="VAL_0x06" edc:desc="Running, ExtClk Tx Falling Edge" edc:when="(field &amp; 0x7) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="VAL_0x07" edc:desc="Running, ExtClk Tx Rising Edge" edc:when="(field &amp; 0x7) == 0x07"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PSR0" edc:desc="Prescaler Reset Timer/Counter0" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x54" edc:access="----nnnn" edc:cname="MCUSR" edc:nzwidth="0x8" ltx:memberofperipheral="CPU">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="PORF" edc:desc="Power-On Reset Flag" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="EXTRF" edc:desc="External Reset Flag" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="BORF" edc:desc="Brown-out Reset Flag" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="WDRF" edc:desc="Watchdog Reset Flag" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x55" edc:access="-nnnn-nn" edc:cname="MCUCR" edc:nzwidth="0x8" ltx:memberofperipheral="CPU">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="ISC0" edc:desc="Interrupt Sense Control 0 bits" edc:nzwidth="0x2">
                <edc:SFRFieldSemantic edc:cname="VAL_0x00" edc:desc="Low Level of INTX" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="VAL_0x01" edc:desc="Any Logical Change in INTX" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="VAL_0x02" edc:desc="Falling Edge of INTX" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="VAL_0x03" edc:desc="Rising Edge of INTX" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="SM" edc:desc="Sleep Mode Select Bits" edc:nzwidth="0x2">
                <edc:SFRFieldSemantic edc:cname="IDLE" edc:desc="Idle" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="ADC" edc:desc="ADC Noise Reduction (If Available)" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="PDOWN" edc:desc="Power Down" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="STDBY" edc:desc="Standby" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="SE" edc:desc="Sleep Enable" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="PUD" edc:desc="Pull-up Disable" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:_addr="0x56" edc:offset="0x2"/>
        <edc:SFRDef edc:_addr="0x58" edc:access="-nn--n--" edc:cname="TIFR" edc:nzwidth="0x8" ltx:memberofperipheral="TC1">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:AdjustPoint edc:offset="0x2"/>
              <edc:SFRFieldDef edc:cname="TOV1" edc:desc="Timer/Counter1 Overflow Flag" edc:nzwidth="0x1"/>
              <edc:AdjustPoint edc:offset="0x2"/>
              <edc:SFRFieldDef edc:cname="OCF1B" edc:desc="Timer/Counter1 Output Compare Flag 1B" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="OCF1A" edc:desc="Timer/Counter1 Output Compare Flag 1A" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x59" edc:access="-nn--n--" edc:cname="TIMSK" edc:nzwidth="0x8" ltx:memberofperipheral="TC1">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:AdjustPoint edc:offset="0x2"/>
              <edc:SFRFieldDef edc:cname="TOIE1" edc:desc="Timer/Counter1 Overflow Interrupt Enable" edc:nzwidth="0x1"/>
              <edc:AdjustPoint edc:offset="0x2"/>
              <edc:SFRFieldDef edc:cname="OCIE1B" edc:desc="Timer/Counter1 Output Compare Interrupt Enable" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="OCIE1A" edc:desc="Timer/Counter1 Output Compare Interrupt Enable" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x5A" edc:access="-nn-----" edc:cname="GIFR" edc:nzwidth="0x8" ltx:memberofperipheral="EXINT">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:AdjustPoint edc:offset="0x5"/>
              <edc:SFRFieldDef edc:cname="PCIF" edc:desc="Pin Change Interrupt Flag" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="INTF0" edc:desc="External Interrupt Flag 0" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x5B" edc:access="-nnn----" edc:cname="GIMSK" edc:nzwidth="0x8" ltx:memberofperipheral="EXINT">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:AdjustPoint edc:offset="0x4"/>
              <edc:SFRFieldDef edc:cname="PCIE" edc:desc="Pin Change Interrupt Enables" edc:nzwidth="0x2"/>
              <edc:SFRFieldDef edc:cname="INT0" edc:desc="External Interrupt Request 0 Enable" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:_addr="0x5C" edc:offset="0x1"/>
        <edc:SFRDef edc:_addr="0x5D" edc:access="nnnnnnnn" edc:cname="SP" edc:nzwidth="0x8" ltx:memberofperipheral="CPU"/>
        <edc:AdjustPoint edc:_addr="0x5E" edc:offset="0x1"/>
        <edc:SFRDef edc:_addr="0x5F" edc:access="nnnnnnnn" edc:cname="SREG" edc:nzwidth="0x8" ltx:memberofperipheral="CPU">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="C" edc:desc="Carry Flag" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="Z" edc:desc="Zero Flag" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="N" edc:desc="Negative Flag" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="V" edc:desc="Two's Complement Overflow Flag" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="S" edc:desc="Sign Bit" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="H" edc:desc="Half Carry Flag" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="T" edc:desc="Bit Copy Storage" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="I" edc:desc="Global Interrupt Enable" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
      </edc:SFRDataSector>
      <edc:GPRDataSector edc:beginaddr="0x60" edc:endaddr="0xE0" edc:regionid="IRAM"/>
    </edc:RegardlessOfMode>
  </edc:DataSpace>
  <edc:DataFlashSpace edc:endaddr="0x400" edc:magicoffset="0x810000"/>
  <edc:SignaturesSpace edc:magicoffset="0x840000">
    <edc:DeviceIDSector edc:beginaddr="0x0" edc:endaddr="0x3" edc:regionid="SIGNATURES" edc:value="0x1E9109"/>
  </edc:SignaturesSpace>
  <edc:FusesSpace edc:magicoffset="0x820000">
    <edc:ConfigFuseSector edc:beginaddr="0x0" edc:endaddr="0x2" edc:regionid="FUSES">
      <edc:DCRDef edc:_addr="0x0" edc:access="nnnnnnnn" edc:cname="LOW" edc:factorydefault="0xE1" edc:impl="0xFF" edc:nzwidth="0x8" edc:unused="0x0" edc:useinchecksum="0xFF" ltx:memberofperipheral="FUSE">
        <edc:DCRModeList>
          <edc:DCRMode edc:id="DS.0">
            <edc:DCRFieldDef edc:cname="PLLCK_SUT_CKSEL" edc:desc="Select Clock Source" edc:mask="0xBF" edc:nzwidth="0x8">
              <edc:DCRFieldSemantic edc:cname="PLLCLK_1KCK_0MS" edc:desc="PLL Clock; Start-up time: 1K CK + 0 ms" edc:when="(field &amp; 0xBF) == 0x01"/>
              <edc:DCRFieldSemantic edc:cname="PLLCLK_1KCK_4MS" edc:desc="PLL Clock; Start-up time: 1K CK + 4 ms" edc:when="(field &amp; 0xBF) == 0x11"/>
              <edc:DCRFieldSemantic edc:cname="PLLCLK_1KCK_64MS" edc:desc="PLL Clock; Start-up time: 1K CK + 64 ms" edc:when="(field &amp; 0xBF) == 0x21"/>
              <edc:DCRFieldSemantic edc:cname="PLLCLK_16KCK_64MS" edc:desc="PLL Clock; Start-up time: 16K CK + 64 ms" edc:when="(field &amp; 0xBF) == 0x31"/>
              <edc:DCRFieldSemantic edc:cname="EXTCLK_6CK_0MS" edc:desc="Ext. Clock; Start-up time: 6 CK + 0 ms" edc:when="(field &amp; 0xBF) == 0x80"/>
              <edc:DCRFieldSemantic edc:cname="EXTCLK_6CK_4MS" edc:desc="Ext. Clock; Start-up time: 6 CK + 4 ms" edc:when="(field &amp; 0xBF) == 0x90"/>
              <edc:DCRFieldSemantic edc:cname="EXTCLK_6CK_64MS" edc:desc="Ext. Clock; Start-up time: 6 CK + 64 ms" edc:when="(field &amp; 0xBF) == 0xA0"/>
              <edc:DCRFieldSemantic edc:cname="INTRCOSC_1MHZ_6CK_0MS" edc:desc="Int. RC Osc. 1 MHz; Start-up time: 6 CK + 0 ms" edc:when="(field &amp; 0xBF) == 0x81"/>
              <edc:DCRFieldSemantic edc:cname="INTRCOSC_1MHZ_6CK_4MS" edc:desc="Int. RC Osc. 1 MHz; Start-up time: 6 CK + 4 ms" edc:when="(field &amp; 0xBF) == 0x91"/>
              <edc:DCRFieldSemantic edc:cname="INTRCOSC_1MHZ_6CK_64MS" edc:desc="Int. RC Osc. 1 MHz; Start-up time: 6 CK + 64 ms" edc:when="(field &amp; 0xBF) == 0xA1"/>
              <edc:DCRFieldSemantic edc:cname="INTRCOSC_2MHZ_6CK_0MS" edc:desc="Int. RC Osc. 2 MHz; Start-up time: 6 CK + 0 ms" edc:when="(field &amp; 0xBF) == 0x82"/>
              <edc:DCRFieldSemantic edc:cname="INTRCOSC_2MHZ_6CK_4MS" edc:desc="Int. RC Osc. 2 MHz; Start-up time: 6 CK + 4 ms" edc:when="(field &amp; 0xBF) == 0x92"/>
              <edc:DCRFieldSemantic edc:cname="INTRCOSC_2MHZ_6CK_64MS" edc:desc="Int. RC Osc. 2 MHz; Start-up time: 6 CK + 64 ms" edc:when="(field &amp; 0xBF) == 0xA2"/>
              <edc:DCRFieldSemantic edc:cname="INTRCOSC_4MHZ_6CK_0MS" edc:desc="Int. RC Osc. 4 MHz; Start-up time: 6 CK + 0 ms" edc:when="(field &amp; 0xBF) == 0x83"/>
              <edc:DCRFieldSemantic edc:cname="INTRCOSC_4MHZ_6CK_4MS" edc:desc="Int. RC Osc. 4 MHz; Start-up time: 6 CK + 4 ms" edc:when="(field &amp; 0xBF) == 0x93"/>
              <edc:DCRFieldSemantic edc:cname="INTRCOSC_4MHZ_6CK_64MS" edc:desc="Int. RC Osc. 4 MHz; Start-up time: 6 CK + 64 ms" edc:when="(field &amp; 0xBF) == 0xA3"/>
              <edc:DCRFieldSemantic edc:cname="INTRCOSC_8MHZ_6CK_0MS" edc:desc="Int. RC Osc. 8 MHz; Start-up time: 6 CK + 0 ms" edc:when="(field &amp; 0xBF) == 0x84"/>
              <edc:DCRFieldSemantic edc:cname="INTRCOSC_8MHZ_6CK_4MS" edc:desc="Int. RC Osc. 8 MHz; Start-up time: 6 CK + 4 ms" edc:when="(field &amp; 0xBF) == 0x94"/>
              <edc:DCRFieldSemantic edc:cname="INTRCOSC_8MHZ_6CK_64MS" edc:desc="Int. RC Osc. 8 MHz; Start-up time: 6 CK + 64 ms" edc:when="(field &amp; 0xBF) == 0xA4"/>
              <edc:DCRFieldSemantic edc:cname="EXTRCOSC_XX_0MHZ9_18CK_0MS" edc:desc="Ext. RC Osc.         -  0.9 MHz; Start-up time: 18 CK + 0 ms" edc:when="(field &amp; 0xBF) == 0x85"/>
              <edc:DCRFieldSemantic edc:cname="EXTRCOSC_XX_0MHZ9_18CK_4MS" edc:desc="Ext. RC Osc.         -  0.9 MHz; Start-up time: 18 CK + 4 ms" edc:when="(field &amp; 0xBF) == 0x95"/>
              <edc:DCRFieldSemantic edc:cname="EXTRCOSC_XX_0MHZ9_18CK_64MS" edc:desc="Ext. RC Osc.         -  0.9 MHz; Start-up time: 18 CK + 64 ms" edc:when="(field &amp; 0xBF) == 0xA5"/>
              <edc:DCRFieldSemantic edc:cname="EXTRCOSC_XX_0MHZ9_6CK_4MS" edc:desc="Ext. RC Osc.         -  0.9 MHz; Start-up time: 6 CK + 4 ms" edc:when="(field &amp; 0xBF) == 0xB5"/>
              <edc:DCRFieldSemantic edc:cname="EXTRCOSC_0MHZ9_3MHZ_18CK_0MS" edc:desc="Ext. RC Osc. 0.9 MHz -  3.0 MHz; Start-up time: 18 CK + 0 ms" edc:when="(field &amp; 0xBF) == 0x86"/>
              <edc:DCRFieldSemantic edc:cname="EXTRCOSC_0MHZ9_3MHZ_18CK_4MS" edc:desc="Ext. RC Osc. 0.9 MHz -  3.0 MHz; Start-up time: 18 CK + 4 ms" edc:when="(field &amp; 0xBF) == 0x96"/>
              <edc:DCRFieldSemantic edc:cname="EXTRCOSC_0MHZ9_3MHZ_18CK_64MS" edc:desc="Ext. RC Osc. 0.9 MHz -  3.0 MHz; Start-up time: 18 CK + 64 ms" edc:when="(field &amp; 0xBF) == 0xA6"/>
              <edc:DCRFieldSemantic edc:cname="EXTRCOSC_0MHZ9_3MHZ_6CK_4MS" edc:desc="Ext. RC Osc. 0.9 MHz -  3.0 MHz; Start-up time: 6 CK + 4 ms" edc:when="(field &amp; 0xBF) == 0xB6"/>
              <edc:DCRFieldSemantic edc:cname="EXTRCOSC_3MHZ_8MHZ_18CK_0MS" edc:desc="Ext. RC Osc. 3.0 MHz -  8.0 MHz; Start-up time: 18 CK + 0 ms" edc:when="(field &amp; 0xBF) == 0x87"/>
              <edc:DCRFieldSemantic edc:cname="EXTRCOSC_3MHZ_8MHZ_18CK_4MS" edc:desc="Ext. RC Osc. 3.0 MHz -  8.0 MHz; Start-up time: 18 CK + 4 ms" edc:when="(field &amp; 0xBF) == 0x97"/>
              <edc:DCRFieldSemantic edc:cname="EXTRCOSC_3MHZ_8MHZ_18CK_64MS" edc:desc="Ext. RC Osc. 3.0 MHz -  8.0 MHz; Start-up time: 18 CK + 64 ms" edc:when="(field &amp; 0xBF) == 0xA7"/>
              <edc:DCRFieldSemantic edc:cname="EXTRCOSC_3MHZ_8MHZ_6CK_4MS" edc:desc="Ext. RC Osc. 3.0 MHz -  8.0 MHz; Start-up time: 6 CK + 4 ms" edc:when="(field &amp; 0xBF) == 0xB7"/>
              <edc:DCRFieldSemantic edc:cname="EXTRCOSC_8MHZ_12MHZ_18CK_0MS" edc:desc="Ext. RC Osc. 8.0 MHz - 12.0 MHz; Start-up time: 18 CK + 0 ms" edc:when="(field &amp; 0xBF) == 0x88"/>
              <edc:DCRFieldSemantic edc:cname="EXTRCOSC_8MHZ_12MHZ_18CK_4MS" edc:desc="Ext. RC Osc. 8.0 MHz - 12.0 MHz; Start-up time: 18 CK + 4 ms" edc:when="(field &amp; 0xBF) == 0x98"/>
              <edc:DCRFieldSemantic edc:cname="EXTRCOSC_8MHZ_12MHZ_18CK_64MS" edc:desc="Ext. RC Osc. 8.0 MHz - 12.0 MHz; Start-up time: 18 CK + 64 ms" edc:when="(field &amp; 0xBF) == 0xA8"/>
              <edc:DCRFieldSemantic edc:cname="EXTRCOSC_8MHZ_12MHZ_6CK_4MS" edc:desc="Ext. RC Osc. 8.0 MHz - 12.0 MHz; Start-up time: 6 CK + 4 ms" edc:when="(field &amp; 0xBF) == 0xB8"/>
              <edc:DCRFieldSemantic edc:cname="EXTLOFXTAL_1KCK_4MS" edc:desc="Ext. Low-Freq. Crystal; Start-up time: 1K CK + 4 ms" edc:when="(field &amp; 0xBF) == 0x89"/>
              <edc:DCRFieldSemantic edc:cname="EXTLOFXTAL_1KCK_64MS" edc:desc="Ext. Low-Freq. Crystal; Start-up time: 1K CK + 64 ms" edc:when="(field &amp; 0xBF) == 0x99"/>
              <edc:DCRFieldSemantic edc:cname="EXTLOFXTAL_32KCK_64MS" edc:desc="Ext. Low-Freq. Crystal; Start-up time: 32K CK + 64 ms" edc:when="(field &amp; 0xBF) == 0xA9"/>
              <edc:DCRFieldSemantic edc:cname="EXTLOFXTALRES_258CK_4MS" edc:desc="Ext. Crystal/Resonator Low Freq.; Start-up time: 258 CK + 4 ms" edc:when="(field &amp; 0xBF) == 0x8A"/>
              <edc:DCRFieldSemantic edc:cname="EXTLOFXTALRES_258CK_64MS" edc:desc="Ext. Crystal/Resonator Low Freq.; Start-up time: 258 CK + 64 ms" edc:when="(field &amp; 0xBF) == 0x9A"/>
              <edc:DCRFieldSemantic edc:cname="EXTLOFXTALRES_1KCK_0MS" edc:desc="Ext. Crystal/Resonator Low Freq.; Start-up time: 1K CK + 0 ms" edc:when="(field &amp; 0xBF) == 0xAA"/>
              <edc:DCRFieldSemantic edc:cname="EXTLOFXTALRES_1KCK_4MS" edc:desc="Ext. Crystal/Resonator Low Freq.; Start-up time: 1K CK + 4 ms" edc:when="(field &amp; 0xBF) == 0xBA"/>
              <edc:DCRFieldSemantic edc:cname="EXTLOFXTALRES_1KCK_64MS" edc:desc="Ext. Crystal/Resonator Low Freq.; Start-up time: 1K CK + 64 ms" edc:when="(field &amp; 0xBF) == 0x8B"/>
              <edc:DCRFieldSemantic edc:cname="EXTLOFXTALRES_16KCK_0MS" edc:desc="Ext. Crystal/Resonator Low Freq.; Start-up time: 16K CK + 0 ms" edc:when="(field &amp; 0xBF) == 0x9B"/>
              <edc:DCRFieldSemantic edc:cname="EXTLOFXTALRES_16KCK_4MS" edc:desc="Ext. Crystal/Resonator Low Freq.; Start-up time: 16K CK + 4 ms" edc:when="(field &amp; 0xBF) == 0xAB"/>
              <edc:DCRFieldSemantic edc:cname="EXTLOFXTALRES_16KCK_64MS" edc:desc="Ext. Crystal/Resonator Low Freq.; Start-up time: 16K CK + 64 ms" edc:when="(field &amp; 0xBF) == 0xBB"/>
              <edc:DCRFieldSemantic edc:cname="EXTMEDFXTALRES_258CK_4MS" edc:desc="Ext. Crystal/Resonator Medium Freq.; Start-up time: 258 CK + 4 ms" edc:when="(field &amp; 0xBF) == 0x8C"/>
              <edc:DCRFieldSemantic edc:cname="EXTMEDFXTALRES_258CK_64MS" edc:desc="Ext. Crystal/Resonator Medium Freq.; Start-up time: 258 CK + 64 ms" edc:when="(field &amp; 0xBF) == 0x9C"/>
              <edc:DCRFieldSemantic edc:cname="EXTMEDFXTALRES_1KCK_0MS" edc:desc="Ext. Crystal/Resonator Medium Freq.; Start-up time: 1K CK + 0 ms" edc:when="(field &amp; 0xBF) == 0xAC"/>
              <edc:DCRFieldSemantic edc:cname="EXTMEDFXTALRES_1KCK_4MS" edc:desc="Ext. Crystal/Resonator Medium Freq.; Start-up time: 1K CK + 4 ms" edc:when="(field &amp; 0xBF) == 0xBC"/>
              <edc:DCRFieldSemantic edc:cname="EXTMEDFXTALRES_1KCK_64MS" edc:desc="Ext. Crystal/Resonator Medium Freq.; Start-up time: 1K CK + 64 ms" edc:when="(field &amp; 0xBF) == 0x8D"/>
              <edc:DCRFieldSemantic edc:cname="EXTMEDFXTALRES_16KCK_0MS" edc:desc="Ext. Crystal/Resonator Medium Freq.; Start-up time: 16K CK + 0 ms" edc:when="(field &amp; 0xBF) == 0x9D"/>
              <edc:DCRFieldSemantic edc:cname="EXTMEDFXTALRES_16KCK_4MS" edc:desc="Ext. Crystal/Resonator Medium Freq.; Start-up time: 16K CK + 4 ms" edc:when="(field &amp; 0xBF) == 0xAD"/>
              <edc:DCRFieldSemantic edc:cname="EXTMEDFXTALRES_16KCK_64MS" edc:desc="Ext. Crystal/Resonator Medium Freq.; Start-up time: 16K CK + 64 ms" edc:when="(field &amp; 0xBF) == 0xBD"/>
              <edc:DCRFieldSemantic edc:cname="EXTHIFXTALRES_258CK_4MS" edc:desc="Ext. Crystal/Resonator High Freq.; Start-up time: 258 CK + 4 ms" edc:when="(field &amp; 0xBF) == 0x8E"/>
              <edc:DCRFieldSemantic edc:cname="EXTHIFXTALRES_258CK_64MS" edc:desc="Ext. Crystal/Resonator High Freq.; Start-up time: 258 CK + 64 ms" edc:when="(field &amp; 0xBF) == 0x9E"/>
              <edc:DCRFieldSemantic edc:cname="EXTHIFXTALRES_1KCK_0MS" edc:desc="Ext. Crystal/Resonator High Freq.; Start-up time: 1K CK + 0 ms" edc:when="(field &amp; 0xBF) == 0xAE"/>
              <edc:DCRFieldSemantic edc:cname="EXTHIFXTALRES_1KCK_4MS" edc:desc="Ext. Crystal/Resonator High Freq.; Start-up time: 1K CK + 4 ms" edc:when="(field &amp; 0xBF) == 0xBE"/>
              <edc:DCRFieldSemantic edc:cname="EXTHIFXTALRES_1KCK_64MS" edc:desc="Ext. Crystal/Resonator High Freq.; Start-up time: 1K CK + 64 ms" edc:when="(field &amp; 0xBF) == 0x8F"/>
              <edc:DCRFieldSemantic edc:cname="EXTHIFXTALRES_16KCK_0MS" edc:desc="Ext. Crystal/Resonator High Freq.; Start-up time: 16K CK + 0 ms" edc:when="(field &amp; 0xBF) == 0x9F"/>
              <edc:DCRFieldSemantic edc:cname="EXTHIFXTALRES_16KCK_4MS" edc:desc="Ext. Crystal/Resonator High Freq.; Start-up time: 16K CK + 4 ms" edc:when="(field &amp; 0xBF) == 0xAF"/>
              <edc:DCRFieldSemantic edc:cname="EXTHIFXTALRES_16KCK_64MS" edc:desc="Ext. Crystal/Resonator High Freq.; Start-up time: 16K CK + 64 ms" edc:when="(field &amp; 0xBF) == 0xBF"/>
            </edc:DCRFieldDef>
            <edc:AdjustPoint edc:offset="-2"/>
            <edc:DCRFieldDef edc:cname="CKOPT" edc:desc="CKOPT fuse (operation dependent of CKSEL fuses)" edc:nzwidth="0x1"/>
          </edc:DCRMode>
        </edc:DCRModeList>
      </edc:DCRDef>
      <edc:DCRDef edc:_addr="0x1" edc:access="---nnnnn" edc:cname="HIGH" edc:factorydefault="0xF7" edc:impl="0x1F" edc:nzwidth="0x8" edc:unused="0x0" edc:useinchecksum="0xFF" ltx:memberofperipheral="FUSE">
        <edc:DCRModeList>
          <edc:DCRMode edc:id="DS.0">
            <edc:DCRFieldDef edc:cname="BODEN" edc:desc="Brown-out detection enabled" edc:nzwidth="0x1"/>
            <edc:DCRFieldDef edc:cname="BODLEVEL" edc:desc="Brownout detector trigger level" edc:nzwidth="0x1">
              <edc:DCRFieldSemantic edc:cname="4V0" edc:desc="Brown-out detection at VCC=4.0 V" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:DCRFieldSemantic edc:cname="2V7" edc:desc="Brown-out detection at VCC=2.7 V" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="EESAVE" edc:desc="Preserve EEPROM through the Chip Erase cycle" edc:nzwidth="0x1"/>
            <edc:DCRFieldDef edc:cname="SPIEN" edc:desc="Serial program downloading (SPI) enabled" edc:nzwidth="0x1"/>
            <edc:DCRFieldDef edc:cname="RSTDISBL" edc:desc="Reset Disabled (Enable PB7 as i/o pin)" edc:nzwidth="0x1"/>
          </edc:DCRMode>
        </edc:DCRModeList>
      </edc:DCRDef>
    </edc:ConfigFuseSector>
  </edc:FusesSpace>
  <edc:LockbitsSpace edc:magicoffset="0x830000">
    <edc:ConfigFuseSector edc:beginaddr="0x0" edc:endaddr="0x1" edc:regionid="LOCKBITS">
      <edc:DCRDef edc:_addr="0x0" edc:access="------nn" edc:cname="LOCKBIT" edc:factorydefault="0x0" edc:impl="0x3" edc:nzwidth="0x8" edc:unused="0x0" edc:useinchecksum="0xFF" ltx:memberofperipheral="LOCKBIT">
        <edc:DCRModeList>
          <edc:DCRMode edc:id="DS.0">
            <edc:DCRFieldDef edc:cname="LB" edc:desc="Memory Lock" edc:nzwidth="0x2">
              <edc:DCRFieldSemantic edc:cname="PROG_VER_DISABLED" edc:desc="Further programming and verification disabled" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:DCRFieldSemantic edc:cname="PROG_DISABLED" edc:desc="Further programming disabled" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:DCRFieldSemantic edc:cname="NO_LOCK" edc:desc="No memory lock features enabled" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:DCRFieldDef>
          </edc:DCRMode>
        </edc:DCRModeList>
      </edc:DCRDef>
    </edc:ConfigFuseSector>
  </edc:LockbitsSpace>
</edc:PIC>