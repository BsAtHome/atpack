<?xml version="1.0" encoding="UTF-8" standalone="no"?><edc:PIC xmlns:edc="http://crownking/edc" xmlns:atdf="http://crownking/atdf" xmlns:ltx="http://crownking/ltx" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" atdf:architecture="AVR8X" atdf:family="AVR TINY" edc:arch="avr8" edc:hasfreeze="false" edc:name="ATtiny3217" edc:procid="0x0000" xsi:schemaLocation="http://crownking/edc edc/PIC.xsd">
  <edc:Power>
    <edc:VDD edc:maxvoltage="5.5" edc:minvoltage="1.8"/>
  </edc:Power>
  <edc:Programming/>
  <edc:ArchDef edc:desc="avr8" edc:name="avr8">
    <edc:MemTraits>
      <edc:ProgramMemTraits edc:addrinc="0x1" edc:locsize="0x2" edc:wordimpl="0xFFFF" edc:wordinit="0xFFFF" edc:wordsafe="0xFFFF" edc:wordsize="0xFFFF"/>
      <edc:DataMemTraits edc:addrinc="0x1" edc:locsize="0x1" edc:wordimpl="0xFF" edc:wordinit="0xFF" edc:wordsafe="0xFF" edc:wordsize="0x1"/>
    </edc:MemTraits>
  </edc:ArchDef>
  <edc:InstructionSet edc:instructionsetid="avr8"/>
  <edc:InterruptList>
    <edc:Interrupt edc:cname="NMI" edc:desc="" edc:irq="1"/>
    <edc:Interrupt edc:cname="VLM" edc:desc="" edc:irq="2"/>
    <edc:Interrupt edc:cname="PORT" edc:desc="" edc:irq="3"/>
    <edc:Interrupt edc:cname="PORT" edc:desc="" edc:irq="4"/>
    <edc:Interrupt edc:cname="PORT" edc:desc="" edc:irq="5"/>
    <edc:Interrupt edc:cname="CNT" edc:desc="" edc:irq="6"/>
    <edc:Interrupt edc:cname="PIT" edc:desc="" edc:irq="7"/>
    <edc:Interrupt edc:cname="LUNF" edc:desc="" edc:irq="8"/>
    <edc:Interrupt edc:cname="OVF" edc:desc="" edc:irq="8"/>
    <edc:Interrupt edc:cname="HUNF" edc:desc="" edc:irq="9"/>
    <edc:Interrupt edc:cname="LCMP0" edc:desc="" edc:irq="10"/>
    <edc:Interrupt edc:cname="CMP0" edc:desc="" edc:irq="10"/>
    <edc:Interrupt edc:cname="CMP1" edc:desc="" edc:irq="11"/>
    <edc:Interrupt edc:cname="LCMP1" edc:desc="" edc:irq="11"/>
    <edc:Interrupt edc:cname="CMP2" edc:desc="" edc:irq="12"/>
    <edc:Interrupt edc:cname="LCMP2" edc:desc="" edc:irq="12"/>
    <edc:Interrupt edc:cname="INT" edc:desc="" edc:irq="13"/>
    <edc:Interrupt edc:cname="INT" edc:desc="" edc:irq="14"/>
    <edc:Interrupt edc:cname="OVF" edc:desc="" edc:irq="15"/>
    <edc:Interrupt edc:cname="TRIG" edc:desc="" edc:irq="16"/>
    <edc:Interrupt edc:cname="AC" edc:desc="" edc:irq="17"/>
    <edc:Interrupt edc:cname="AC" edc:desc="" edc:irq="18"/>
    <edc:Interrupt edc:cname="AC" edc:desc="" edc:irq="19"/>
    <edc:Interrupt edc:cname="RESRDY" edc:desc="" edc:irq="20"/>
    <edc:Interrupt edc:cname="WCOMP" edc:desc="" edc:irq="21"/>
    <edc:Interrupt edc:cname="RESRDY" edc:desc="" edc:irq="22"/>
    <edc:Interrupt edc:cname="WCOMP" edc:desc="" edc:irq="23"/>
    <edc:Interrupt edc:cname="TWIS" edc:desc="" edc:irq="24"/>
    <edc:Interrupt edc:cname="TWIM" edc:desc="" edc:irq="25"/>
    <edc:Interrupt edc:cname="INT" edc:desc="" edc:irq="26"/>
    <edc:Interrupt edc:cname="RXC" edc:desc="" edc:irq="27"/>
    <edc:Interrupt edc:cname="DRE" edc:desc="" edc:irq="28"/>
    <edc:Interrupt edc:cname="TXC" edc:desc="" edc:irq="29"/>
    <edc:Interrupt edc:cname="EE" edc:desc="" edc:irq="30"/>
  </edc:InterruptList>
  <edc:ProgramSpace>
    <edc:CodeSector edc:beginaddr="0x0" edc:endaddr="0x4000" edc:regionid="PROGMEM"/>
  </edc:ProgramSpace>
  <edc:DataSpace edc:magicoffset="0x800000">
    <edc:RegardlessOfMode>
      <edc:NMMRPlace edc:regionid="corenmmrs">
        <edc:SFRDef edc:access="nnnnnnnnnnnnnn" edc:cname="PC" edc:desc="Program Counter" edc:impl="0x3FFF" edc:mclr="00000000000000000000000000000000" edc:nmmrid="60" edc:nzwidth="0xE" edc:por="00000000000000000000000000000000"/>
      </edc:NMMRPlace>
      <edc:EEDataSector edc:beginaddr="0x1400" edc:endaddr="0x1500" edc:regionid="EEPROM"/>
      <edc:GPRDataSector edc:beginaddr="0x3800" edc:endaddr="0x4000" edc:regionid="INTERNAL_SRAM"/>
      <edc:SFRDataSector edc:beginaddr="0x0" edc:endaddr="0x100A" edc:regionid="IO">
        <edc:SFRDef edc:_addr="0x0" edc:access="nnnnnnnn" edc:cname="R0" edc:desc="General-Purpose Register" edc:impl="0xFF" edc:mclr="xxxxxxxx" edc:nzwidth="0x8" edc:por="xxxxxxxx"/>
        <edc:SFRDef edc:_addr="0x1" edc:access="nnnnnnnn" edc:cname="R1" edc:desc="General-Purpose Register" edc:impl="0xFF" edc:mclr="xxxxxxxx" edc:nzwidth="0x8" edc:por="xxxxxxxx"/>
        <edc:SFRDef edc:_addr="0x2" edc:access="nnnnnnnn" edc:cname="R2" edc:desc="General-Purpose Register" edc:impl="0xFF" edc:mclr="xxxxxxxx" edc:nzwidth="0x8" edc:por="xxxxxxxx"/>
        <edc:SFRDef edc:_addr="0x3" edc:access="nnnnnnnn" edc:cname="R3" edc:desc="General-Purpose Register" edc:impl="0xFF" edc:mclr="xxxxxxxx" edc:nzwidth="0x8" edc:por="xxxxxxxx"/>
        <edc:SFRDef edc:_addr="0x4" edc:access="nnnnnnnn" edc:cname="R4" edc:desc="General-Purpose Register" edc:impl="0xFF" edc:mclr="xxxxxxxx" edc:nzwidth="0x8" edc:por="xxxxxxxx"/>
        <edc:SFRDef edc:_addr="0x5" edc:access="nnnnnnnn" edc:cname="R5" edc:desc="General-Purpose Register" edc:impl="0xFF" edc:mclr="xxxxxxxx" edc:nzwidth="0x8" edc:por="xxxxxxxx"/>
        <edc:SFRDef edc:_addr="0x6" edc:access="nnnnnnnn" edc:cname="R6" edc:desc="General-Purpose Register" edc:impl="0xFF" edc:mclr="xxxxxxxx" edc:nzwidth="0x8" edc:por="xxxxxxxx"/>
        <edc:SFRDef edc:_addr="0x7" edc:access="nnnnnnnn" edc:cname="R7" edc:desc="General-Purpose Register" edc:impl="0xFF" edc:mclr="xxxxxxxx" edc:nzwidth="0x8" edc:por="xxxxxxxx"/>
        <edc:SFRDef edc:_addr="0x8" edc:access="nnnnnnnn" edc:cname="R8" edc:desc="General-Purpose Register" edc:impl="0xFF" edc:mclr="xxxxxxxx" edc:nzwidth="0x8" edc:por="xxxxxxxx"/>
        <edc:SFRDef edc:_addr="0x9" edc:access="nnnnnnnn" edc:cname="R9" edc:desc="General-Purpose Register" edc:impl="0xFF" edc:mclr="xxxxxxxx" edc:nzwidth="0x8" edc:por="xxxxxxxx"/>
        <edc:SFRDef edc:_addr="0xA" edc:access="nnnnnnnn" edc:cname="R10" edc:desc="General-Purpose Register" edc:impl="0xFF" edc:mclr="xxxxxxxx" edc:nzwidth="0x8" edc:por="xxxxxxxx"/>
        <edc:SFRDef edc:_addr="0xB" edc:access="nnnnnnnn" edc:cname="R11" edc:desc="General-Purpose Register" edc:impl="0xFF" edc:mclr="xxxxxxxx" edc:nzwidth="0x8" edc:por="xxxxxxxx"/>
        <edc:SFRDef edc:_addr="0xC" edc:access="nnnnnnnn" edc:cname="R12" edc:desc="General-Purpose Register" edc:impl="0xFF" edc:mclr="xxxxxxxx" edc:nzwidth="0x8" edc:por="xxxxxxxx"/>
        <edc:SFRDef edc:_addr="0xD" edc:access="nnnnnnnn" edc:cname="R13" edc:desc="General-Purpose Register" edc:impl="0xFF" edc:mclr="xxxxxxxx" edc:nzwidth="0x8" edc:por="xxxxxxxx"/>
        <edc:SFRDef edc:_addr="0xE" edc:access="nnnnnnnn" edc:cname="R14" edc:desc="General-Purpose Register" edc:impl="0xFF" edc:mclr="xxxxxxxx" edc:nzwidth="0x8" edc:por="xxxxxxxx"/>
        <edc:SFRDef edc:_addr="0xF" edc:access="nnnnnnnn" edc:cname="R15" edc:desc="General-Purpose Register" edc:impl="0xFF" edc:mclr="xxxxxxxx" edc:nzwidth="0x8" edc:por="xxxxxxxx"/>
        <edc:SFRDef edc:_addr="0x10" edc:access="nnnnnnnn" edc:cname="R16" edc:desc="General-Purpose Register" edc:impl="0xFF" edc:mclr="xxxxxxxx" edc:nzwidth="0x8" edc:por="xxxxxxxx"/>
        <edc:SFRDef edc:_addr="0x11" edc:access="nnnnnnnn" edc:cname="R17" edc:desc="General-Purpose Register" edc:impl="0xFF" edc:mclr="xxxxxxxx" edc:nzwidth="0x8" edc:por="xxxxxxxx"/>
        <edc:SFRDef edc:_addr="0x12" edc:access="nnnnnnnn" edc:cname="R18" edc:desc="General-Purpose Register" edc:impl="0xFF" edc:mclr="xxxxxxxx" edc:nzwidth="0x8" edc:por="xxxxxxxx"/>
        <edc:SFRDef edc:_addr="0x13" edc:access="nnnnnnnn" edc:cname="R19" edc:desc="General-Purpose Register" edc:impl="0xFF" edc:mclr="xxxxxxxx" edc:nzwidth="0x8" edc:por="xxxxxxxx"/>
        <edc:SFRDef edc:_addr="0x14" edc:access="nnnnnnnn" edc:cname="R20" edc:desc="General-Purpose Register" edc:impl="0xFF" edc:mclr="xxxxxxxx" edc:nzwidth="0x8" edc:por="xxxxxxxx"/>
        <edc:SFRDef edc:_addr="0x15" edc:access="nnnnnnnn" edc:cname="R21" edc:desc="General-Purpose Register" edc:impl="0xFF" edc:mclr="xxxxxxxx" edc:nzwidth="0x8" edc:por="xxxxxxxx"/>
        <edc:SFRDef edc:_addr="0x16" edc:access="nnnnnnnn" edc:cname="R22" edc:desc="General-Purpose Register" edc:impl="0xFF" edc:mclr="xxxxxxxx" edc:nzwidth="0x8" edc:por="xxxxxxxx"/>
        <edc:SFRDef edc:_addr="0x17" edc:access="nnnnnnnn" edc:cname="R23" edc:desc="General-Purpose Register" edc:impl="0xFF" edc:mclr="xxxxxxxx" edc:nzwidth="0x8" edc:por="xxxxxxxx"/>
        <edc:SFRDef edc:_addr="0x18" edc:access="nnnnnnnn" edc:cname="R24" edc:desc="General-Purpose Register" edc:impl="0xFF" edc:mclr="xxxxxxxx" edc:nzwidth="0x8" edc:por="xxxxxxxx"/>
        <edc:SFRDef edc:_addr="0x19" edc:access="nnnnnnnn" edc:cname="R25" edc:desc="General-Purpose Register" edc:impl="0xFF" edc:mclr="xxxxxxxx" edc:nzwidth="0x8" edc:por="xxxxxxxx"/>
        <edc:SFRDef edc:_addr="0x1A" edc:access="nnnnnnnn" edc:cname="R26" edc:desc="General-Purpose Register" edc:impl="0xFF" edc:mclr="xxxxxxxx" edc:nzwidth="0x8" edc:por="xxxxxxxx"/>
        <edc:SFRDef edc:_addr="0x1B" edc:access="nnnnnnnn" edc:cname="R27" edc:desc="General-Purpose Register" edc:impl="0xFF" edc:mclr="xxxxxxxx" edc:nzwidth="0x8" edc:por="xxxxxxxx"/>
        <edc:SFRDef edc:_addr="0x1C" edc:access="nnnnnnnn" edc:cname="R28" edc:desc="General-Purpose Register" edc:impl="0xFF" edc:mclr="xxxxxxxx" edc:nzwidth="0x8" edc:por="xxxxxxxx"/>
        <edc:SFRDef edc:_addr="0x1D" edc:access="nnnnnnnn" edc:cname="R29" edc:desc="General-Purpose Register" edc:impl="0xFF" edc:mclr="xxxxxxxx" edc:nzwidth="0x8" edc:por="xxxxxxxx"/>
        <edc:SFRDef edc:_addr="0x1E" edc:access="nnnnnnnn" edc:cname="R30" edc:desc="General-Purpose Register" edc:impl="0xFF" edc:mclr="xxxxxxxx" edc:nzwidth="0x8" edc:por="xxxxxxxx"/>
        <edc:SFRDef edc:_addr="0x1F" edc:access="nnnnnnnn" edc:cname="R31" edc:desc="General-Purpose Register" edc:impl="0xFF" edc:mclr="xxxxxxxx" edc:nzwidth="0x8" edc:por="xxxxxxxx"/>
        <edc:AdjustPoint edc:_addr="0x20" edc:offset="0x14"/>
        <edc:SFRDef edc:_addr="0x34" edc:access="nnnnnnnn" edc:cname="CCP" edc:nzwidth="0x8" ltx:memberofperipheral="CPU">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="CCP" edc:desc="CCP signature" edc:nzwidth="0x8">
                <edc:SFRFieldSemantic edc:cname="SPM" edc:desc="SPM Instruction Protection" edc:when="(field &amp; 0xFF) == 0x9D"/>
                <edc:SFRFieldSemantic edc:cname="IOREG" edc:desc="IO Register Protection" edc:when="(field &amp; 0xFF) == 0xD8"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:_addr="0x35" edc:offset="0x8"/>
        <edc:SFRDef edc:_addr="0x3D" edc:access="nnnnnnnn" edc:cname="SPL" edc:nzwidth="0x8" ltx:memberofperipheral="CPU"/>
        <edc:SFRDef edc:_addr="0x3E" edc:access="nnnnnnnn" edc:cname="SPH" edc:nzwidth="0x8" ltx:memberofperipheral="CPU"/>
        <edc:SFRDef edc:_addr="0x3F" edc:access="nnnnnnnn" edc:cname="SREG" edc:nzwidth="0x8" ltx:memberofperipheral="CPU">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="C" edc:desc="Carry Flag" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="Z" edc:desc="Zero Flag" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="N" edc:desc="Negative Flag" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="V" edc:desc="Two's Complement Overflow Flag" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="S" edc:desc="N Exclusive Or V Flag" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="H" edc:desc="Half Carry Flag" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="T" edc:desc="Transfer Bit" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="I" edc:desc="Global Interrupt Enable Flag" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x40" edc:access="--nnnnnn" edc:cname="RSTFR" edc:nzwidth="0x8" ltx:memberofperipheral="RSTCTRL">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="PORF" edc:desc="Power on Reset flag" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="BORF" edc:desc="Brown out detector Reset flag" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="EXTRF" edc:desc="External Reset flag" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="WDRF" edc:desc="Watch dog Reset flag" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="SWRF" edc:desc="Software Reset flag" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="UPDIRF" edc:desc="UPDI Reset flag" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x41" edc:access="-------n" edc:cname="SWRR" edc:nzwidth="0x8" ltx:memberofperipheral="RSTCTRL">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="SWRE" edc:desc="Software reset enable" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:_addr="0x42" edc:offset="0xE"/>
        <edc:SFRDef edc:_addr="0x50" edc:access="-----nnn" edc:cname="CTRLA" edc:nzwidth="0x8" ltx:memberofperipheral="SLPCTRL">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="SEN" edc:desc="Sleep enable" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="SMODE" edc:desc="Sleep mode" edc:nzwidth="0x2">
                <edc:SFRFieldSemantic edc:cname="IDLE" edc:desc="Idle mode" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="STDBY" edc:desc="Standby Mode" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="PDOWN" edc:desc="Power-down Mode" edc:when="(field &amp; 0x3) == 0x02"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:_addr="0x51" edc:offset="0xF"/>
        <edc:SFRDef edc:_addr="0x60" edc:access="n-----nn" edc:cname="MCLKCTRLA" edc:nzwidth="0x8" ltx:memberofperipheral="CLKCTRL">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="CLKSEL" edc:desc="clock select" edc:nzwidth="0x2">
                <edc:SFRFieldSemantic edc:cname="OSC20M" edc:desc="20MHz internal oscillator" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="OSCULP32K" edc:desc="32KHz internal Ultra Low Power oscillator" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="XOSC32K" edc:desc="32.768kHz external crystal oscillator" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="EXTCLK" edc:desc="External clock" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="0x5"/>
              <edc:SFRFieldDef edc:cname="CLKOUT" edc:desc="System clock out" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x61" edc:access="---nnnnn" edc:cname="MCLKCTRLB" edc:nzwidth="0x8" ltx:memberofperipheral="CLKCTRL">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="PEN" edc:desc="Prescaler enable" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="PDIV" edc:desc="Prescaler division" edc:nzwidth="0x4">
                <edc:SFRFieldSemantic edc:cname="2X" edc:desc="2X" edc:when="(field &amp; 0xF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="4X" edc:desc="4X" edc:when="(field &amp; 0xF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="8X" edc:desc="8X" edc:when="(field &amp; 0xF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="16X" edc:desc="16X" edc:when="(field &amp; 0xF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="32X" edc:desc="32X" edc:when="(field &amp; 0xF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="64X" edc:desc="64X" edc:when="(field &amp; 0xF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="6X" edc:desc="6X" edc:when="(field &amp; 0xF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="10X" edc:desc="10X" edc:when="(field &amp; 0xF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="12X" edc:desc="12X" edc:when="(field &amp; 0xF) == 0x0A"/>
                <edc:SFRFieldSemantic edc:cname="24X" edc:desc="24X" edc:when="(field &amp; 0xF) == 0x0B"/>
                <edc:SFRFieldSemantic edc:cname="48X" edc:desc="48X" edc:when="(field &amp; 0xF) == 0x0C"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x62" edc:access="-------n" edc:cname="MCLKLOCK" edc:nzwidth="0x8" ltx:memberofperipheral="CLKCTRL">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="LOCKEN" edc:desc="lock ebable" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x63" edc:access="nnnn---n" edc:cname="MCLKSTATUS" edc:nzwidth="0x8" ltx:memberofperipheral="CLKCTRL">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="SOSC" edc:desc="System Oscillator changing" edc:nzwidth="0x1"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="OSC20MS" edc:desc="20MHz oscillator status" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="OSC32KS" edc:desc="32KHz oscillator status" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="XOSC32KS" edc:desc="32.768 kHz Crystal Oscillator status" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="EXTS" edc:desc="External Clock status" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:_addr="0x64" edc:offset="0xC"/>
        <edc:SFRDef edc:_addr="0x70" edc:access="------n-" edc:cname="OSC20MCTRLA" edc:nzwidth="0x8" ltx:memberofperipheral="CLKCTRL">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:desc="Run standby" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x71" edc:access="nnnnnnnn" edc:cname="OSC20MCALIBA" edc:nzwidth="0x8" ltx:memberofperipheral="CLKCTRL">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="CAL20M" edc:desc="Calibration" edc:nzwidth="0x6"/>
              <edc:SFRFieldDef edc:cname="CALSEL20M" edc:desc="Calibration freq select" edc:nzwidth="0x2"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x72" edc:access="n---nnnn" edc:cname="OSC20MCALIBB" edc:nzwidth="0x8" ltx:memberofperipheral="CLKCTRL">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="TEMPCAL20M" edc:desc="Oscillator temperature coefficient" edc:nzwidth="0x4"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="LOCK" edc:desc="Lock" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:_addr="0x73" edc:offset="0x5"/>
        <edc:SFRDef edc:_addr="0x78" edc:access="------n-" edc:cname="OSC32KCTRLA" edc:nzwidth="0x8" ltx:memberofperipheral="CLKCTRL">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:desc="Run standby" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:_addr="0x79" edc:offset="0x3"/>
        <edc:SFRDef edc:_addr="0x7C" edc:access="--nn-nnn" edc:cname="XOSC32KCTRLA" edc:nzwidth="0x8" ltx:memberofperipheral="CLKCTRL">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="ENABLE" edc:desc="Enable" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:desc="Run standby" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="SEL" edc:desc="Select" edc:nzwidth="0x1"/>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="CSUT" edc:desc="Crystal startup time" edc:nzwidth="0x2">
                <edc:SFRFieldSemantic edc:cname="1K" edc:desc="1K cycles" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="16K" edc:desc="16K cycles" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="32K" edc:desc="32K cycles" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="64K" edc:desc="64K cycles" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:_addr="0x7D" edc:offset="0x3"/>
        <edc:SFRDef edc:_addr="0x80" edc:access="---nnnnn" edc:cname="CTRLA" edc:nzwidth="0x8" ltx:memberofperipheral="BOD">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="SLEEP" edc:desc="Operation in sleep mode" edc:nzwidth="0x2">
                <edc:SFRFieldSemantic edc:cname="DIS" edc:desc="Disabled" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Enabled" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="SAMPLED" edc:desc="Sampled" edc:when="(field &amp; 0x3) == 0x02"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="ACTIVE" edc:desc="Operation in active mode" edc:nzwidth="0x2">
                <edc:SFRFieldSemantic edc:cname="DIS" edc:desc="Disabled" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Enabled" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="SAMPLED" edc:desc="Sampled" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="ENWAKE" edc:desc="Enabled with wake-up halted until BOD is ready" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="SAMPFREQ" edc:desc="Sample frequency" edc:nzwidth="0x1">
                <edc:SFRFieldSemantic edc:cname="1KHZ" edc:desc="1kHz sampling frequency" edc:when="(field &amp; 0x1) == 0x0"/>
                <edc:SFRFieldSemantic edc:cname="125HZ" edc:desc="125kHz sampling frequency" edc:when="(field &amp; 0x1) == 0x1"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x81" edc:access="-----nnn" edc:cname="CTRLB" edc:nzwidth="0x8" ltx:memberofperipheral="BOD">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="LVL" edc:desc="Bod level" edc:nzwidth="0x3">
                <edc:SFRFieldSemantic edc:cname="BODLEVEL0" edc:desc="1.8 V" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BODLEVEL1" edc:desc="2.1 V" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="BODLEVEL2" edc:desc="2.6 V" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="BODLEVEL3" edc:desc="2.9 V" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="BODLEVEL4" edc:desc="3.3 V" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="BODLEVEL5" edc:desc="3.7 V" edc:when="(field &amp; 0x7) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="BODLEVEL6" edc:desc="4.0 V" edc:when="(field &amp; 0x7) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="BODLEVEL7" edc:desc="4.2 V" edc:when="(field &amp; 0x7) == 0x07"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:_addr="0x82" edc:offset="0x6"/>
        <edc:SFRDef edc:_addr="0x88" edc:access="------nn" edc:cname="VLMCTRLA" edc:nzwidth="0x8" ltx:memberofperipheral="BOD">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="VLMLVL" edc:desc="voltage level monitor level" edc:nzwidth="0x2">
                <edc:SFRFieldSemantic edc:cname="5ABOVE" edc:desc="VLM threshold 5% above BOD level" edc:when="(field &amp; 0x3) == 0x0"/>
                <edc:SFRFieldSemantic edc:cname="15ABOVE" edc:desc="VLM threshold 15% above BOD level" edc:when="(field &amp; 0x3) == 0x1"/>
                <edc:SFRFieldSemantic edc:cname="25ABOVE" edc:desc="VLM threshold 25% above BOD level" edc:when="(field &amp; 0x3) == 0x2"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x89" edc:access="-----nnn" edc:cname="INTCTRL" edc:nzwidth="0x8" ltx:memberofperipheral="BOD">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="VLMIE" edc:desc="voltage level monitor interrrupt enable" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="VLMCFG" edc:desc="Configuration" edc:nzwidth="0x2">
                <edc:SFRFieldSemantic edc:cname="BELOW" edc:desc="Interrupt when supply goes below VLM level" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="ABOVE" edc:desc="Interrupt when supply goes above VLM level" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="CROSS" edc:desc="Interrupt when supply crosses VLM level" edc:when="(field &amp; 0x3) == 0x02"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x8A" edc:access="-------n" edc:cname="INTFLAGS" edc:nzwidth="0x8" ltx:memberofperipheral="BOD">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="VLMIF" edc:desc="Voltage level monitor interrupt flag" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x8B" edc:access="-------n" edc:cname="STATUS" edc:nzwidth="0x8" ltx:memberofperipheral="BOD">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="VLMS" edc:desc="Voltage level monitor status" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:_addr="0x8C" edc:offset="0x14"/>
        <edc:SFRDef edc:_addr="0xA0" edc:access="-nnn-nnn" edc:cname="CTRLA" edc:nzwidth="0x8" ltx:memberofperipheral="VREF">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="DAC0REFSEL" edc:desc="DAC0/AC0 reference select" edc:nzwidth="0x3">
                <edc:SFRFieldSemantic edc:cname="0V55" edc:desc="Voltage reference at 0.55V" edc:when="(field &amp; 0x7) == 0x0"/>
                <edc:SFRFieldSemantic edc:cname="1V1" edc:desc="Voltage reference at 1.1V" edc:when="(field &amp; 0x7) == 0x1"/>
                <edc:SFRFieldSemantic edc:cname="2V5" edc:desc="Voltage reference at 2.5V" edc:when="(field &amp; 0x7) == 0x2"/>
                <edc:SFRFieldSemantic edc:cname="4V34" edc:desc="Voltage reference at 4.34V" edc:when="(field &amp; 0x7) == 0x3"/>
                <edc:SFRFieldSemantic edc:cname="1V5" edc:desc="Voltage reference at 1.5V" edc:when="(field &amp; 0x7) == 0x4"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="ADC0REFSEL" edc:desc="ADC0 reference select" edc:nzwidth="0x3">
                <edc:SFRFieldSemantic edc:cname="0V55" edc:desc="Voltage reference at 0.55V" edc:when="(field &amp; 0x7) == 0x0"/>
                <edc:SFRFieldSemantic edc:cname="1V1" edc:desc="Voltage reference at 1.1V" edc:when="(field &amp; 0x7) == 0x1"/>
                <edc:SFRFieldSemantic edc:cname="2V5" edc:desc="Voltage reference at 2.5V" edc:when="(field &amp; 0x7) == 0x2"/>
                <edc:SFRFieldSemantic edc:cname="4V34" edc:desc="Voltage reference at 4.34V" edc:when="(field &amp; 0x7) == 0x3"/>
                <edc:SFRFieldSemantic edc:cname="1V5" edc:desc="Voltage reference at 1.5V" edc:when="(field &amp; 0x7) == 0x4"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0xA1" edc:access="--nnn-nn" edc:cname="CTRLB" edc:nzwidth="0x8" ltx:memberofperipheral="VREF">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="DAC0REFEN" edc:desc="DAC0/AC0 reference enable" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="ADC0REFEN" edc:desc="ADC0 reference enable" edc:nzwidth="0x1"/>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="DAC1REFEN" edc:desc="DAC1/AC1 reference enable" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="ADC1REFEN" edc:desc="ADC1 reference enable" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="DAC2REFEN" edc:desc="DAC2/AC2 reference enable" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0xA2" edc:access="-nnn-nnn" edc:cname="CTRLC" edc:nzwidth="0x8" ltx:memberofperipheral="VREF">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="DAC1REFSEL" edc:desc="DAC1/AC1 reference select" edc:nzwidth="0x3">
                <edc:SFRFieldSemantic edc:cname="0V55" edc:desc="Voltage reference at 0.55V" edc:when="(field &amp; 0x7) == 0x0"/>
                <edc:SFRFieldSemantic edc:cname="1V1" edc:desc="Voltage reference at 1.1V" edc:when="(field &amp; 0x7) == 0x1"/>
                <edc:SFRFieldSemantic edc:cname="2V5" edc:desc="Voltage reference at 2.5V" edc:when="(field &amp; 0x7) == 0x2"/>
                <edc:SFRFieldSemantic edc:cname="4V34" edc:desc="Voltage reference at 4.34V" edc:when="(field &amp; 0x7) == 0x3"/>
                <edc:SFRFieldSemantic edc:cname="1V5" edc:desc="Voltage reference at 1.5V" edc:when="(field &amp; 0x7) == 0x4"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="ADC1REFSEL" edc:desc="ADC1 reference select" edc:nzwidth="0x3">
                <edc:SFRFieldSemantic edc:cname="0V55" edc:desc="Voltage reference at 0.55V" edc:when="(field &amp; 0x7) == 0x0"/>
                <edc:SFRFieldSemantic edc:cname="1V1" edc:desc="Voltage reference at 1.1V" edc:when="(field &amp; 0x7) == 0x1"/>
                <edc:SFRFieldSemantic edc:cname="2V5" edc:desc="Voltage reference at 2.5V" edc:when="(field &amp; 0x7) == 0x2"/>
                <edc:SFRFieldSemantic edc:cname="4V34" edc:desc="Voltage reference at 4.34V" edc:when="(field &amp; 0x7) == 0x3"/>
                <edc:SFRFieldSemantic edc:cname="1V5" edc:desc="Voltage reference at 1.5V" edc:when="(field &amp; 0x7) == 0x4"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0xA3" edc:access="-----nnn" edc:cname="CTRLD" edc:nzwidth="0x8" ltx:memberofperipheral="VREF">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="DAC2REFSEL" edc:desc="DAC2/AC2 reference select" edc:nzwidth="0x3">
                <edc:SFRFieldSemantic edc:cname="0V55" edc:desc="Voltage reference at 0.55V" edc:when="(field &amp; 0x7) == 0x0"/>
                <edc:SFRFieldSemantic edc:cname="1V1" edc:desc="Voltage reference at 1.1V" edc:when="(field &amp; 0x7) == 0x1"/>
                <edc:SFRFieldSemantic edc:cname="2V5" edc:desc="Voltage reference at 2.5V" edc:when="(field &amp; 0x7) == 0x2"/>
                <edc:SFRFieldSemantic edc:cname="4V34" edc:desc="Voltage reference at 4.34V" edc:when="(field &amp; 0x7) == 0x3"/>
                <edc:SFRFieldSemantic edc:cname="1V5" edc:desc="Voltage reference at 1.5V" edc:when="(field &amp; 0x7) == 0x4"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:_addr="0xA4" edc:offset="0x5C"/>
        <edc:SFRDef edc:_addr="0x100" edc:access="nnnnnnnn" edc:cname="CTRLA" edc:nzwidth="0x8" ltx:memberofperipheral="WDT">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="PERIOD" edc:desc="Period" edc:nzwidth="0x4">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off" edc:when="(field &amp; 0xF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="8CLK" edc:desc="8 cycles (8ms)" edc:when="(field &amp; 0xF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="16CLK" edc:desc="16 cycles (16ms)" edc:when="(field &amp; 0xF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="32CLK" edc:desc="32 cycles (32ms)" edc:when="(field &amp; 0xF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="64CLK" edc:desc="64 cycles (64ms)" edc:when="(field &amp; 0xF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="128CLK" edc:desc="128 cycles (0.128s)" edc:when="(field &amp; 0xF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="256CLK" edc:desc="256 cycles (0.256s)" edc:when="(field &amp; 0xF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="512CLK" edc:desc="512 cycles (0.512s)" edc:when="(field &amp; 0xF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="1KCLK" edc:desc="1K cycles (1.0s)" edc:when="(field &amp; 0xF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="2KCLK" edc:desc="2K cycles (2.0s)" edc:when="(field &amp; 0xF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="4KCLK" edc:desc="4K cycles (4.1s)" edc:when="(field &amp; 0xF) == 0x0A"/>
                <edc:SFRFieldSemantic edc:cname="8KCLK" edc:desc="8K cycles (8.2s)" edc:when="(field &amp; 0xF) == 0x0B"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="WINDOW" edc:desc="Window" edc:nzwidth="0x4">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off" edc:when="(field &amp; 0xF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="8CLK" edc:desc="8 cycles (8ms)" edc:when="(field &amp; 0xF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="16CLK" edc:desc="16 cycles (16ms)" edc:when="(field &amp; 0xF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="32CLK" edc:desc="32 cycles (32ms)" edc:when="(field &amp; 0xF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="64CLK" edc:desc="64 cycles (64ms)" edc:when="(field &amp; 0xF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="128CLK" edc:desc="128 cycles (0.128s)" edc:when="(field &amp; 0xF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="256CLK" edc:desc="256 cycles (0.256s)" edc:when="(field &amp; 0xF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="512CLK" edc:desc="512 cycles (0.512s)" edc:when="(field &amp; 0xF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="1KCLK" edc:desc="1K cycles (1.0s)" edc:when="(field &amp; 0xF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="2KCLK" edc:desc="2K cycles (2.0s)" edc:when="(field &amp; 0xF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="4KCLK" edc:desc="4K cycles (4.1s)" edc:when="(field &amp; 0xF) == 0x0A"/>
                <edc:SFRFieldSemantic edc:cname="8KCLK" edc:desc="8K cycles (8.2s)" edc:when="(field &amp; 0xF) == 0x0B"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x101" edc:access="n------n" edc:cname="STATUS" edc:nzwidth="0x8" ltx:memberofperipheral="WDT">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="SYNCBUSY" edc:desc="Syncronization busy" edc:nzwidth="0x1"/>
              <edc:AdjustPoint edc:offset="0x6"/>
              <edc:SFRFieldDef edc:cname="LOCK" edc:desc="Lock enable" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:_addr="0x102" edc:offset="0xE"/>
        <edc:SFRDef edc:_addr="0x110" edc:access="-nn----n" edc:cname="CTRLA" edc:nzwidth="0x8" ltx:memberofperipheral="CPUINT">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="LVL0RR" edc:desc="Round-robin Scheduling Enable" edc:nzwidth="0x1"/>
              <edc:AdjustPoint edc:offset="0x4"/>
              <edc:SFRFieldDef edc:cname="CVT" edc:desc="Compact Vector Table" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="IVSEL" edc:desc="Interrupt Vector Select" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x111" edc:access="n-----nn" edc:cname="STATUS" edc:nzwidth="0x8" ltx:memberofperipheral="CPUINT">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="LVL0EX" edc:desc="Level 0 Interrupt Executing" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="LVL1EX" edc:desc="Level 1 Interrupt Executing" edc:nzwidth="0x1"/>
              <edc:AdjustPoint edc:offset="0x5"/>
              <edc:SFRFieldDef edc:cname="NMIEX" edc:desc="Non-maskable Interrupt Executing" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x112" edc:access="nnnnnnnn" edc:cname="LVL0PRI" edc:nzwidth="0x8" ltx:memberofperipheral="CPUINT">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="LVL0PRI" edc:desc="Interrupt Level Priority" edc:nzwidth="0x8"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x113" edc:access="nnnnnnnn" edc:cname="LVL1VEC" edc:nzwidth="0x8" ltx:memberofperipheral="CPUINT">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="LVL1VEC" edc:desc="Interrupt Vector with High Priority" edc:nzwidth="0x8"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:_addr="0x114" edc:offset="0xC"/>
        <edc:SFRDef edc:_addr="0x120" edc:access="n-----nn" edc:cname="CTRLA" edc:nzwidth="0x8" ltx:memberofperipheral="CRCSCAN">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="ENABLE" edc:desc="Enable CRC scan" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="NMIEN" edc:desc="Enable NMI Trigger" edc:nzwidth="0x1"/>
              <edc:AdjustPoint edc:offset="0x5"/>
              <edc:SFRFieldDef edc:cname="RESET" edc:desc="Reset CRC scan" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x121" edc:access="--nn--nn" edc:cname="CTRLB" edc:nzwidth="0x8" ltx:memberofperipheral="CRCSCAN">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="SRC" edc:desc="CRC Source" edc:nzwidth="0x2">
                <edc:SFRFieldSemantic edc:cname="FLASH" edc:desc="CRC on entire flash" edc:when="(field &amp; 0x3) == 0x0"/>
                <edc:SFRFieldSemantic edc:cname="APPLICATION" edc:desc="CRC on boot and appl section of flash" edc:when="(field &amp; 0x3) == 0x1"/>
                <edc:SFRFieldSemantic edc:cname="BOOT" edc:desc="CRC on boot section of flash" edc:when="(field &amp; 0x3) == 0x2"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="0x2"/>
              <edc:SFRFieldDef edc:cname="MODE" edc:desc="CRC Flash Access Mode" edc:nzwidth="0x2">
                <edc:SFRFieldSemantic edc:cname="PRIORITY" edc:desc="Priority to flash" edc:when="(field &amp; 0x3) == 0x0"/>
                <edc:SFRFieldSemantic edc:cname="RESERVED" edc:desc="Reserved" edc:when="(field &amp; 0x3) == 0x1"/>
                <edc:SFRFieldSemantic edc:cname="BACKGROUND" edc:desc="Lowest priority to flash" edc:when="(field &amp; 0x3) == 0x2"/>
                <edc:SFRFieldSemantic edc:cname="CONTINUOUS" edc:desc="Continuous checks in background" edc:when="(field &amp; 0x3) == 0x3"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x122" edc:access="------rr" edc:cname="STATUS" edc:nzwidth="0x8" ltx:memberofperipheral="CRCSCAN">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="BUSY" edc:desc="CRC Busy" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="OK" edc:desc="CRC Ok" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:_addr="0x123" edc:offset="0x1D"/>
        <edc:SFRDef edc:_addr="0x140" edc:access="nnnnn--n" edc:cname="CTRLA" edc:nzwidth="0x8" ltx:memberofperipheral="RTC">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="RTCEN" edc:desc="Enable" edc:nzwidth="0x1"/>
              <edc:AdjustPoint edc:offset="0x2"/>
              <edc:SFRFieldDef edc:cname="PRESCALER" edc:desc="Prescaling Factor" edc:nzwidth="0x4">
                <edc:SFRFieldSemantic edc:cname="DIV1" edc:desc="RTC Clock / 1" edc:when="(field &amp; 0xF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="DIV2" edc:desc="RTC Clock / 2" edc:when="(field &amp; 0xF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="DIV4" edc:desc="RTC Clock / 4" edc:when="(field &amp; 0xF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="DIV8" edc:desc="RTC Clock / 8" edc:when="(field &amp; 0xF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="DIV16" edc:desc="RTC Clock / 16" edc:when="(field &amp; 0xF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="DIV32" edc:desc="RTC Clock / 32" edc:when="(field &amp; 0xF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="DIV64" edc:desc="RTC Clock / 64" edc:when="(field &amp; 0xF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="DIV128" edc:desc="RTC Clock / 128" edc:when="(field &amp; 0xF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="DIV256" edc:desc="RTC Clock / 256" edc:when="(field &amp; 0xF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="DIV512" edc:desc="RTC Clock / 512" edc:when="(field &amp; 0xF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="DIV1024" edc:desc="RTC Clock / 1024" edc:when="(field &amp; 0xF) == 0x0A"/>
                <edc:SFRFieldSemantic edc:cname="DIV2048" edc:desc="RTC Clock / 2048" edc:when="(field &amp; 0xF) == 0x0B"/>
                <edc:SFRFieldSemantic edc:cname="DIV4096" edc:desc="RTC Clock / 4096" edc:when="(field &amp; 0xF) == 0x0C"/>
                <edc:SFRFieldSemantic edc:cname="DIV8192" edc:desc="RTC Clock / 8192" edc:when="(field &amp; 0xF) == 0x0D"/>
                <edc:SFRFieldSemantic edc:cname="DIV16384" edc:desc="RTC Clock / 16384" edc:when="(field &amp; 0xF) == 0x0E"/>
                <edc:SFRFieldSemantic edc:cname="DIV32768" edc:desc="RTC Clock / 32768" edc:when="(field &amp; 0xF) == 0x0F"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:desc="Run In Standby" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x141" edc:access="----rrrr" edc:cname="STATUS" edc:nzwidth="0x8" ltx:memberofperipheral="RTC">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="CTRLABUSY" edc:desc="CTRLA Synchronization Busy Flag" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="CNTBUSY" edc:desc="Count Synchronization Busy Flag" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="PERBUSY" edc:desc="Period Synchronization Busy Flag" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="CMPBUSY" edc:desc="Comparator Synchronization Busy Flag" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x142" edc:access="------nn" edc:cname="INTCTRL" edc:nzwidth="0x8" ltx:memberofperipheral="RTC">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="OVF" edc:desc="Overflow Interrupt enable" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="CMP" edc:desc="Compare Match Interrupt enable" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x143" edc:access="------nn" edc:cname="INTFLAGS" edc:nzwidth="0x8" ltx:memberofperipheral="RTC">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="OVF" edc:desc="Overflow Interrupt Flag" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="CMP" edc:desc="Compare Match Interrupt" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x144" edc:access="nnnnnnnn" edc:cname="TEMP" edc:nzwidth="0x8" ltx:memberofperipheral="RTC"/>
        <edc:SFRDef edc:_addr="0x145" edc:access="-------n" edc:cname="DBGCTRL" edc:nzwidth="0x8" ltx:memberofperipheral="RTC">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="DBGRUN" edc:desc="Run in debug" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:_addr="0x146" edc:offset="0x1"/>
        <edc:SFRDef edc:_addr="0x147" edc:access="------nn" edc:cname="CLKSEL" edc:nzwidth="0x8" ltx:memberofperipheral="RTC">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="CLKSEL" edc:desc="Clock Select" edc:nzwidth="0x2">
                <edc:SFRFieldSemantic edc:cname="INT32K" edc:desc="Internal 32kHz OSC" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="INT1K" edc:desc="Internal 1kHz OSC" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="TOSC32K" edc:desc="32KHz Crystal OSC" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="EXTCLK" edc:desc="External Clock" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x148" edc:access="nnnnnnnnnnnnnnnn" edc:cname="CNT" edc:nzwidth="0x10" ltx:memberofperipheral="RTC"/>
        <edc:SFRDef edc:_addr="0x14A" edc:access="nnnnnnnnnnnnnnnn" edc:cname="PER" edc:nzwidth="0x10" ltx:memberofperipheral="RTC"/>
        <edc:SFRDef edc:_addr="0x14C" edc:access="nnnnnnnnnnnnnnnn" edc:cname="CMP" edc:nzwidth="0x10" ltx:memberofperipheral="RTC"/>
        <edc:AdjustPoint edc:_addr="0x14E" edc:offset="0x2"/>
        <edc:SFRDef edc:_addr="0x150" edc:access="-nnnn--n" edc:cname="PITCTRLA" edc:nzwidth="0x8" ltx:memberofperipheral="RTC">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="PITEN" edc:desc="Enable" edc:nzwidth="0x1"/>
              <edc:AdjustPoint edc:offset="0x2"/>
              <edc:SFRFieldDef edc:cname="PERIOD" edc:desc="Period" edc:nzwidth="0x4">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off" edc:when="(field &amp; 0xF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="CYC4" edc:desc="RTC Clock Cycles 4" edc:when="(field &amp; 0xF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="CYC8" edc:desc="RTC Clock Cycles 8" edc:when="(field &amp; 0xF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="CYC16" edc:desc="RTC Clock Cycles 16" edc:when="(field &amp; 0xF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="CYC32" edc:desc="RTC Clock Cycles 32" edc:when="(field &amp; 0xF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="CYC64" edc:desc="RTC Clock Cycles 64" edc:when="(field &amp; 0xF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="CYC128" edc:desc="RTC Clock Cycles 128" edc:when="(field &amp; 0xF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="CYC256" edc:desc="RTC Clock Cycles 256" edc:when="(field &amp; 0xF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="CYC512" edc:desc="RTC Clock Cycles 512" edc:when="(field &amp; 0xF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="CYC1024" edc:desc="RTC Clock Cycles 1024" edc:when="(field &amp; 0xF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="CYC2048" edc:desc="RTC Clock Cycles 2048" edc:when="(field &amp; 0xF) == 0x0A"/>
                <edc:SFRFieldSemantic edc:cname="CYC4096" edc:desc="RTC Clock Cycles 4096" edc:when="(field &amp; 0xF) == 0x0B"/>
                <edc:SFRFieldSemantic edc:cname="CYC8192" edc:desc="RTC Clock Cycles 8192" edc:when="(field &amp; 0xF) == 0x0C"/>
                <edc:SFRFieldSemantic edc:cname="CYC16384" edc:desc="RTC Clock Cycles 16384" edc:when="(field &amp; 0xF) == 0x0D"/>
                <edc:SFRFieldSemantic edc:cname="CYC32768" edc:desc="RTC Clock Cycles 32768" edc:when="(field &amp; 0xF) == 0x0E"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x151" edc:access="-------r" edc:cname="PITSTATUS" edc:nzwidth="0x8" ltx:memberofperipheral="RTC">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="CTRLBUSY" edc:desc="CTRLA Synchronization Busy Flag" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x152" edc:access="-------n" edc:cname="PITINTCTRL" edc:nzwidth="0x8" ltx:memberofperipheral="RTC">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="PI" edc:desc="Periodic Interrupt" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x153" edc:access="-------n" edc:cname="PITINTFLAGS" edc:nzwidth="0x8" ltx:memberofperipheral="RTC">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="PI" edc:desc="Periodic Interrupt" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:_addr="0x154" edc:offset="0x1"/>
        <edc:SFRDef edc:_addr="0x155" edc:access="-------n" edc:cname="PITDBGCTRL" edc:nzwidth="0x8" ltx:memberofperipheral="RTC">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="DBGRUN" edc:desc="Run in debug" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:_addr="0x156" edc:offset="0x2A"/>
        <edc:SFRDef edc:_addr="0x180" edc:access="nnnnnnnn" edc:cname="ASYNCSTROBE" edc:nzwidth="0x8" ltx:memberofperipheral="EVSYS"/>
        <edc:SFRDef edc:_addr="0x181" edc:access="nnnnnnnn" edc:cname="SYNCSTROBE" edc:nzwidth="0x8" ltx:memberofperipheral="EVSYS"/>
        <edc:SFRDef edc:_addr="0x182" edc:access="nnnnnnnn" edc:cname="ASYNCCH0" edc:nzwidth="0x8" ltx:memberofperipheral="EVSYS">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="ASYNCCH0" edc:desc="Asynchronous Channel 0 Generator Selection" edc:nzwidth="0x8">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="CCL_LUT0" edc:desc="Configurable Custom Logic LUT0" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="CCL_LUT1" edc:desc="Configurable Custom Logic LUT1" edc:when="(field &amp; 0xFF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="AC0_OUT" edc:desc="Analog Comparator 0 out" edc:when="(field &amp; 0xFF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="TCD0_CMPBCLR" edc:desc="Timer/Counter D0 compare B clear" edc:when="(field &amp; 0xFF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="TCD0_CMPASET" edc:desc="Timer/Counter D0 compare A set" edc:when="(field &amp; 0xFF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="TCD0_CMPBSET" edc:desc="Timer/Counter D0 compare B set" edc:when="(field &amp; 0xFF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="TCD0_PROGEV" edc:desc="Timer/Counter D0 program event" edc:when="(field &amp; 0xFF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="RTC_OVF" edc:desc="Real Time Counter overflow" edc:when="(field &amp; 0xFF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="RTC_CMP" edc:desc="Real Time Counter compare" edc:when="(field &amp; 0xFF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="PORTA_PIN0" edc:desc="Asynchronous Event from Pin PA0" edc:when="(field &amp; 0xFF) == 0x0A"/>
                <edc:SFRFieldSemantic edc:cname="PORTA_PIN1" edc:desc="Asynchronous Event from Pin PA1" edc:when="(field &amp; 0xFF) == 0x0B"/>
                <edc:SFRFieldSemantic edc:cname="PORTA_PIN2" edc:desc="Asynchronous Event from Pin PA2" edc:when="(field &amp; 0xFF) == 0x0C"/>
                <edc:SFRFieldSemantic edc:cname="PORTA_PIN3" edc:desc="Asynchronous Event from Pin PA3" edc:when="(field &amp; 0xFF) == 0x0D"/>
                <edc:SFRFieldSemantic edc:cname="PORTA_PIN4" edc:desc="Asynchronous Event from Pin PA4" edc:when="(field &amp; 0xFF) == 0x0E"/>
                <edc:SFRFieldSemantic edc:cname="PORTA_PIN5" edc:desc="Asynchronous Event from Pin PA5" edc:when="(field &amp; 0xFF) == 0x0F"/>
                <edc:SFRFieldSemantic edc:cname="PORTA_PIN6" edc:desc="Asynchronous Event from Pin PA6" edc:when="(field &amp; 0xFF) == 0x10"/>
                <edc:SFRFieldSemantic edc:cname="PORTA_PIN7" edc:desc="Asynchronous Event from Pin PA7" edc:when="(field &amp; 0xFF) == 0x11"/>
                <edc:SFRFieldSemantic edc:cname="UPDI" edc:desc="Unified Program and debug interface" edc:when="(field &amp; 0xFF) == 0x12"/>
                <edc:SFRFieldSemantic edc:cname="AC1_OUT" edc:desc="Analog Comparator 1 out" edc:when="(field &amp; 0xFF) == 0x13"/>
                <edc:SFRFieldSemantic edc:cname="AC2_OUT" edc:desc="Analog Comparator 2 out" edc:when="(field &amp; 0xFF) == 0x14"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x183" edc:access="nnnnnnnn" edc:cname="ASYNCCH1" edc:nzwidth="0x8" ltx:memberofperipheral="EVSYS">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="ASYNCCH1" edc:desc="Asynchronous Channel 1 Generator Selection" edc:nzwidth="0x8">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="CCL_LUT0" edc:desc="Configurable custom logic LUT0" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="CCL_LUT1" edc:desc="Configurable custom logic LUT1" edc:when="(field &amp; 0xFF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="AC0_OUT" edc:desc="Analog Comparator 0 out" edc:when="(field &amp; 0xFF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="TCD0_CMPBCLR" edc:desc="Timer/Counter D0 compare B clear" edc:when="(field &amp; 0xFF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="TCD0_CMPASET" edc:desc="Timer/Counter D0 compare A set" edc:when="(field &amp; 0xFF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="TCD0_CMPBSET" edc:desc="Timer/Counter D0 compare B set" edc:when="(field &amp; 0xFF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="TCD0_PROGEV" edc:desc="Timer/Counter D0 program event" edc:when="(field &amp; 0xFF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="RTC_OVF" edc:desc="Real Time Counter overflow" edc:when="(field &amp; 0xFF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="RTC_CMP" edc:desc="Real Time Counter compare" edc:when="(field &amp; 0xFF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="PORTB_PIN0" edc:desc="Asynchronous Event from Pin PB0" edc:when="(field &amp; 0xFF) == 0x0A"/>
                <edc:SFRFieldSemantic edc:cname="PORTB_PIN1" edc:desc="Asynchronous Event from Pin PB1" edc:when="(field &amp; 0xFF) == 0x0B"/>
                <edc:SFRFieldSemantic edc:cname="PORTB_PIN2" edc:desc="Asynchronous Event from Pin PB2" edc:when="(field &amp; 0xFF) == 0x0C"/>
                <edc:SFRFieldSemantic edc:cname="PORTB_PIN3" edc:desc="Asynchronous Event from Pin PB3" edc:when="(field &amp; 0xFF) == 0x0D"/>
                <edc:SFRFieldSemantic edc:cname="PORTB_PIN4" edc:desc="Asynchronous Event from Pin PB4" edc:when="(field &amp; 0xFF) == 0x0E"/>
                <edc:SFRFieldSemantic edc:cname="PORTB_PIN5" edc:desc="Asynchronous Event from Pin PB5" edc:when="(field &amp; 0xFF) == 0x0F"/>
                <edc:SFRFieldSemantic edc:cname="PORTB_PIN6" edc:desc="Asynchronous Event from Pin PB6" edc:when="(field &amp; 0xFF) == 0x10"/>
                <edc:SFRFieldSemantic edc:cname="PORTB_PIN7" edc:desc="Asynchronous Event from Pin PB7" edc:when="(field &amp; 0xFF) == 0x11"/>
                <edc:SFRFieldSemantic edc:cname="AC1_OUT" edc:desc="Analog Comparator 1 out" edc:when="(field &amp; 0xFF) == 0x12"/>
                <edc:SFRFieldSemantic edc:cname="AC2_OUT" edc:desc="Analog Comparator 2 out" edc:when="(field &amp; 0xFF) == 0x13"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x184" edc:access="nnnnnnnn" edc:cname="ASYNCCH2" edc:nzwidth="0x8" ltx:memberofperipheral="EVSYS">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="ASYNCCH2" edc:desc="Asynchronous Channel 2 Generator Selection" edc:nzwidth="0x8">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="CCL_LUT0" edc:desc="Configurable Custom Logic LUT0" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="CCL_LUT1" edc:desc="Configurable Custom Logic LUT1" edc:when="(field &amp; 0xFF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="AC0_OUT" edc:desc="Analog Comparator 0 out" edc:when="(field &amp; 0xFF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="TCD0_CMPBCLR" edc:desc="Timer/Counter D0 compare B clear" edc:when="(field &amp; 0xFF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="TCD0_CMPASET" edc:desc="Timer/Counter D0 compare A set" edc:when="(field &amp; 0xFF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="TCD0_CMPBSET" edc:desc="Timer/Counter D0 compare B set" edc:when="(field &amp; 0xFF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="TCD0_PROGEV" edc:desc="Timer/Counter D0 program event" edc:when="(field &amp; 0xFF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="RTC_OVF" edc:desc="Real Time Counter overflow" edc:when="(field &amp; 0xFF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="RTC_CMP" edc:desc="Real Time Counter compare" edc:when="(field &amp; 0xFF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="PORTC_PIN0" edc:desc="Asynchronous Event from Pin PC0" edc:when="(field &amp; 0xFF) == 0x0A"/>
                <edc:SFRFieldSemantic edc:cname="PORTC_PIN1" edc:desc="Asynchronous Event from Pin PC1" edc:when="(field &amp; 0xFF) == 0x0B"/>
                <edc:SFRFieldSemantic edc:cname="PORTC_PIN2" edc:desc="Asynchronous Event from Pin PC2" edc:when="(field &amp; 0xFF) == 0x0C"/>
                <edc:SFRFieldSemantic edc:cname="PORTC_PIN3" edc:desc="Asynchronous Event from Pin PC3" edc:when="(field &amp; 0xFF) == 0x0D"/>
                <edc:SFRFieldSemantic edc:cname="PORTC_PIN4" edc:desc="Asynchronous Event from Pin PC4" edc:when="(field &amp; 0xFF) == 0x0E"/>
                <edc:SFRFieldSemantic edc:cname="PORTC_PIN5" edc:desc="Asynchronous Event from Pin PC5" edc:when="(field &amp; 0xFF) == 0x0F"/>
                <edc:SFRFieldSemantic edc:cname="AC1_OUT" edc:desc="Analog Comparator 1 out" edc:when="(field &amp; 0xFF) == 0x10"/>
                <edc:SFRFieldSemantic edc:cname="AC2_OUT" edc:desc="Analog Comparator 2 out" edc:when="(field &amp; 0xFF) == 0x11"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x185" edc:access="nnnnnnnn" edc:cname="ASYNCCH3" edc:nzwidth="0x8" ltx:memberofperipheral="EVSYS">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="ASYNCCH3" edc:desc="Asynchronous Channel 3 Generator Selection" edc:nzwidth="0x8">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="CCL_LUT0" edc:desc="Configurable custom logic LUT0" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="CCL_LUT1" edc:desc="Configurable custom logic LUT1" edc:when="(field &amp; 0xFF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="AC0_OUT" edc:desc="Analog Comparator 0 out" edc:when="(field &amp; 0xFF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="TCD0_CMPBCLR" edc:desc="Timer/Counter type D compare B clear" edc:when="(field &amp; 0xFF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="TCD0_CMPASET" edc:desc="Timer/Counter type D compare A set" edc:when="(field &amp; 0xFF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="TCD0_CMPBSET" edc:desc="Timer/Counter type D compare B set" edc:when="(field &amp; 0xFF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="TCD0_PROGEV" edc:desc="Timer/Counter type D program event" edc:when="(field &amp; 0xFF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="RTC_OVF" edc:desc="Real Time Counter overflow" edc:when="(field &amp; 0xFF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="RTC_CMP" edc:desc="Real Time Counter compare" edc:when="(field &amp; 0xFF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="PIT_DIV8192" edc:desc="Periodic Interrupt CLK_RTC div 8192" edc:when="(field &amp; 0xFF) == 0x0A"/>
                <edc:SFRFieldSemantic edc:cname="PIT_DIV4096" edc:desc="Periodic Interrupt CLK_RTC div 4096" edc:when="(field &amp; 0xFF) == 0x0B"/>
                <edc:SFRFieldSemantic edc:cname="PIT_DIV2048" edc:desc="Periodic Interrupt CLK_RTC div 2048" edc:when="(field &amp; 0xFF) == 0x0C"/>
                <edc:SFRFieldSemantic edc:cname="PIT_DIV1024" edc:desc="Periodic Interrupt CLK_RTC div 1024" edc:when="(field &amp; 0xFF) == 0x0D"/>
                <edc:SFRFieldSemantic edc:cname="PIT_DIV512" edc:desc="Periodic Interrupt CLK_RTC div 512" edc:when="(field &amp; 0xFF) == 0x0E"/>
                <edc:SFRFieldSemantic edc:cname="PIT_DIV256" edc:desc="Periodic Interrupt CLK_RTC div 256" edc:when="(field &amp; 0xFF) == 0x0F"/>
                <edc:SFRFieldSemantic edc:cname="PIT_DIV128" edc:desc="Periodic Interrupt CLK_RTC div 128" edc:when="(field &amp; 0xFF) == 0x10"/>
                <edc:SFRFieldSemantic edc:cname="PIT_DIV64" edc:desc="Periodic Interrupt CLK_RTC div 64" edc:when="(field &amp; 0xFF) == 0x11"/>
                <edc:SFRFieldSemantic edc:cname="AC1_OUT" edc:desc="Analog Comparator 1 out" edc:when="(field &amp; 0xFF) == 0x12"/>
                <edc:SFRFieldSemantic edc:cname="AC2_OUT" edc:desc="Analog Comparator 2 out" edc:when="(field &amp; 0xFF) == 0x13"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:_addr="0x186" edc:offset="0x4"/>
        <edc:SFRDef edc:_addr="0x18A" edc:access="nnnnnnnn" edc:cname="SYNCCH0" edc:nzwidth="0x8" ltx:memberofperipheral="EVSYS">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="SYNCCH0" edc:desc="Synchronous Channel 0 Generator Selection" edc:nzwidth="0x8">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="TCB0" edc:desc="Timer/Counter B0" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_OVF_LUNF" edc:desc="Timer/Counter A0 overflow" edc:when="(field &amp; 0xFF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_HUNF" edc:desc="Timer/Counter A0 underflow high byte (split mode)" edc:when="(field &amp; 0xFF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_CMP0" edc:desc="Timer/Counter A0 compare 0" edc:when="(field &amp; 0xFF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_CMP1" edc:desc="Timer/Counter A0 compare 1" edc:when="(field &amp; 0xFF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_CMP2" edc:desc="Timer/Counter A0 compare 2" edc:when="(field &amp; 0xFF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="PORTC_PIN0" edc:desc="Synchronous Event from Pin PC0" edc:when="(field &amp; 0xFF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="PORTC_PIN1" edc:desc="Synchronous Event from Pin PC1" edc:when="(field &amp; 0xFF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="PORTC_PIN2" edc:desc="Synchronous Event from Pin PC2" edc:when="(field &amp; 0xFF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="PORTC_PIN3" edc:desc="Synchronous Event from Pin PC3" edc:when="(field &amp; 0xFF) == 0x0A"/>
                <edc:SFRFieldSemantic edc:cname="PORTC_PIN4" edc:desc="Synchronous Event from Pin PC4" edc:when="(field &amp; 0xFF) == 0x0B"/>
                <edc:SFRFieldSemantic edc:cname="PORTC_PIN5" edc:desc="Synchronous Event from Pin PC5" edc:when="(field &amp; 0xFF) == 0x0C"/>
                <edc:SFRFieldSemantic edc:cname="PORTA_PIN0" edc:desc="Synchronous Event from Pin PA0" edc:when="(field &amp; 0xFF) == 0x0D"/>
                <edc:SFRFieldSemantic edc:cname="PORTA_PIN1" edc:desc="Synchronous Event from Pin PA1" edc:when="(field &amp; 0xFF) == 0x0E"/>
                <edc:SFRFieldSemantic edc:cname="PORTA_PIN2" edc:desc="Synchronous Event from Pin PA2" edc:when="(field &amp; 0xFF) == 0x0F"/>
                <edc:SFRFieldSemantic edc:cname="PORTA_PIN3" edc:desc="Synchronous Event from Pin PA3" edc:when="(field &amp; 0xFF) == 0x10"/>
                <edc:SFRFieldSemantic edc:cname="PORTA_PIN4" edc:desc="Synchronous Event from Pin PA4" edc:when="(field &amp; 0xFF) == 0x11"/>
                <edc:SFRFieldSemantic edc:cname="PORTA_PIN5" edc:desc="Synchronous Event from Pin PA5" edc:when="(field &amp; 0xFF) == 0x12"/>
                <edc:SFRFieldSemantic edc:cname="PORTA_PIN6" edc:desc="Synchronous Event from Pin PA6" edc:when="(field &amp; 0xFF) == 0x13"/>
                <edc:SFRFieldSemantic edc:cname="PORTA_PIN7" edc:desc="Synchronous Event from Pin PA7" edc:when="(field &amp; 0xFF) == 0x14"/>
                <edc:SFRFieldSemantic edc:cname="TCB1" edc:desc="Timer/Counter B1" edc:when="(field &amp; 0xFF) == 0x15"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x18B" edc:access="nnnnnnnn" edc:cname="SYNCCH1" edc:nzwidth="0x8" ltx:memberofperipheral="EVSYS">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="SYNCCH1" edc:desc="Synchronous Channel 1 Generator Selection" edc:nzwidth="0x8">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="TCB0" edc:desc="Timer/Counter B0" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_OVF_LUNF" edc:desc="Timer/Counter A0 overflow" edc:when="(field &amp; 0xFF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_HUNF" edc:desc="Timer/Counter A0 underflow high byte (split mode)" edc:when="(field &amp; 0xFF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_CMP0" edc:desc="Timer/Counter A0 compare 0" edc:when="(field &amp; 0xFF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_CMP1" edc:desc="Timer/Counter A0 compare 1" edc:when="(field &amp; 0xFF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_CMP2" edc:desc="Timer/Counter A0 compare 2" edc:when="(field &amp; 0xFF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="PORTB_PIN0" edc:desc="Synchronous Event from Pin PB0" edc:when="(field &amp; 0xFF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="PORTB_PIN1" edc:desc="Synchronous Event from Pin PB1" edc:when="(field &amp; 0xFF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="PORTB_PIN2" edc:desc="Synchronous Event from Pin PB2" edc:when="(field &amp; 0xFF) == 0x0A"/>
                <edc:SFRFieldSemantic edc:cname="PORTB_PIN3" edc:desc="Synchronous Event from Pin PB3" edc:when="(field &amp; 0xFF) == 0x0B"/>
                <edc:SFRFieldSemantic edc:cname="PORTB_PIN4" edc:desc="Synchronous Event from Pin PB4" edc:when="(field &amp; 0xFF) == 0x0C"/>
                <edc:SFRFieldSemantic edc:cname="PORTB_PIN5" edc:desc="Synchronous Event from Pin PB5" edc:when="(field &amp; 0xFF) == 0x0D"/>
                <edc:SFRFieldSemantic edc:cname="PORTB_PIN6" edc:desc="Synchronous Event from Pin PB6" edc:when="(field &amp; 0xFF) == 0x0E"/>
                <edc:SFRFieldSemantic edc:cname="PORTB_PIN7" edc:desc="Synchronous Event from Pin PB7" edc:when="(field &amp; 0xFF) == 0x0F"/>
                <edc:SFRFieldSemantic edc:cname="TCB1" edc:desc="Timer/Counter B1" edc:when="(field &amp; 0xFF) == 0x10"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:_addr="0x18C" edc:offset="0x6"/>
        <edc:SFRDef edc:_addr="0x192" edc:access="nnnnnnnn" edc:cname="ASYNCUSER0" edc:nzwidth="0x8" ltx:memberofperipheral="EVSYS">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="ASYNCUSER0" edc:desc="Asynchronous User Ch 0 Input Selection - TCB0" edc:nzwidth="0x8">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="SYNCCH0" edc:desc="Synchronous Event Channel 0" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="SYNCCH1" edc:desc="Synchronous Event Channel 1" edc:when="(field &amp; 0xFF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="ASYNCCH0" edc:desc="Asynchronous Event Channel 0" edc:when="(field &amp; 0xFF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="ASYNCCH1" edc:desc="Asynchronous Event Channel 1" edc:when="(field &amp; 0xFF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="ASYNCCH2" edc:desc="Asynchronous Event Channel 2" edc:when="(field &amp; 0xFF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="ASYNCCH3" edc:desc="Asynchronous Event Channel 3" edc:when="(field &amp; 0xFF) == 0x06"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x193" edc:access="nnnnnnnn" edc:cname="ASYNCUSER1" edc:nzwidth="0x8" ltx:memberofperipheral="EVSYS">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="ASYNCUSER1" edc:desc="Asynchronous User Ch 1 Input Selection - ADC0" edc:nzwidth="0x8">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="SYNCCH0" edc:desc="Synchronous Event Channel 0" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="SYNCCH1" edc:desc="Synchronous Event Channel 1" edc:when="(field &amp; 0xFF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="ASYNCCH0" edc:desc="Asynchronous Event Channel 0" edc:when="(field &amp; 0xFF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="ASYNCCH1" edc:desc="Asynchronous Event Channel 1" edc:when="(field &amp; 0xFF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="ASYNCCH2" edc:desc="Asynchronous Event Channel 2" edc:when="(field &amp; 0xFF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="ASYNCCH3" edc:desc="Asynchronous Event Channel 3" edc:when="(field &amp; 0xFF) == 0x06"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x194" edc:access="nnnnnnnn" edc:cname="ASYNCUSER2" edc:nzwidth="0x8" ltx:memberofperipheral="EVSYS">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="ASYNCUSER2" edc:desc="Asynchronous User Ch 2 Input Selection - CCL LUT0 Event 0" edc:nzwidth="0x8">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="SYNCCH0" edc:desc="Synchronous Event Channel 0" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="SYNCCH1" edc:desc="Synchronous Event Channel 1" edc:when="(field &amp; 0xFF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="ASYNCCH0" edc:desc="Asynchronous Event Channel 0" edc:when="(field &amp; 0xFF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="ASYNCCH1" edc:desc="Asynchronous Event Channel 1" edc:when="(field &amp; 0xFF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="ASYNCCH2" edc:desc="Asynchronous Event Channel 2" edc:when="(field &amp; 0xFF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="ASYNCCH3" edc:desc="Asynchronous Event Channel 3" edc:when="(field &amp; 0xFF) == 0x06"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x195" edc:access="nnnnnnnn" edc:cname="ASYNCUSER3" edc:nzwidth="0x8" ltx:memberofperipheral="EVSYS">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="ASYNCUSER3" edc:desc="Asynchronous User Ch 3 Input Selection - CCL LUT1 Event 0" edc:nzwidth="0x8">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="SYNCCH0" edc:desc="Synchronous Event Channel 0" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="SYNCCH1" edc:desc="Synchronous Event Channel 1" edc:when="(field &amp; 0xFF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="ASYNCCH0" edc:desc="Asynchronous Event Channel 0" edc:when="(field &amp; 0xFF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="ASYNCCH1" edc:desc="Asynchronous Event Channel 1" edc:when="(field &amp; 0xFF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="ASYNCCH2" edc:desc="Asynchronous Event Channel 2" edc:when="(field &amp; 0xFF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="ASYNCCH3" edc:desc="Asynchronous Event Channel 3" edc:when="(field &amp; 0xFF) == 0x06"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x196" edc:access="nnnnnnnn" edc:cname="ASYNCUSER4" edc:nzwidth="0x8" ltx:memberofperipheral="EVSYS">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="ASYNCUSER4" edc:desc="Asynchronous User Ch 4 Input Selection - CCL LUT0 Event 1" edc:nzwidth="0x8">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="SYNCCH0" edc:desc="Synchronous Event Channel 0" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="SYNCCH1" edc:desc="Synchronous Event Channel 1" edc:when="(field &amp; 0xFF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="ASYNCCH0" edc:desc="Asynchronous Event Channel 0" edc:when="(field &amp; 0xFF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="ASYNCCH1" edc:desc="Asynchronous Event Channel 1" edc:when="(field &amp; 0xFF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="ASYNCCH2" edc:desc="Asynchronous Event Channel 2" edc:when="(field &amp; 0xFF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="ASYNCCH3" edc:desc="Asynchronous Event Channel 3" edc:when="(field &amp; 0xFF) == 0x06"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x197" edc:access="nnnnnnnn" edc:cname="ASYNCUSER5" edc:nzwidth="0x8" ltx:memberofperipheral="EVSYS">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="ASYNCUSER5" edc:desc="Asynchronous User Ch 5 Input Selection - CCL LUT1 Event 1" edc:nzwidth="0x8">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="SYNCCH0" edc:desc="Synchronous Event Channel 0" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="SYNCCH1" edc:desc="Synchronous Event Channel 1" edc:when="(field &amp; 0xFF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="ASYNCCH0" edc:desc="Asynchronous Event Channel 0" edc:when="(field &amp; 0xFF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="ASYNCCH1" edc:desc="Asynchronous Event Channel 1" edc:when="(field &amp; 0xFF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="ASYNCCH2" edc:desc="Asynchronous Event Channel 2" edc:when="(field &amp; 0xFF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="ASYNCCH3" edc:desc="Asynchronous Event Channel 3" edc:when="(field &amp; 0xFF) == 0x06"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x198" edc:access="nnnnnnnn" edc:cname="ASYNCUSER6" edc:nzwidth="0x8" ltx:memberofperipheral="EVSYS">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="ASYNCUSER6" edc:desc="Asynchronous User Ch 6 Input Selection - TCD0 Event 0" edc:nzwidth="0x8">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="SYNCCH0" edc:desc="Synchronous Event Channel 0" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="SYNCCH1" edc:desc="Synchronous Event Channel 1" edc:when="(field &amp; 0xFF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="ASYNCCH0" edc:desc="Asynchronous Event Channel 0" edc:when="(field &amp; 0xFF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="ASYNCCH1" edc:desc="Asynchronous Event Channel 1" edc:when="(field &amp; 0xFF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="ASYNCCH2" edc:desc="Asynchronous Event Channel 2" edc:when="(field &amp; 0xFF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="ASYNCCH3" edc:desc="Asynchronous Event Channel 3" edc:when="(field &amp; 0xFF) == 0x06"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x199" edc:access="nnnnnnnn" edc:cname="ASYNCUSER7" edc:nzwidth="0x8" ltx:memberofperipheral="EVSYS">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="ASYNCUSER7" edc:desc="Asynchronous User Ch 7 Input Selection - TCD0 Event 1" edc:nzwidth="0x8">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="SYNCCH0" edc:desc="Synchronous Event Channel 0" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="SYNCCH1" edc:desc="Synchronous Event Channel 1" edc:when="(field &amp; 0xFF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="ASYNCCH0" edc:desc="Asynchronous Event Channel 0" edc:when="(field &amp; 0xFF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="ASYNCCH1" edc:desc="Asynchronous Event Channel 1" edc:when="(field &amp; 0xFF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="ASYNCCH2" edc:desc="Asynchronous Event Channel 2" edc:when="(field &amp; 0xFF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="ASYNCCH3" edc:desc="Asynchronous Event Channel 3" edc:when="(field &amp; 0xFF) == 0x06"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x19A" edc:access="nnnnnnnn" edc:cname="ASYNCUSER8" edc:nzwidth="0x8" ltx:memberofperipheral="EVSYS">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="ASYNCUSER8" edc:desc="Asynchronous User Ch 8 Input Selection - Event Out 0" edc:nzwidth="0x8">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="SYNCCH0" edc:desc="Synchronous Event Channel 0" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="SYNCCH1" edc:desc="Synchronous Event Channel 1" edc:when="(field &amp; 0xFF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="ASYNCCH0" edc:desc="Asynchronous Event Channel 0" edc:when="(field &amp; 0xFF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="ASYNCCH1" edc:desc="Asynchronous Event Channel 1" edc:when="(field &amp; 0xFF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="ASYNCCH2" edc:desc="Asynchronous Event Channel 2" edc:when="(field &amp; 0xFF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="ASYNCCH3" edc:desc="Asynchronous Event Channel 3" edc:when="(field &amp; 0xFF) == 0x06"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x19B" edc:access="nnnnnnnn" edc:cname="ASYNCUSER9" edc:nzwidth="0x8" ltx:memberofperipheral="EVSYS">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="ASYNCUSER9" edc:desc="Asynchronous User Ch 9 Input Selection - Event Out 1" edc:nzwidth="0x8">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="SYNCCH0" edc:desc="Synchronous Event Channel 0" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="SYNCCH1" edc:desc="Synchronous Event Channel 1" edc:when="(field &amp; 0xFF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="ASYNCCH0" edc:desc="Asynchronous Event Channel 0" edc:when="(field &amp; 0xFF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="ASYNCCH1" edc:desc="Asynchronous Event Channel 1" edc:when="(field &amp; 0xFF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="ASYNCCH2" edc:desc="Asynchronous Event Channel 2" edc:when="(field &amp; 0xFF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="ASYNCCH3" edc:desc="Asynchronous Event Channel 3" edc:when="(field &amp; 0xFF) == 0x06"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x19C" edc:access="nnnnnnnn" edc:cname="ASYNCUSER10" edc:nzwidth="0x8" ltx:memberofperipheral="EVSYS">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="ASYNCUSER10" edc:desc="Asynchronous User Ch 10 Input Selection - Event Out 2" edc:nzwidth="0x8">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="SYNCCH0" edc:desc="Synchronous Event Channel 0" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="SYNCCH1" edc:desc="Synchronous Event Channel 1" edc:when="(field &amp; 0xFF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="ASYNCCH0" edc:desc="Asynchronous Event Channel 0" edc:when="(field &amp; 0xFF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="ASYNCCH1" edc:desc="Asynchronous Event Channel 1" edc:when="(field &amp; 0xFF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="ASYNCCH2" edc:desc="Asynchronous Event Channel 2" edc:when="(field &amp; 0xFF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="ASYNCCH3" edc:desc="Asynchronous Event Channel 3" edc:when="(field &amp; 0xFF) == 0x06"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x19D" edc:access="nnnnnnnn" edc:cname="ASYNCUSER11" edc:nzwidth="0x8" ltx:memberofperipheral="EVSYS">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="ASYNCUSER11" edc:desc="Asynchronous User Ch 11 Input Selection - TCB1" edc:nzwidth="0x8">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="SYNCCH0" edc:desc="Synchronous Event Channel 0" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="SYNCCH1" edc:desc="Synchronous Event Channel 1" edc:when="(field &amp; 0xFF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="ASYNCCH0" edc:desc="Asynchronous Event Channel 0" edc:when="(field &amp; 0xFF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="ASYNCCH1" edc:desc="Asynchronous Event Channel 1" edc:when="(field &amp; 0xFF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="ASYNCCH2" edc:desc="Asynchronous Event Channel 2" edc:when="(field &amp; 0xFF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="ASYNCCH3" edc:desc="Asynchronous Event Channel 3" edc:when="(field &amp; 0xFF) == 0x06"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x19E" edc:access="nnnnnnnn" edc:cname="ASYNCUSER12" edc:nzwidth="0x8" ltx:memberofperipheral="EVSYS">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="ASYNCUSER12" edc:desc="Asynchronous User Ch 12 Input Selection - ADC0" edc:nzwidth="0x8">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="SYNCCH0" edc:desc="Synchronous Event Channel 0" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="SYNCCH1" edc:desc="Synchronous Event Channel 1" edc:when="(field &amp; 0xFF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="ASYNCCH0" edc:desc="Asynchronous Event Channel 0" edc:when="(field &amp; 0xFF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="ASYNCCH1" edc:desc="Asynchronous Event Channel 1" edc:when="(field &amp; 0xFF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="ASYNCCH2" edc:desc="Asynchronous Event Channel 2" edc:when="(field &amp; 0xFF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="ASYNCCH3" edc:desc="Asynchronous Event Channel 3" edc:when="(field &amp; 0xFF) == 0x06"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:_addr="0x19F" edc:offset="0x3"/>
        <edc:SFRDef edc:_addr="0x1A2" edc:access="nnnnnnnn" edc:cname="SYNCUSER0" edc:nzwidth="0x8" ltx:memberofperipheral="EVSYS">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="SYNCUSER0" edc:desc="Synchronous User Ch 0 - TCA0" edc:nzwidth="0x8">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="SYNCCH0" edc:desc="Synchronous Event Channel 0" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="SYNCCH1" edc:desc="Synchronous Event Channel 1" edc:when="(field &amp; 0xFF) == 0x02"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x1A3" edc:access="nnnnnnnn" edc:cname="SYNCUSER1" edc:nzwidth="0x8" ltx:memberofperipheral="EVSYS">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="SYNCUSER1" edc:desc="Synchronous User Ch 1 - USART0" edc:nzwidth="0x8">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="SYNCCH0" edc:desc="Synchronous Event Channel 0" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="SYNCCH1" edc:desc="Synchronous Event Channel 1" edc:when="(field &amp; 0xFF) == 0x02"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:_addr="0x1A4" edc:offset="0x1C"/>
        <edc:SFRDef edc:_addr="0x1C0" edc:access="-n-----n" edc:cname="CTRLA" edc:nzwidth="0x8" ltx:memberofperipheral="CCL">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="ENABLE" edc:desc="Enable" edc:nzwidth="0x1"/>
              <edc:AdjustPoint edc:offset="0x5"/>
              <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:desc="Run in Standby" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x1C1" edc:access="-----nnn" edc:cname="SEQCTRL0" edc:nzwidth="0x8" ltx:memberofperipheral="CCL">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="SEQSEL" edc:desc="Sequential Selection" edc:nzwidth="0x3">
                <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Sequential logic disabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="DFF" edc:desc="D FlipFlop" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="JK" edc:desc="JK FlipFlop" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="LATCH" edc:desc="D Latch" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="RS" edc:desc="RS Latch" edc:when="(field &amp; 0x7) == 0x04"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:_addr="0x1C2" edc:offset="0x3"/>
        <edc:SFRDef edc:_addr="0x1C5" edc:access="nnnnn--n" edc:cname="LUT0CTRLA" edc:nzwidth="0x8" ltx:memberofperipheral="CCL">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="ENABLE" edc:desc="LUT Enable" edc:nzwidth="0x1"/>
              <edc:AdjustPoint edc:offset="0x2"/>
              <edc:SFRFieldDef edc:cname="OUTEN" edc:desc="Output Enable" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="FILTSEL" edc:desc="Filter Selection" edc:nzwidth="0x2">
                <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Filter disabled" edc:when="(field &amp; 0x3) == 0x0"/>
                <edc:SFRFieldSemantic edc:cname="SYNCH" edc:desc="Synchronizer enabled" edc:when="(field &amp; 0x3) == 0x1"/>
                <edc:SFRFieldSemantic edc:cname="FILTER" edc:desc="Filter enabled" edc:when="(field &amp; 0x3) == 0x2"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="CLKSRC" edc:desc="Clock Source Selection" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="EDGEDET" edc:desc="Edge Detection Enable" edc:nzwidth="0x1">
                <edc:SFRFieldSemantic edc:cname="DIS" edc:desc="Edge detector is disabled" edc:when="(field &amp; 0x1) == 0x0"/>
                <edc:SFRFieldSemantic edc:cname="EN" edc:desc="Edge detector is enabled" edc:when="(field &amp; 0x1) == 0x1"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x1C6" edc:access="nnnnnnnn" edc:cname="LUT0CTRLB" edc:nzwidth="0x8" ltx:memberofperipheral="CCL">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="INSEL0" edc:desc="LUT Input 0 Source Selection" edc:nzwidth="0x4">
                <edc:SFRFieldSemantic edc:cname="MASK" edc:desc="Masked input" edc:when="(field &amp; 0xF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="FEEDBACK" edc:desc="Feedback input source" edc:when="(field &amp; 0xF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="LINK" edc:desc="Linked LUT input source" edc:when="(field &amp; 0xF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="EVENT0" edc:desc="Event input source 0" edc:when="(field &amp; 0xF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="EVENT1" edc:desc="Event input source 1" edc:when="(field &amp; 0xF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="IO" edc:desc="IO pin LUTn-IN0 input source" edc:when="(field &amp; 0xF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="AC0" edc:desc="AC0 OUT input source" edc:when="(field &amp; 0xF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="TCB0" edc:desc="TCB0 WO input source" edc:when="(field &amp; 0xF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="TCA0" edc:desc="TCA0 WO0 input source" edc:when="(field &amp; 0xF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="TCD0" edc:desc="TCD0 WOA input source" edc:when="(field &amp; 0xF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="USART0" edc:desc="USART0 XCK input source" edc:when="(field &amp; 0xF) == 0x0A"/>
                <edc:SFRFieldSemantic edc:cname="SPI0" edc:desc="SPI0 SCK source" edc:when="(field &amp; 0xF) == 0x0B"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="INSEL1" edc:desc="LUT Input 1 Source Selection" edc:nzwidth="0x4">
                <edc:SFRFieldSemantic edc:cname="MASK" edc:desc="Masked input" edc:when="(field &amp; 0xF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="FEEDBACK" edc:desc="Feedback input source" edc:when="(field &amp; 0xF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="LINK" edc:desc="Linked LUT input source" edc:when="(field &amp; 0xF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="EVENT0" edc:desc="Event input source 0" edc:when="(field &amp; 0xF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="EVENT1" edc:desc="Event input source 1" edc:when="(field &amp; 0xF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="IO" edc:desc="IO pin LUTn-N1 input source" edc:when="(field &amp; 0xF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="AC0" edc:desc="AC0 OUT input source" edc:when="(field &amp; 0xF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="TCB0" edc:desc="TCB0 WO input source" edc:when="(field &amp; 0xF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="TCA0" edc:desc="TCA0 WO1 input source" edc:when="(field &amp; 0xF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="TCD0" edc:desc="TCD0 WOB input source" edc:when="(field &amp; 0xF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="USART0" edc:desc="USART0 TXD input source" edc:when="(field &amp; 0xF) == 0x0A"/>
                <edc:SFRFieldSemantic edc:cname="SPI0" edc:desc="SPI0 MOSI input source" edc:when="(field &amp; 0xF) == 0x0B"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x1C7" edc:access="----nnnn" edc:cname="LUT0CTRLC" edc:nzwidth="0x8" ltx:memberofperipheral="CCL">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="INSEL2" edc:desc="LUT Input 2 Source Selection" edc:nzwidth="0x4">
                <edc:SFRFieldSemantic edc:cname="MASK" edc:desc="Masked input" edc:when="(field &amp; 0xF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="FEEDBACK" edc:desc="Feedback input source" edc:when="(field &amp; 0xF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="LINK" edc:desc="Linked LUT input source" edc:when="(field &amp; 0xF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="EVENT0" edc:desc="Event input source 0" edc:when="(field &amp; 0xF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="EVENT1" edc:desc="Event input source 1" edc:when="(field &amp; 0xF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="IO" edc:desc="IO pin LUTn-IN2 input source" edc:when="(field &amp; 0xF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="AC0" edc:desc="AC0 OUT input source" edc:when="(field &amp; 0xF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="TCB0" edc:desc="TCB0 WO input source" edc:when="(field &amp; 0xF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="TCA0" edc:desc="TCA0 WO2 input source" edc:when="(field &amp; 0xF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="TCD0" edc:desc="TCD0 WOA input source" edc:when="(field &amp; 0xF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="SPI0" edc:desc="SPI0 MISO source" edc:when="(field &amp; 0xF) == 0x0B"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x1C8" edc:access="nnnnnnnn" edc:cname="TRUTH0" edc:nzwidth="0x8" ltx:memberofperipheral="CCL"/>
        <edc:SFRDef edc:_addr="0x1C9" edc:access="nnnnn--n" edc:cname="LUT1CTRLA" edc:nzwidth="0x8" ltx:memberofperipheral="CCL">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="ENABLE" edc:desc="LUT Enable" edc:nzwidth="0x1"/>
              <edc:AdjustPoint edc:offset="0x2"/>
              <edc:SFRFieldDef edc:cname="OUTEN" edc:desc="Output Enable" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="FILTSEL" edc:desc="Filter Selection" edc:nzwidth="0x2">
                <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Filter disabled" edc:when="(field &amp; 0x3) == 0x0"/>
                <edc:SFRFieldSemantic edc:cname="SYNCH" edc:desc="Synchronizer enabled" edc:when="(field &amp; 0x3) == 0x1"/>
                <edc:SFRFieldSemantic edc:cname="FILTER" edc:desc="Filter enabled" edc:when="(field &amp; 0x3) == 0x2"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="CLKSRC" edc:desc="Clock Source Selection" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="EDGEDET" edc:desc="Edge Detection Enable" edc:nzwidth="0x1">
                <edc:SFRFieldSemantic edc:cname="DIS" edc:desc="Edge detector is disabled" edc:when="(field &amp; 0x1) == 0x0"/>
                <edc:SFRFieldSemantic edc:cname="EN" edc:desc="Edge detector is enabled" edc:when="(field &amp; 0x1) == 0x1"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x1CA" edc:access="nnnnnnnn" edc:cname="LUT1CTRLB" edc:nzwidth="0x8" ltx:memberofperipheral="CCL">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="INSEL0" edc:desc="LUT Input 0 Source Selection" edc:nzwidth="0x4">
                <edc:SFRFieldSemantic edc:cname="MASK" edc:desc="Masked input" edc:when="(field &amp; 0xF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="FEEDBACK" edc:desc="Feedback input source" edc:when="(field &amp; 0xF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="LINK" edc:desc="Linked LUT input source" edc:when="(field &amp; 0xF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="EVENT0" edc:desc="Event input source 0" edc:when="(field &amp; 0xF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="EVENT1" edc:desc="Event input source 1" edc:when="(field &amp; 0xF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="IO" edc:desc="IO pin LUTn-IN0 input source" edc:when="(field &amp; 0xF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="AC0" edc:desc="AC0 OUT input source" edc:when="(field &amp; 0xF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="TCB0" edc:desc="TCB0 WO input source" edc:when="(field &amp; 0xF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="TCA0" edc:desc="TCA0 WO0 input source" edc:when="(field &amp; 0xF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="TCD0" edc:desc="TCD0 WOA input source" edc:when="(field &amp; 0xF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="USART0" edc:desc="USART0 XCK input source" edc:when="(field &amp; 0xF) == 0x0A"/>
                <edc:SFRFieldSemantic edc:cname="SPI0" edc:desc="SPI0 SCK source" edc:when="(field &amp; 0xF) == 0x0B"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="INSEL1" edc:desc="LUT Input 1 Source Selection" edc:nzwidth="0x4">
                <edc:SFRFieldSemantic edc:cname="MASK" edc:desc="Masked input" edc:when="(field &amp; 0xF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="FEEDBACK" edc:desc="Feedback input source" edc:when="(field &amp; 0xF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="LINK" edc:desc="Linked LUT input source" edc:when="(field &amp; 0xF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="EVENT0" edc:desc="Event input source 0" edc:when="(field &amp; 0xF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="EVENT1" edc:desc="Event input source 1" edc:when="(field &amp; 0xF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="IO" edc:desc="IO pin LUTn-N1 input source" edc:when="(field &amp; 0xF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="AC0" edc:desc="AC0 OUT input source" edc:when="(field &amp; 0xF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="TCB0" edc:desc="TCB0 WO input source" edc:when="(field &amp; 0xF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="TCA0" edc:desc="TCA0 WO1 input source" edc:when="(field &amp; 0xF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="TCD0" edc:desc="TCD0 WOB input source" edc:when="(field &amp; 0xF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="USART0" edc:desc="USART0 TXD input source" edc:when="(field &amp; 0xF) == 0x0A"/>
                <edc:SFRFieldSemantic edc:cname="SPI0" edc:desc="SPI0 MOSI input source" edc:when="(field &amp; 0xF) == 0x0B"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x1CB" edc:access="----nnnn" edc:cname="LUT1CTRLC" edc:nzwidth="0x8" ltx:memberofperipheral="CCL">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="INSEL2" edc:desc="LUT Input 2 Source Selection" edc:nzwidth="0x4">
                <edc:SFRFieldSemantic edc:cname="MASK" edc:desc="Masked input" edc:when="(field &amp; 0xF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="FEEDBACK" edc:desc="Feedback input source" edc:when="(field &amp; 0xF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="LINK" edc:desc="Linked LUT input source" edc:when="(field &amp; 0xF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="EVENT0" edc:desc="Event input source 0" edc:when="(field &amp; 0xF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="EVENT1" edc:desc="Event input source 1" edc:when="(field &amp; 0xF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="IO" edc:desc="IO pin LUTn-IN2 input source" edc:when="(field &amp; 0xF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="AC0" edc:desc="AC0 OUT input source" edc:when="(field &amp; 0xF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="TCB0" edc:desc="TCB0 WO input source" edc:when="(field &amp; 0xF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="TCA0" edc:desc="TCA0 WO2 input source" edc:when="(field &amp; 0xF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="TCD0" edc:desc="TCD0 WOA input source" edc:when="(field &amp; 0xF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="SPI0" edc:desc="SPI0 MISO source" edc:when="(field &amp; 0xF) == 0x0B"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x1CC" edc:access="nnnnnnnn" edc:cname="TRUTH1" edc:nzwidth="0x8" ltx:memberofperipheral="CCL"/>
        <edc:AdjustPoint edc:_addr="0x1CD" edc:offset="0x33"/>
        <edc:SFRDef edc:_addr="0x200" edc:access="--nn-nnn" edc:cname="CTRLA" edc:nzwidth="0x8" ltx:memberofperipheral="PORTMUX">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="EVOUT0" edc:desc="Event Output 0" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="EVOUT1" edc:desc="Event Output 1" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="EVOUT2" edc:desc="Event Output 2" edc:nzwidth="0x1"/>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="LUT0" edc:desc="Configurable Custom Logic LUT0" edc:nzwidth="0x1">
                <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Default pin" edc:when="(field &amp; 0x1) == 0"/>
                <edc:SFRFieldSemantic edc:cname="ALTERNATE" edc:desc="Alternate pin" edc:when="(field &amp; 0x1) == 1"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="LUT1" edc:desc="Configurable Custom Logic LUT1" edc:nzwidth="0x1">
                <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Default pin" edc:when="(field &amp; 0x1) == 0"/>
                <edc:SFRFieldSemantic edc:cname="ALTERNATE" edc:desc="Alternate pin" edc:when="(field &amp; 0x1) == 1"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x201" edc:access="---n-n-n" edc:cname="CTRLB" edc:nzwidth="0x8" ltx:memberofperipheral="PORTMUX">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="USART0" edc:desc="Port Multiplexer USART0" edc:nzwidth="0x1">
                <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Default pins" edc:when="(field &amp; 0x1) == 0"/>
                <edc:SFRFieldSemantic edc:cname="ALTERNATE" edc:desc="Alternate pins" edc:when="(field &amp; 0x1) == 1"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="SPI0" edc:desc="Port Multiplexer SPI0" edc:nzwidth="0x1">
                <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Default pins" edc:when="(field &amp; 0x1) == 0"/>
                <edc:SFRFieldSemantic edc:cname="ALTERNATE" edc:desc="Alternate pins" edc:when="(field &amp; 0x1) == 1"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="TWI0" edc:desc="Port Multiplexer TWI0" edc:nzwidth="0x1">
                <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Default pins" edc:when="(field &amp; 0x1) == 0"/>
                <edc:SFRFieldSemantic edc:cname="ALTERNATE" edc:desc="Alternate pins" edc:when="(field &amp; 0x1) == 1"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x202" edc:access="--nnnnnn" edc:cname="CTRLC" edc:nzwidth="0x8" ltx:memberofperipheral="PORTMUX">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="TCA00" edc:desc="Port Multiplexer TCA0 Output 0" edc:nzwidth="0x1">
                <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Default pin" edc:when="(field &amp; 0x1) == 0"/>
                <edc:SFRFieldSemantic edc:cname="ALTERNATE" edc:desc="Alternate pin" edc:when="(field &amp; 0x1) == 1"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="TCA01" edc:desc="Port Multiplexer TCA0 Output 1" edc:nzwidth="0x1">
                <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Default pin" edc:when="(field &amp; 0x1) == 0"/>
                <edc:SFRFieldSemantic edc:cname="ALTERNATE" edc:desc="Alternate pin" edc:when="(field &amp; 0x1) == 1"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="TCA02" edc:desc="Port Multiplexer TCA0 Output 2" edc:nzwidth="0x1">
                <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Default pin" edc:when="(field &amp; 0x1) == 0"/>
                <edc:SFRFieldSemantic edc:cname="ALTERNATE" edc:desc="Alternate pin" edc:when="(field &amp; 0x1) == 1"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="TCA03" edc:desc="Port Multiplexer TCA0 Output 3" edc:nzwidth="0x1">
                <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Default pin" edc:when="(field &amp; 0x1) == 0"/>
                <edc:SFRFieldSemantic edc:cname="ALTERNATE" edc:desc="Alternate pin" edc:when="(field &amp; 0x1) == 1"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="TCA04" edc:desc="Port Multiplexer TCA0 Output 4" edc:nzwidth="0x1">
                <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Default pin" edc:when="(field &amp; 0x1) == 0"/>
                <edc:SFRFieldSemantic edc:cname="ALTERNATE" edc:desc="Alternate pin" edc:when="(field &amp; 0x1) == 1"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="TCA05" edc:desc="Port Multiplexer TCA0 Output 5" edc:nzwidth="0x1">
                <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Default pin" edc:when="(field &amp; 0x1) == 0"/>
                <edc:SFRFieldSemantic edc:cname="ALTERNATE" edc:desc="Alternate pin" edc:when="(field &amp; 0x1) == 1"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x203" edc:access="-------n" edc:cname="CTRLD" edc:nzwidth="0x8" ltx:memberofperipheral="PORTMUX">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="TCB0" edc:desc="Port Multiplexer TCB" edc:nzwidth="0x1">
                <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Default pin" edc:when="(field &amp; 0x1) == 0x0"/>
                <edc:SFRFieldSemantic edc:cname="ALTERNATE" edc:desc="Alternate pin" edc:when="(field &amp; 0x1) == 0x1"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:_addr="0x204" edc:offset="0x1FC"/>
        <edc:SFRDef edc:_addr="0x400" edc:access="nnnnnnnn" edc:cname="DIR" edc:nzwidth="0x8" ltx:memberofperipheral="PORTA"/>
        <edc:SFRDef edc:_addr="0x401" edc:access="nnnnnnnn" edc:cname="DIRSET" edc:nzwidth="0x8" ltx:memberofperipheral="PORTA"/>
        <edc:SFRDef edc:_addr="0x402" edc:access="nnnnnnnn" edc:cname="DIRCLR" edc:nzwidth="0x8" ltx:memberofperipheral="PORTA"/>
        <edc:SFRDef edc:_addr="0x403" edc:access="nnnnnnnn" edc:cname="DIRTGL" edc:nzwidth="0x8" ltx:memberofperipheral="PORTA"/>
        <edc:SFRDef edc:_addr="0x404" edc:access="nnnnnnnn" edc:cname="OUT" edc:nzwidth="0x8" ltx:memberofperipheral="PORTA"/>
        <edc:SFRDef edc:_addr="0x405" edc:access="nnnnnnnn" edc:cname="OUTSET" edc:nzwidth="0x8" ltx:memberofperipheral="PORTA"/>
        <edc:SFRDef edc:_addr="0x406" edc:access="nnnnnnnn" edc:cname="OUTCLR" edc:nzwidth="0x8" ltx:memberofperipheral="PORTA"/>
        <edc:SFRDef edc:_addr="0x407" edc:access="nnnnnnnn" edc:cname="OUTTGL" edc:nzwidth="0x8" ltx:memberofperipheral="PORTA"/>
        <edc:SFRDef edc:_addr="0x408" edc:access="nnnnnnnn" edc:cname="IN" edc:nzwidth="0x8" ltx:memberofperipheral="PORTA"/>
        <edc:SFRDef edc:_addr="0x409" edc:access="nnnnnnnn" edc:cname="INTFLAGS" edc:nzwidth="0x8" ltx:memberofperipheral="PORTA">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="INT" edc:desc="Pin Interrupt" edc:nzwidth="0x8"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:_addr="0x40A" edc:offset="0x6"/>
        <edc:SFRDef edc:_addr="0x410" edc:access="n---nnnn" edc:cname="PIN0CTRL" edc:nzwidth="0x8" ltx:memberofperipheral="PORTA">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="ISC" edc:desc="Input/Sense Configuration" edc:nzwidth="0x3">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x0"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x1"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x2"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x3"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x4"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x5"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:desc="Pullup enable" edc:nzwidth="0x1"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="INVEN" edc:desc="Inverted I/O Enable" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x411" edc:access="n---nnnn" edc:cname="PIN1CTRL" edc:nzwidth="0x8" ltx:memberofperipheral="PORTA">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="ISC" edc:desc="Input/Sense Configuration" edc:nzwidth="0x3">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x0"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x1"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x2"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x3"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x4"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x5"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:desc="Pullup enable" edc:nzwidth="0x1"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="INVEN" edc:desc="Inverted I/O Enable" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x412" edc:access="n---nnnn" edc:cname="PIN2CTRL" edc:nzwidth="0x8" ltx:memberofperipheral="PORTA">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="ISC" edc:desc="Input/Sense Configuration" edc:nzwidth="0x3">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x0"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x1"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x2"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x3"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x4"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x5"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:desc="Pullup enable" edc:nzwidth="0x1"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="INVEN" edc:desc="Inverted I/O Enable" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x413" edc:access="n---nnnn" edc:cname="PIN3CTRL" edc:nzwidth="0x8" ltx:memberofperipheral="PORTA">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="ISC" edc:desc="Input/Sense Configuration" edc:nzwidth="0x3">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x0"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x1"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x2"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x3"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x4"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x5"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:desc="Pullup enable" edc:nzwidth="0x1"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="INVEN" edc:desc="Inverted I/O Enable" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x414" edc:access="n---nnnn" edc:cname="PIN4CTRL" edc:nzwidth="0x8" ltx:memberofperipheral="PORTA">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="ISC" edc:desc="Input/Sense Configuration" edc:nzwidth="0x3">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x0"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x1"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x2"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x3"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x4"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x5"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:desc="Pullup enable" edc:nzwidth="0x1"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="INVEN" edc:desc="Inverted I/O Enable" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x415" edc:access="n---nnnn" edc:cname="PIN5CTRL" edc:nzwidth="0x8" ltx:memberofperipheral="PORTA">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="ISC" edc:desc="Input/Sense Configuration" edc:nzwidth="0x3">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x0"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x1"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x2"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x3"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x4"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x5"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:desc="Pullup enable" edc:nzwidth="0x1"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="INVEN" edc:desc="Inverted I/O Enable" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x416" edc:access="n---nnnn" edc:cname="PIN6CTRL" edc:nzwidth="0x8" ltx:memberofperipheral="PORTA">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="ISC" edc:desc="Input/Sense Configuration" edc:nzwidth="0x3">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x0"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x1"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x2"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x3"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x4"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x5"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:desc="Pullup enable" edc:nzwidth="0x1"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="INVEN" edc:desc="Inverted I/O Enable" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x417" edc:access="n---nnnn" edc:cname="PIN7CTRL" edc:nzwidth="0x8" ltx:memberofperipheral="PORTA">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="ISC" edc:desc="Input/Sense Configuration" edc:nzwidth="0x3">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x0"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x1"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x2"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x3"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x4"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x5"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:desc="Pullup enable" edc:nzwidth="0x1"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="INVEN" edc:desc="Inverted I/O Enable" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:_addr="0x418" edc:offset="0x8"/>
        <edc:SFRDef edc:_addr="0x420" edc:access="nnnnnnnn" edc:cname="DIR" edc:nzwidth="0x8" ltx:memberofperipheral="PORTB"/>
        <edc:SFRDef edc:_addr="0x421" edc:access="nnnnnnnn" edc:cname="DIRSET" edc:nzwidth="0x8" ltx:memberofperipheral="PORTB"/>
        <edc:SFRDef edc:_addr="0x422" edc:access="nnnnnnnn" edc:cname="DIRCLR" edc:nzwidth="0x8" ltx:memberofperipheral="PORTB"/>
        <edc:SFRDef edc:_addr="0x423" edc:access="nnnnnnnn" edc:cname="DIRTGL" edc:nzwidth="0x8" ltx:memberofperipheral="PORTB"/>
        <edc:SFRDef edc:_addr="0x424" edc:access="nnnnnnnn" edc:cname="OUT" edc:nzwidth="0x8" ltx:memberofperipheral="PORTB"/>
        <edc:SFRDef edc:_addr="0x425" edc:access="nnnnnnnn" edc:cname="OUTSET" edc:nzwidth="0x8" ltx:memberofperipheral="PORTB"/>
        <edc:SFRDef edc:_addr="0x426" edc:access="nnnnnnnn" edc:cname="OUTCLR" edc:nzwidth="0x8" ltx:memberofperipheral="PORTB"/>
        <edc:SFRDef edc:_addr="0x427" edc:access="nnnnnnnn" edc:cname="OUTTGL" edc:nzwidth="0x8" ltx:memberofperipheral="PORTB"/>
        <edc:SFRDef edc:_addr="0x428" edc:access="nnnnnnnn" edc:cname="IN" edc:nzwidth="0x8" ltx:memberofperipheral="PORTB"/>
        <edc:SFRDef edc:_addr="0x429" edc:access="nnnnnnnn" edc:cname="INTFLAGS" edc:nzwidth="0x8" ltx:memberofperipheral="PORTB">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="INT" edc:desc="Pin Interrupt" edc:nzwidth="0x8"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:_addr="0x42A" edc:offset="0x6"/>
        <edc:SFRDef edc:_addr="0x430" edc:access="n---nnnn" edc:cname="PIN0CTRL" edc:nzwidth="0x8" ltx:memberofperipheral="PORTB">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="ISC" edc:desc="Input/Sense Configuration" edc:nzwidth="0x3">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x0"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x1"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x2"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x3"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x4"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x5"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:desc="Pullup enable" edc:nzwidth="0x1"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="INVEN" edc:desc="Inverted I/O Enable" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x431" edc:access="n---nnnn" edc:cname="PIN1CTRL" edc:nzwidth="0x8" ltx:memberofperipheral="PORTB">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="ISC" edc:desc="Input/Sense Configuration" edc:nzwidth="0x3">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x0"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x1"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x2"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x3"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x4"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x5"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:desc="Pullup enable" edc:nzwidth="0x1"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="INVEN" edc:desc="Inverted I/O Enable" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x432" edc:access="n---nnnn" edc:cname="PIN2CTRL" edc:nzwidth="0x8" ltx:memberofperipheral="PORTB">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="ISC" edc:desc="Input/Sense Configuration" edc:nzwidth="0x3">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x0"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x1"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x2"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x3"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x4"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x5"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:desc="Pullup enable" edc:nzwidth="0x1"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="INVEN" edc:desc="Inverted I/O Enable" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x433" edc:access="n---nnnn" edc:cname="PIN3CTRL" edc:nzwidth="0x8" ltx:memberofperipheral="PORTB">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="ISC" edc:desc="Input/Sense Configuration" edc:nzwidth="0x3">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x0"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x1"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x2"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x3"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x4"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x5"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:desc="Pullup enable" edc:nzwidth="0x1"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="INVEN" edc:desc="Inverted I/O Enable" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x434" edc:access="n---nnnn" edc:cname="PIN4CTRL" edc:nzwidth="0x8" ltx:memberofperipheral="PORTB">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="ISC" edc:desc="Input/Sense Configuration" edc:nzwidth="0x3">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x0"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x1"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x2"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x3"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x4"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x5"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:desc="Pullup enable" edc:nzwidth="0x1"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="INVEN" edc:desc="Inverted I/O Enable" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x435" edc:access="n---nnnn" edc:cname="PIN5CTRL" edc:nzwidth="0x8" ltx:memberofperipheral="PORTB">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="ISC" edc:desc="Input/Sense Configuration" edc:nzwidth="0x3">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x0"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x1"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x2"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x3"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x4"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x5"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:desc="Pullup enable" edc:nzwidth="0x1"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="INVEN" edc:desc="Inverted I/O Enable" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x436" edc:access="n---nnnn" edc:cname="PIN6CTRL" edc:nzwidth="0x8" ltx:memberofperipheral="PORTB">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="ISC" edc:desc="Input/Sense Configuration" edc:nzwidth="0x3">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x0"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x1"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x2"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x3"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x4"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x5"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:desc="Pullup enable" edc:nzwidth="0x1"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="INVEN" edc:desc="Inverted I/O Enable" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x437" edc:access="n---nnnn" edc:cname="PIN7CTRL" edc:nzwidth="0x8" ltx:memberofperipheral="PORTB">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="ISC" edc:desc="Input/Sense Configuration" edc:nzwidth="0x3">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x0"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x1"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x2"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x3"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x4"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x5"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:desc="Pullup enable" edc:nzwidth="0x1"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="INVEN" edc:desc="Inverted I/O Enable" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:_addr="0x438" edc:offset="0x8"/>
        <edc:SFRDef edc:_addr="0x440" edc:access="nnnnnnnn" edc:cname="DIR" edc:nzwidth="0x8" ltx:memberofperipheral="PORTC"/>
        <edc:SFRDef edc:_addr="0x441" edc:access="nnnnnnnn" edc:cname="DIRSET" edc:nzwidth="0x8" ltx:memberofperipheral="PORTC"/>
        <edc:SFRDef edc:_addr="0x442" edc:access="nnnnnnnn" edc:cname="DIRCLR" edc:nzwidth="0x8" ltx:memberofperipheral="PORTC"/>
        <edc:SFRDef edc:_addr="0x443" edc:access="nnnnnnnn" edc:cname="DIRTGL" edc:nzwidth="0x8" ltx:memberofperipheral="PORTC"/>
        <edc:SFRDef edc:_addr="0x444" edc:access="nnnnnnnn" edc:cname="OUT" edc:nzwidth="0x8" ltx:memberofperipheral="PORTC"/>
        <edc:SFRDef edc:_addr="0x445" edc:access="nnnnnnnn" edc:cname="OUTSET" edc:nzwidth="0x8" ltx:memberofperipheral="PORTC"/>
        <edc:SFRDef edc:_addr="0x446" edc:access="nnnnnnnn" edc:cname="OUTCLR" edc:nzwidth="0x8" ltx:memberofperipheral="PORTC"/>
        <edc:SFRDef edc:_addr="0x447" edc:access="nnnnnnnn" edc:cname="OUTTGL" edc:nzwidth="0x8" ltx:memberofperipheral="PORTC"/>
        <edc:SFRDef edc:_addr="0x448" edc:access="nnnnnnnn" edc:cname="IN" edc:nzwidth="0x8" ltx:memberofperipheral="PORTC"/>
        <edc:SFRDef edc:_addr="0x449" edc:access="nnnnnnnn" edc:cname="INTFLAGS" edc:nzwidth="0x8" ltx:memberofperipheral="PORTC">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="INT" edc:desc="Pin Interrupt" edc:nzwidth="0x8"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:_addr="0x44A" edc:offset="0x6"/>
        <edc:SFRDef edc:_addr="0x450" edc:access="n---nnnn" edc:cname="PIN0CTRL" edc:nzwidth="0x8" ltx:memberofperipheral="PORTC">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="ISC" edc:desc="Input/Sense Configuration" edc:nzwidth="0x3">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x0"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x1"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x2"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x3"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x4"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x5"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:desc="Pullup enable" edc:nzwidth="0x1"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="INVEN" edc:desc="Inverted I/O Enable" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x451" edc:access="n---nnnn" edc:cname="PIN1CTRL" edc:nzwidth="0x8" ltx:memberofperipheral="PORTC">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="ISC" edc:desc="Input/Sense Configuration" edc:nzwidth="0x3">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x0"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x1"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x2"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x3"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x4"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x5"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:desc="Pullup enable" edc:nzwidth="0x1"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="INVEN" edc:desc="Inverted I/O Enable" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x452" edc:access="n---nnnn" edc:cname="PIN2CTRL" edc:nzwidth="0x8" ltx:memberofperipheral="PORTC">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="ISC" edc:desc="Input/Sense Configuration" edc:nzwidth="0x3">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x0"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x1"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x2"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x3"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x4"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x5"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:desc="Pullup enable" edc:nzwidth="0x1"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="INVEN" edc:desc="Inverted I/O Enable" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x453" edc:access="n---nnnn" edc:cname="PIN3CTRL" edc:nzwidth="0x8" ltx:memberofperipheral="PORTC">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="ISC" edc:desc="Input/Sense Configuration" edc:nzwidth="0x3">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x0"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x1"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x2"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x3"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x4"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x5"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:desc="Pullup enable" edc:nzwidth="0x1"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="INVEN" edc:desc="Inverted I/O Enable" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x454" edc:access="n---nnnn" edc:cname="PIN4CTRL" edc:nzwidth="0x8" ltx:memberofperipheral="PORTC">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="ISC" edc:desc="Input/Sense Configuration" edc:nzwidth="0x3">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x0"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x1"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x2"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x3"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x4"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x5"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:desc="Pullup enable" edc:nzwidth="0x1"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="INVEN" edc:desc="Inverted I/O Enable" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x455" edc:access="n---nnnn" edc:cname="PIN5CTRL" edc:nzwidth="0x8" ltx:memberofperipheral="PORTC">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="ISC" edc:desc="Input/Sense Configuration" edc:nzwidth="0x3">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x0"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x1"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x2"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x3"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x4"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x5"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:desc="Pullup enable" edc:nzwidth="0x1"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="INVEN" edc:desc="Inverted I/O Enable" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x456" edc:access="n---nnnn" edc:cname="PIN6CTRL" edc:nzwidth="0x8" ltx:memberofperipheral="PORTC">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="ISC" edc:desc="Input/Sense Configuration" edc:nzwidth="0x3">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x0"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x1"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x2"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x3"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x4"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x5"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:desc="Pullup enable" edc:nzwidth="0x1"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="INVEN" edc:desc="Inverted I/O Enable" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x457" edc:access="n---nnnn" edc:cname="PIN7CTRL" edc:nzwidth="0x8" ltx:memberofperipheral="PORTC">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="ISC" edc:desc="Input/Sense Configuration" edc:nzwidth="0x3">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x0"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x1"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x2"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x3"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x4"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x5"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:desc="Pullup enable" edc:nzwidth="0x1"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="INVEN" edc:desc="Inverted I/O Enable" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:_addr="0x458" edc:offset="0x1A8"/>
        <edc:SFRDef edc:_addr="0x600" edc:access="n----nnn" edc:cname="CTRLA" edc:nzwidth="0x8" ltx:memberofperipheral="ADC0">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="ENABLE" edc:desc="ADC Enable" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="FREERUN" edc:desc="ADC Freerun mode" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="RESSEL" edc:desc="ADC Resolution" edc:nzwidth="0x1">
                <edc:SFRFieldSemantic edc:cname="10BIT" edc:desc="10-bit mode" edc:when="(field &amp; 0x1) == 0x0"/>
                <edc:SFRFieldSemantic edc:cname="8BIT" edc:desc="8-bit mode" edc:when="(field &amp; 0x1) == 0x1"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="0x4"/>
              <edc:SFRFieldDef edc:cname="RUNSTBY" edc:desc="Run standby mode" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x601" edc:access="-----nnn" edc:cname="CTRLB" edc:nzwidth="0x8" ltx:memberofperipheral="ADC0">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="SAMPNUM" edc:desc="Accumulation Samples" edc:nzwidth="0x3">
                <edc:SFRFieldSemantic edc:cname="ACC1" edc:desc="1 ADC sample" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="ACC2" edc:desc="Accumulate 2 samples" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="ACC4" edc:desc="Accumulate 4 samples" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="ACC8" edc:desc="Accumulate 8 samples" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="ACC16" edc:desc="Accumulate 16 samples" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="ACC32" edc:desc="Accumulate 32 samples" edc:when="(field &amp; 0x7) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="ACC64" edc:desc="Accumulate 64 samples" edc:when="(field &amp; 0x7) == 0x06"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x602" edc:access="-nnn-nnn" edc:cname="CTRLC" edc:nzwidth="0x8" ltx:memberofperipheral="ADC0">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="PRESC" edc:desc="Clock Pre-scaler" edc:nzwidth="0x3">
                <edc:SFRFieldSemantic edc:cname="DIV2" edc:desc="CLK_PER divided by 2" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="DIV4" edc:desc="CLK_PER divided by 4" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="DIV8" edc:desc="CLK_PER divided by 8" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="DIV16" edc:desc="CLK_PER divided by 16" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="DIV32" edc:desc="CLK_PER divided by 32" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="DIV64" edc:desc="CLK_PER divided by 64" edc:when="(field &amp; 0x7) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="DIV128" edc:desc="CLK_PER divided by 128" edc:when="(field &amp; 0x7) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="DIV256" edc:desc="CLK_PER divided by 256" edc:when="(field &amp; 0x7) == 0x07"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="REFSEL" edc:desc="Reference Selection" edc:nzwidth="0x2">
                <edc:SFRFieldSemantic edc:cname="INTREF" edc:desc="Internal reference" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="VDDREF" edc:desc="VDD" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="VREFA" edc:desc="External reference" edc:when="(field &amp; 0x3) == 0x02"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="SAMPCAP" edc:desc="Sample Capacitance Selection" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x603" edc:access="nnnnnnnn" edc:cname="CTRLD" edc:nzwidth="0x8" ltx:memberofperipheral="ADC0">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="SAMPDLY" edc:desc="Sampling Delay Selection" edc:nzwidth="0x4"/>
              <edc:SFRFieldDef edc:cname="ASDV" edc:desc="Automatic Sampling Delay Variation" edc:nzwidth="0x1">
                <edc:SFRFieldSemantic edc:cname="ASVOFF" edc:desc="The Automatic Sampling Delay Variation is disabled" edc:when="(field &amp; 0x1) == 0x0"/>
                <edc:SFRFieldSemantic edc:cname="ASVON" edc:desc="The Automatic Sampling Delay Variation is enabled" edc:when="(field &amp; 0x1) == 0x1"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="INITDLY" edc:desc="Initial Delay Selection" edc:nzwidth="0x3">
                <edc:SFRFieldSemantic edc:cname="DLY0" edc:desc="Delay 0 CLK_ADC cycles" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="DLY16" edc:desc="Delay 16 CLK_ADC cycles" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="DLY32" edc:desc="Delay 32 CLK_ADC cycles" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="DLY64" edc:desc="Delay 64 CLK_ADC cycles" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="DLY128" edc:desc="Delay 128 CLK_ADC cycles" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="DLY256" edc:desc="Delay 256 CLK_ADC cycles" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x604" edc:access="-----nnn" edc:cname="CTRLE" edc:nzwidth="0x8" ltx:memberofperipheral="ADC0">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="WINCM" edc:desc="Window Comparator Mode" edc:nzwidth="0x3">
                <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Window Comparison" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BELOW" edc:desc="Below Window" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="ABOVE" edc:desc="Above Window" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="INSIDE" edc:desc="Inside Window" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="OUTSIDE" edc:desc="Outside Window" edc:when="(field &amp; 0x7) == 0x04"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x605" edc:access="---nnnnn" edc:cname="SAMPCTRL" edc:nzwidth="0x8" ltx:memberofperipheral="ADC0">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="SAMPLEN" edc:desc="Sample lenght" edc:nzwidth="0x5"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x606" edc:access="---nnnnn" edc:cname="MUXPOS" edc:nzwidth="0x8" ltx:memberofperipheral="ADC0">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="MUXPOS" edc:desc="Analog Channel Selection Bits" edc:nzwidth="0x5">
                <edc:SFRFieldSemantic edc:cname="AIN0" edc:desc="ADC input pin 0" edc:when="(field &amp; 0x1F) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="AIN1" edc:desc="ADC input pin 1" edc:when="(field &amp; 0x1F) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="AIN2" edc:desc="ADC input pin 2" edc:when="(field &amp; 0x1F) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="AIN3" edc:desc="ADC input pin 3" edc:when="(field &amp; 0x1F) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="AIN4" edc:desc="ADC input pin 4" edc:when="(field &amp; 0x1F) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="AIN5" edc:desc="ADC input pin 5" edc:when="(field &amp; 0x1F) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="AIN6" edc:desc="ADC input pin 6" edc:when="(field &amp; 0x1F) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="AIN7" edc:desc="ADC input pin 7" edc:when="(field &amp; 0x1F) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="AIN8" edc:desc="ADC input pin 8" edc:when="(field &amp; 0x1F) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="AIN9" edc:desc="ADC input pin 9" edc:when="(field &amp; 0x1F) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="AIN10" edc:desc="ADC input pin 10" edc:when="(field &amp; 0x1F) == 0x0A"/>
                <edc:SFRFieldSemantic edc:cname="AIN11" edc:desc="ADC input pin 11" edc:when="(field &amp; 0x1F) == 0x0B"/>
                <edc:SFRFieldSemantic edc:cname="PTC" edc:desc="PTC/DAC2" edc:when="(field &amp; 0x1F) == 0x1B"/>
                <edc:SFRFieldSemantic edc:cname="DAC0" edc:desc="DAC0/DAC0" edc:when="(field &amp; 0x1F) == 0x1C"/>
                <edc:SFRFieldSemantic edc:cname="INTREF" edc:desc="Internal Ref" edc:when="(field &amp; 0x1F) == 0x1D"/>
                <edc:SFRFieldSemantic edc:cname="TEMPSENSE" edc:desc="Temp sensor/DAC1" edc:when="(field &amp; 0x1F) == 0x1E"/>
                <edc:SFRFieldSemantic edc:cname="GND" edc:desc="GND" edc:when="(field &amp; 0x1F) == 0x1F"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:_addr="0x607" edc:offset="0x1"/>
        <edc:SFRDef edc:_addr="0x608" edc:access="-------n" edc:cname="COMMAND" edc:nzwidth="0x8" ltx:memberofperipheral="ADC0">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="STCONV" edc:desc="Start Conversion Operation" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x609" edc:access="-------n" edc:cname="EVCTRL" edc:nzwidth="0x8" ltx:memberofperipheral="ADC0">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="STARTEI" edc:desc="Start Event Input Enable" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x60A" edc:access="------nn" edc:cname="INTCTRL" edc:nzwidth="0x8" ltx:memberofperipheral="ADC0">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="RESRDY" edc:desc="Result Ready Interrupt Enable" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="WCMP" edc:desc="Window Comparator Interrupt Enable" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x60B" edc:access="------nn" edc:cname="INTFLAGS" edc:nzwidth="0x8" ltx:memberofperipheral="ADC0">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="RESRDY" edc:desc="Result Ready Flag" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="WCMP" edc:desc="Window Comparator Flag" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x60C" edc:access="-------n" edc:cname="DBGCTRL" edc:nzwidth="0x8" ltx:memberofperipheral="ADC0">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="DBGRUN" edc:desc="Debug run" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x60D" edc:access="nnnnnnnn" edc:cname="TEMP" edc:nzwidth="0x8" ltx:memberofperipheral="ADC0">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="TEMP" edc:desc="Temporary" edc:nzwidth="0x8"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:_addr="0x60E" edc:offset="0x2"/>
        <edc:SFRDef edc:_addr="0x610" edc:access="rrrrrrrrrrrrrrrr" edc:cname="RES" edc:nzwidth="0x10" ltx:memberofperipheral="ADC0"/>
        <edc:SFRDef edc:_addr="0x612" edc:access="nnnnnnnnnnnnnnnn" edc:cname="WINLT" edc:nzwidth="0x10" ltx:memberofperipheral="ADC0"/>
        <edc:SFRDef edc:_addr="0x614" edc:access="nnnnnnnnnnnnnnnn" edc:cname="WINHT" edc:nzwidth="0x10" ltx:memberofperipheral="ADC0"/>
        <edc:SFRDef edc:_addr="0x616" edc:access="-------n" edc:cname="CALIB" edc:nzwidth="0x8" ltx:memberofperipheral="ADC0">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="DUTYCYC" edc:desc="Duty Cycle" edc:nzwidth="0x1">
                <edc:SFRFieldSemantic edc:cname="DUTY50" edc:desc="50% Duty cycle" edc:when="(field &amp; 0x1) == 0x0"/>
                <edc:SFRFieldSemantic edc:cname="DUTY25" edc:desc="25% Duty cycle" edc:when="(field &amp; 0x1) == 0x1"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:_addr="0x617" edc:offset="0x29"/>
        <edc:SFRDef edc:_addr="0x640" edc:access="n----nnn" edc:cname="CTRLA" edc:nzwidth="0x8" ltx:memberofperipheral="ADC1">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="ENABLE" edc:desc="ADC Enable" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="FREERUN" edc:desc="ADC Freerun mode" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="RESSEL" edc:desc="ADC Resolution" edc:nzwidth="0x1">
                <edc:SFRFieldSemantic edc:cname="10BIT" edc:desc="10-bit mode" edc:when="(field &amp; 0x1) == 0x0"/>
                <edc:SFRFieldSemantic edc:cname="8BIT" edc:desc="8-bit mode" edc:when="(field &amp; 0x1) == 0x1"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="0x4"/>
              <edc:SFRFieldDef edc:cname="RUNSTBY" edc:desc="Run standby mode" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x641" edc:access="-----nnn" edc:cname="CTRLB" edc:nzwidth="0x8" ltx:memberofperipheral="ADC1">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="SAMPNUM" edc:desc="Accumulation Samples" edc:nzwidth="0x3">
                <edc:SFRFieldSemantic edc:cname="ACC1" edc:desc="1 ADC sample" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="ACC2" edc:desc="Accumulate 2 samples" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="ACC4" edc:desc="Accumulate 4 samples" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="ACC8" edc:desc="Accumulate 8 samples" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="ACC16" edc:desc="Accumulate 16 samples" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="ACC32" edc:desc="Accumulate 32 samples" edc:when="(field &amp; 0x7) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="ACC64" edc:desc="Accumulate 64 samples" edc:when="(field &amp; 0x7) == 0x06"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x642" edc:access="-nnn-nnn" edc:cname="CTRLC" edc:nzwidth="0x8" ltx:memberofperipheral="ADC1">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="PRESC" edc:desc="Clock Pre-scaler" edc:nzwidth="0x3">
                <edc:SFRFieldSemantic edc:cname="DIV2" edc:desc="CLK_PER divided by 2" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="DIV4" edc:desc="CLK_PER divided by 4" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="DIV8" edc:desc="CLK_PER divided by 8" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="DIV16" edc:desc="CLK_PER divided by 16" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="DIV32" edc:desc="CLK_PER divided by 32" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="DIV64" edc:desc="CLK_PER divided by 64" edc:when="(field &amp; 0x7) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="DIV128" edc:desc="CLK_PER divided by 128" edc:when="(field &amp; 0x7) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="DIV256" edc:desc="CLK_PER divided by 256" edc:when="(field &amp; 0x7) == 0x07"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="REFSEL" edc:desc="Reference Selection" edc:nzwidth="0x2">
                <edc:SFRFieldSemantic edc:cname="INTREF" edc:desc="Internal reference" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="VDDREF" edc:desc="VDD" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="VREFA" edc:desc="External reference" edc:when="(field &amp; 0x3) == 0x02"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="SAMPCAP" edc:desc="Sample Capacitance Selection" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x643" edc:access="nnnnnnnn" edc:cname="CTRLD" edc:nzwidth="0x8" ltx:memberofperipheral="ADC1">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="SAMPDLY" edc:desc="Sampling Delay Selection" edc:nzwidth="0x4"/>
              <edc:SFRFieldDef edc:cname="ASDV" edc:desc="Automatic Sampling Delay Variation" edc:nzwidth="0x1">
                <edc:SFRFieldSemantic edc:cname="ASVOFF" edc:desc="The Automatic Sampling Delay Variation is disabled" edc:when="(field &amp; 0x1) == 0x0"/>
                <edc:SFRFieldSemantic edc:cname="ASVON" edc:desc="The Automatic Sampling Delay Variation is enabled" edc:when="(field &amp; 0x1) == 0x1"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="INITDLY" edc:desc="Initial Delay Selection" edc:nzwidth="0x3">
                <edc:SFRFieldSemantic edc:cname="DLY0" edc:desc="Delay 0 CLK_ADC cycles" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="DLY16" edc:desc="Delay 16 CLK_ADC cycles" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="DLY32" edc:desc="Delay 32 CLK_ADC cycles" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="DLY64" edc:desc="Delay 64 CLK_ADC cycles" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="DLY128" edc:desc="Delay 128 CLK_ADC cycles" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="DLY256" edc:desc="Delay 256 CLK_ADC cycles" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x644" edc:access="-----nnn" edc:cname="CTRLE" edc:nzwidth="0x8" ltx:memberofperipheral="ADC1">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="WINCM" edc:desc="Window Comparator Mode" edc:nzwidth="0x3">
                <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Window Comparison" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BELOW" edc:desc="Below Window" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="ABOVE" edc:desc="Above Window" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="INSIDE" edc:desc="Inside Window" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="OUTSIDE" edc:desc="Outside Window" edc:when="(field &amp; 0x7) == 0x04"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x645" edc:access="---nnnnn" edc:cname="SAMPCTRL" edc:nzwidth="0x8" ltx:memberofperipheral="ADC1">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="SAMPLEN" edc:desc="Sample lenght" edc:nzwidth="0x5"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x646" edc:access="---nnnnn" edc:cname="MUXPOS" edc:nzwidth="0x8" ltx:memberofperipheral="ADC1">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="MUXPOS" edc:desc="Analog Channel Selection Bits" edc:nzwidth="0x5">
                <edc:SFRFieldSemantic edc:cname="AIN0" edc:desc="ADC input pin 0" edc:when="(field &amp; 0x1F) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="AIN1" edc:desc="ADC input pin 1" edc:when="(field &amp; 0x1F) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="AIN2" edc:desc="ADC input pin 2" edc:when="(field &amp; 0x1F) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="AIN3" edc:desc="ADC input pin 3" edc:when="(field &amp; 0x1F) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="AIN4" edc:desc="ADC input pin 4" edc:when="(field &amp; 0x1F) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="AIN5" edc:desc="ADC input pin 5" edc:when="(field &amp; 0x1F) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="AIN6" edc:desc="ADC input pin 6" edc:when="(field &amp; 0x1F) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="AIN7" edc:desc="ADC input pin 7" edc:when="(field &amp; 0x1F) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="AIN8" edc:desc="ADC input pin 8" edc:when="(field &amp; 0x1F) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="AIN9" edc:desc="ADC input pin 9" edc:when="(field &amp; 0x1F) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="AIN10" edc:desc="ADC input pin 10" edc:when="(field &amp; 0x1F) == 0x0A"/>
                <edc:SFRFieldSemantic edc:cname="AIN11" edc:desc="ADC input pin 11" edc:when="(field &amp; 0x1F) == 0x0B"/>
                <edc:SFRFieldSemantic edc:cname="PTC" edc:desc="PTC/DAC2" edc:when="(field &amp; 0x1F) == 0x1B"/>
                <edc:SFRFieldSemantic edc:cname="DAC0" edc:desc="DAC0/DAC0" edc:when="(field &amp; 0x1F) == 0x1C"/>
                <edc:SFRFieldSemantic edc:cname="INTREF" edc:desc="Internal Ref" edc:when="(field &amp; 0x1F) == 0x1D"/>
                <edc:SFRFieldSemantic edc:cname="TEMPSENSE" edc:desc="Temp sensor/DAC1" edc:when="(field &amp; 0x1F) == 0x1E"/>
                <edc:SFRFieldSemantic edc:cname="GND" edc:desc="GND" edc:when="(field &amp; 0x1F) == 0x1F"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:_addr="0x647" edc:offset="0x1"/>
        <edc:SFRDef edc:_addr="0x648" edc:access="-------n" edc:cname="COMMAND" edc:nzwidth="0x8" ltx:memberofperipheral="ADC1">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="STCONV" edc:desc="Start Conversion Operation" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x649" edc:access="-------n" edc:cname="EVCTRL" edc:nzwidth="0x8" ltx:memberofperipheral="ADC1">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="STARTEI" edc:desc="Start Event Input Enable" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x64A" edc:access="------nn" edc:cname="INTCTRL" edc:nzwidth="0x8" ltx:memberofperipheral="ADC1">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="RESRDY" edc:desc="Result Ready Interrupt Enable" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="WCMP" edc:desc="Window Comparator Interrupt Enable" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x64B" edc:access="------nn" edc:cname="INTFLAGS" edc:nzwidth="0x8" ltx:memberofperipheral="ADC1">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="RESRDY" edc:desc="Result Ready Flag" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="WCMP" edc:desc="Window Comparator Flag" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x64C" edc:access="-------n" edc:cname="DBGCTRL" edc:nzwidth="0x8" ltx:memberofperipheral="ADC1">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="DBGRUN" edc:desc="Debug run" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x64D" edc:access="nnnnnnnn" edc:cname="TEMP" edc:nzwidth="0x8" ltx:memberofperipheral="ADC1">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="TEMP" edc:desc="Temporary" edc:nzwidth="0x8"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:_addr="0x64E" edc:offset="0x2"/>
        <edc:SFRDef edc:_addr="0x650" edc:access="rrrrrrrrrrrrrrrr" edc:cname="RES" edc:nzwidth="0x10" ltx:memberofperipheral="ADC1"/>
        <edc:SFRDef edc:_addr="0x652" edc:access="nnnnnnnnnnnnnnnn" edc:cname="WINLT" edc:nzwidth="0x10" ltx:memberofperipheral="ADC1"/>
        <edc:SFRDef edc:_addr="0x654" edc:access="nnnnnnnnnnnnnnnn" edc:cname="WINHT" edc:nzwidth="0x10" ltx:memberofperipheral="ADC1"/>
        <edc:SFRDef edc:_addr="0x656" edc:access="-------n" edc:cname="CALIB" edc:nzwidth="0x8" ltx:memberofperipheral="ADC1">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="DUTYCYC" edc:desc="Duty Cycle" edc:nzwidth="0x1">
                <edc:SFRFieldSemantic edc:cname="DUTY50" edc:desc="50% Duty cycle" edc:when="(field &amp; 0x1) == 0x0"/>
                <edc:SFRFieldSemantic edc:cname="DUTY25" edc:desc="25% Duty cycle" edc:when="(field &amp; 0x1) == 0x1"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:_addr="0x657" edc:offset="0x29"/>
        <edc:SFRDef edc:_addr="0x680" edc:access="nnnnnnnn" edc:cname="CTRLA" edc:nzwidth="0x8" ltx:memberofperipheral="AC0">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="ENABLE" edc:desc="Enable" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="HYSMODE" edc:desc="Hysteresis Mode" edc:nzwidth="0x2">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="No hysteresis" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="10mV" edc:desc="10mV hysteresis" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="25mV" edc:desc="25mV hysteresis" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="50mV" edc:desc="50mV hysteresis" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="LPMODE" edc:desc="Low Power Mode" edc:nzwidth="0x1">
                <edc:SFRFieldSemantic edc:cname="DIS" edc:desc="Low power mode disabled" edc:when="(field &amp; 0x1) == 0x0"/>
                <edc:SFRFieldSemantic edc:cname="EN" edc:desc="Low power mode enabled" edc:when="(field &amp; 0x1) == 0x1"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="INTMODE" edc:desc="Interrupt Mode" edc:nzwidth="0x2">
                <edc:SFRFieldSemantic edc:cname="BOTHEDGE" edc:desc="Any Edge" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="NEGEDGE" edc:desc="Negative Edge" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="POSEDGE" edc:desc="Positive Edge" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="OUTEN" edc:desc="Output Buffer Enable" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:desc="Run in Standby Mode" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:_addr="0x681" edc:offset="0x1"/>
        <edc:SFRDef edc:_addr="0x682" edc:access="n--nn-nn" edc:cname="MUXCTRLA" edc:nzwidth="0x8" ltx:memberofperipheral="AC0">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="MUXNEG" edc:desc="Negative Input MUX Selection" edc:nzwidth="0x2">
                <edc:SFRFieldSemantic edc:cname="PIN0" edc:desc="Negative Pin 0" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="PIN1" edc:desc="Negative Pin 1" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="VREF" edc:desc="Voltage Reference" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="DAC" edc:desc="DAC output" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="MUXPOS" edc:desc="Positive Input MUX Selection" edc:nzwidth="0x2">
                <edc:SFRFieldSemantic edc:cname="PIN0" edc:desc="Positive Pin 0" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="PIN1" edc:desc="Positive Pin 1" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="PIN2" edc:desc="Positive Pin 2" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="PIN3" edc:desc="Positive Pin 3" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="0x2"/>
              <edc:SFRFieldDef edc:cname="INVERT" edc:desc="Invert AC Output" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:_addr="0x683" edc:offset="0x3"/>
        <edc:SFRDef edc:_addr="0x686" edc:access="-------n" edc:cname="INTCTRL" edc:nzwidth="0x8" ltx:memberofperipheral="AC0">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="CMP" edc:desc="Analog Comparator 0 Interrupt Enable" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x687" edc:access="---n---n" edc:cname="STATUS" edc:nzwidth="0x8" ltx:memberofperipheral="AC0">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="CMP" edc:desc="Analog Comparator Interrupt Flag" edc:nzwidth="0x1"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="STATE" edc:desc="Analog Comparator State" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x688" edc:access="nnnnnnnn" edc:cname="CTRLA" edc:nzwidth="0x8" ltx:memberofperipheral="AC1">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="ENABLE" edc:desc="Enable" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="HYSMODE" edc:desc="Hysteresis Mode" edc:nzwidth="0x2">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="No hysteresis" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="10mV" edc:desc="10mV hysteresis" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="25mV" edc:desc="25mV hysteresis" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="50mV" edc:desc="50mV hysteresis" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="LPMODE" edc:desc="Low Power Mode" edc:nzwidth="0x1">
                <edc:SFRFieldSemantic edc:cname="DIS" edc:desc="Low power mode disabled" edc:when="(field &amp; 0x1) == 0x0"/>
                <edc:SFRFieldSemantic edc:cname="EN" edc:desc="Low power mode enabled" edc:when="(field &amp; 0x1) == 0x1"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="INTMODE" edc:desc="Interrupt Mode" edc:nzwidth="0x2">
                <edc:SFRFieldSemantic edc:cname="BOTHEDGE" edc:desc="Any Edge" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="NEGEDGE" edc:desc="Negative Edge" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="POSEDGE" edc:desc="Positive Edge" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="OUTEN" edc:desc="Output Buffer Enable" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:desc="Run in Standby Mode" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:_addr="0x689" edc:offset="0x1"/>
        <edc:SFRDef edc:_addr="0x68A" edc:access="n--nn-nn" edc:cname="MUXCTRLA" edc:nzwidth="0x8" ltx:memberofperipheral="AC1">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="MUXNEG" edc:desc="Negative Input MUX Selection" edc:nzwidth="0x2">
                <edc:SFRFieldSemantic edc:cname="PIN0" edc:desc="Negative Pin 0" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="PIN1" edc:desc="Negative Pin 1" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="VREF" edc:desc="Voltage Reference" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="DAC" edc:desc="DAC output" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="MUXPOS" edc:desc="Positive Input MUX Selection" edc:nzwidth="0x2">
                <edc:SFRFieldSemantic edc:cname="PIN0" edc:desc="Positive Pin 0" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="PIN1" edc:desc="Positive Pin 1" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="PIN2" edc:desc="Positive Pin 2" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="PIN3" edc:desc="Positive Pin 3" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="0x2"/>
              <edc:SFRFieldDef edc:cname="INVERT" edc:desc="Invert AC Output" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:_addr="0x68B" edc:offset="0x3"/>
        <edc:SFRDef edc:_addr="0x68E" edc:access="-------n" edc:cname="INTCTRL" edc:nzwidth="0x8" ltx:memberofperipheral="AC1">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="CMP" edc:desc="Analog Comparator 0 Interrupt Enable" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x68F" edc:access="---n---n" edc:cname="STATUS" edc:nzwidth="0x8" ltx:memberofperipheral="AC1">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="CMP" edc:desc="Analog Comparator Interrupt Flag" edc:nzwidth="0x1"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="STATE" edc:desc="Analog Comparator State" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x690" edc:access="nnnnnnnn" edc:cname="CTRLA" edc:nzwidth="0x8" ltx:memberofperipheral="AC2">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="ENABLE" edc:desc="Enable" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="HYSMODE" edc:desc="Hysteresis Mode" edc:nzwidth="0x2">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="No hysteresis" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="10mV" edc:desc="10mV hysteresis" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="25mV" edc:desc="25mV hysteresis" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="50mV" edc:desc="50mV hysteresis" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="LPMODE" edc:desc="Low Power Mode" edc:nzwidth="0x1">
                <edc:SFRFieldSemantic edc:cname="DIS" edc:desc="Low power mode disabled" edc:when="(field &amp; 0x1) == 0x0"/>
                <edc:SFRFieldSemantic edc:cname="EN" edc:desc="Low power mode enabled" edc:when="(field &amp; 0x1) == 0x1"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="INTMODE" edc:desc="Interrupt Mode" edc:nzwidth="0x2">
                <edc:SFRFieldSemantic edc:cname="BOTHEDGE" edc:desc="Any Edge" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="NEGEDGE" edc:desc="Negative Edge" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="POSEDGE" edc:desc="Positive Edge" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="OUTEN" edc:desc="Output Buffer Enable" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:desc="Run in Standby Mode" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:_addr="0x691" edc:offset="0x1"/>
        <edc:SFRDef edc:_addr="0x692" edc:access="n--nn-nn" edc:cname="MUXCTRLA" edc:nzwidth="0x8" ltx:memberofperipheral="AC2">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="MUXNEG" edc:desc="Negative Input MUX Selection" edc:nzwidth="0x2">
                <edc:SFRFieldSemantic edc:cname="PIN0" edc:desc="Negative Pin 0" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="PIN1" edc:desc="Negative Pin 1" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="VREF" edc:desc="Voltage Reference" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="DAC" edc:desc="DAC output" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="MUXPOS" edc:desc="Positive Input MUX Selection" edc:nzwidth="0x2">
                <edc:SFRFieldSemantic edc:cname="PIN0" edc:desc="Positive Pin 0" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="PIN1" edc:desc="Positive Pin 1" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="PIN2" edc:desc="Positive Pin 2" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="PIN3" edc:desc="Positive Pin 3" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="0x2"/>
              <edc:SFRFieldDef edc:cname="INVERT" edc:desc="Invert AC Output" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:_addr="0x693" edc:offset="0x3"/>
        <edc:SFRDef edc:_addr="0x696" edc:access="-------n" edc:cname="INTCTRL" edc:nzwidth="0x8" ltx:memberofperipheral="AC2">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="CMP" edc:desc="Analog Comparator 0 Interrupt Enable" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x697" edc:access="---n---n" edc:cname="STATUS" edc:nzwidth="0x8" ltx:memberofperipheral="AC2">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="CMP" edc:desc="Analog Comparator Interrupt Flag" edc:nzwidth="0x1"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="STATE" edc:desc="Analog Comparator State" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:_addr="0x698" edc:offset="0x8"/>
        <edc:SFRDef edc:_addr="0x6A0" edc:access="nn-----n" edc:cname="CTRLA" edc:nzwidth="0x8" ltx:memberofperipheral="DAC0">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="ENABLE" edc:desc="DAC Enable" edc:nzwidth="0x1"/>
              <edc:AdjustPoint edc:offset="0x5"/>
              <edc:SFRFieldDef edc:cname="OUTEN" edc:desc="Output Buffer Enable" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:desc="Run in Standby Mode" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x6A1" edc:access="nnnnnnnn" edc:cname="DATA" edc:nzwidth="0x8" ltx:memberofperipheral="DAC0"/>
        <edc:AdjustPoint edc:_addr="0x6A2" edc:offset="0x6"/>
        <edc:SFRDef edc:_addr="0x6A8" edc:access="nn-----n" edc:cname="CTRLA" edc:nzwidth="0x8" ltx:memberofperipheral="DAC1">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="ENABLE" edc:desc="DAC Enable" edc:nzwidth="0x1"/>
              <edc:AdjustPoint edc:offset="0x5"/>
              <edc:SFRFieldDef edc:cname="OUTEN" edc:desc="Output Buffer Enable" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:desc="Run in Standby Mode" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x6A9" edc:access="nnnnnnnn" edc:cname="DATA" edc:nzwidth="0x8" ltx:memberofperipheral="DAC1"/>
        <edc:AdjustPoint edc:_addr="0x6AA" edc:offset="0x6"/>
        <edc:SFRDef edc:_addr="0x6B0" edc:access="nn-----n" edc:cname="CTRLA" edc:nzwidth="0x8" ltx:memberofperipheral="DAC2">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="ENABLE" edc:desc="DAC Enable" edc:nzwidth="0x1"/>
              <edc:AdjustPoint edc:offset="0x5"/>
              <edc:SFRFieldDef edc:cname="OUTEN" edc:desc="Output Buffer Enable" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:desc="Run in Standby Mode" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x6B1" edc:access="nnnnnnnn" edc:cname="DATA" edc:nzwidth="0x8" ltx:memberofperipheral="DAC2"/>
        <edc:AdjustPoint edc:_addr="0x6B2" edc:offset="0x14E"/>
        <edc:SFRDef edc:_addr="0x800" edc:access="rrrrrrrr" edc:cname="RXDATAL" edc:nzwidth="0x8" ltx:memberofperipheral="USART0">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="DATA" edc:desc="RX Data" edc:nzwidth="0x8"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x801" edc:access="rr---rrr" edc:cname="RXDATAH" edc:nzwidth="0x8" ltx:memberofperipheral="USART0">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="DATA8" edc:desc="Receiver Data Register" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="PERR" edc:desc="Parity Error" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="FERR" edc:desc="Frame Error" edc:nzwidth="0x1"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="BUFOVF" edc:desc="Buffer Overflow" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="RXCIF" edc:desc="Receive Complete Interrupt Flag" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x802" edc:access="nnnnnnnn" edc:cname="TXDATAL" edc:nzwidth="0x8" ltx:memberofperipheral="USART0">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="DATA" edc:desc="Transmit Data Register" edc:nzwidth="0x8"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x803" edc:access="-------n" edc:cname="TXDATAH" edc:nzwidth="0x8" ltx:memberofperipheral="USART0">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="DATA8" edc:desc="Transmit Data Register (CHSIZE=9bit)" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x804" edc:access="nnnnn-nn" edc:cname="STATUS" edc:nzwidth="0x8" ltx:memberofperipheral="USART0">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="WFB" edc:desc="Wait For Break" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="BDF" edc:desc="Break Detected Flag" edc:nzwidth="0x1"/>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="ISFIF" edc:desc="Inconsistent Sync Field Interrupt Flag" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="RXSIF" edc:desc="Receive Start Interrupt" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="DREIF" edc:desc="Data Register Empty Flag" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="TXCIF" edc:desc="Transmit Interrupt Flag" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="RXCIF" edc:desc="Receive Complete Interrupt Flag" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x805" edc:access="nnnnnnnn" edc:cname="CTRLA" edc:nzwidth="0x8" ltx:memberofperipheral="USART0">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="RS485" edc:desc="RS485 Mode internal transmitter" edc:nzwidth="0x2">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="RS485 Mode disabled" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="EXT" edc:desc="RS485 Mode External drive" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="INT" edc:desc="RS485 Mode Internal drive" edc:when="(field &amp; 0x3) == 0x02"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="ABEIE" edc:desc="Auto-baud Error Interrupt Enable" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="LBME" edc:desc="Loop-back Mode Enable" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="RXSIE" edc:desc="Receiver Start Frame Interrupt Enable" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="DREIE" edc:desc="Data Register Empty Interrupt Enable" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="TXCIE" edc:desc="Transmit Complete Interrupt Enable" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="RXCIE" edc:desc="Receive Complete Interrupt Enable" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x806" edc:access="nn-nnnnn" edc:cname="CTRLB" edc:nzwidth="0x8" ltx:memberofperipheral="USART0">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="MPCM" edc:desc="Multi-processor Communication Mode" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="RXMODE" edc:desc="Receiver Mode" edc:nzwidth="0x2">
                <edc:SFRFieldSemantic edc:cname="NORMAL" edc:desc="Normal mode" edc:when="(field &amp; 0x3) == 0x0"/>
                <edc:SFRFieldSemantic edc:cname="CLK2X" edc:desc="CLK2x mode" edc:when="(field &amp; 0x3) == 0x1"/>
                <edc:SFRFieldSemantic edc:cname="GENAUTO" edc:desc="Generic autobaud mode" edc:when="(field &amp; 0x3) == 0x2"/>
                <edc:SFRFieldSemantic edc:cname="LINAUTO" edc:desc="LIN constrained autobaud mode" edc:when="(field &amp; 0x3) == 0x3"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="ODME" edc:desc="Open Drain Mode Enable" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="SFDEN" edc:desc="Start Frame Detection Enable" edc:nzwidth="0x1"/>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="TXEN" edc:desc="Transmitter Enable" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="RXEN" edc:desc="Reciever enable" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x807" edc:access="nnnnnnnn" edc:cname="CTRLC" edc:nzwidth="0x8" ltx:memberofperipheral="USART0"/>
        <edc:SFRDef edc:_addr="0x808" edc:access="nnnnnnnnnnnnnnnn" edc:cname="BAUD" edc:nzwidth="0x10" ltx:memberofperipheral="USART0"/>
        <edc:AdjustPoint edc:_addr="0x80A" edc:offset="0x1"/>
        <edc:SFRDef edc:_addr="0x80B" edc:access="n------n" edc:cname="DBGCTRL" edc:nzwidth="0x8" ltx:memberofperipheral="USART0">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="DBGRUN" edc:desc="Debug Run" edc:nzwidth="0x1"/>
              <edc:AdjustPoint edc:offset="0x6"/>
              <edc:SFRFieldDef edc:cname="ABMBP" edc:desc="Autobaud majority voter bypass" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x80C" edc:access="-------n" edc:cname="EVCTRL" edc:nzwidth="0x8" ltx:memberofperipheral="USART0">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="IREI" edc:desc="IrDA Event Input Enable" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x80D" edc:access="nnnnnnnn" edc:cname="TXPLCTRL" edc:nzwidth="0x8" ltx:memberofperipheral="USART0">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="TXPL" edc:desc="Transmit pulse length" edc:nzwidth="0x8"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x80E" edc:access="-nnnnnnn" edc:cname="RXPLCTRL" edc:nzwidth="0x8" ltx:memberofperipheral="USART0">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="RXPL" edc:desc="Receiver Pulse Lenght" edc:nzwidth="0x7"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:_addr="0x80F" edc:offset="0x1"/>
        <edc:SFRDef edc:_addr="0x810" edc:access="nnnnnnnn" edc:cname="CTRLA" edc:nzwidth="0x8" ltx:memberofperipheral="TWI0"/>
        <edc:AdjustPoint edc:_addr="0x811" edc:offset="0x1"/>
        <edc:SFRDef edc:_addr="0x812" edc:access="nnnnnnnn" edc:cname="DBGCTRL" edc:nzwidth="0x8" ltx:memberofperipheral="TWI0"/>
        <edc:SFRDef edc:_addr="0x813" edc:access="nn-nnnnn" edc:cname="MCTRLA" edc:nzwidth="0x8" ltx:memberofperipheral="TWI0">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="ENABLE" edc:desc="Enable TWI Master" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="SMEN" edc:desc="Smart Mode Enable" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="TIMEOUT" edc:desc="Inactive Bus Timeout" edc:nzwidth="0x2">
                <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Bus Timeout Disabled" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="50US" edc:desc="50 Microseconds" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="100US" edc:desc="100 Microseconds" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="200US" edc:desc="200 Microseconds" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="QCEN" edc:desc="Quick Command Enable" edc:nzwidth="0x1"/>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="WIEN" edc:desc="Write Interrupt Enable" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="RIEN" edc:desc="Read Interrupt Enable" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x814" edc:access="----nnnn" edc:cname="MCTRLB" edc:nzwidth="0x8" ltx:memberofperipheral="TWI0">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="MCMD" edc:desc="Command" edc:nzwidth="0x2">
                <edc:SFRFieldSemantic edc:cname="NOACT" edc:desc="No Action" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="REPSTART" edc:desc="Issue Repeated Start Condition" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RECVTRANS" edc:desc="Receive or Transmit Data, depending on DIR" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="STOP" edc:desc="Issue Stop Condition" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="ACKACT" edc:desc="Acknowledge Action" edc:nzwidth="0x1">
                <edc:SFRFieldSemantic edc:cname="ACK" edc:desc="Send ACK" edc:when="(field &amp; 0x1) == 0x0"/>
                <edc:SFRFieldSemantic edc:cname="NACK" edc:desc="Send NACK" edc:when="(field &amp; 0x1) == 0x1"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="FLUSH" edc:desc="Flush" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x815" edc:access="nnnnnnnn" edc:cname="MSTATUS" edc:nzwidth="0x8" ltx:memberofperipheral="TWI0">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="BUSSTATE" edc:desc="Bus State" edc:nzwidth="0x2">
                <edc:SFRFieldSemantic edc:cname="UNKNOWN" edc:desc="Unknown Bus State" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="IDLE" edc:desc="Bus is Idle" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="OWNER" edc:desc="This Module Controls The Bus" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="BUSY" edc:desc="The Bus is Busy" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="BUSERR" edc:desc="Bus Error" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="ARBLOST" edc:desc="Arbitration Lost" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="RXACK" edc:desc="Received Acknowledge" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="CLKHOLD" edc:desc="Clock Hold" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="WIF" edc:desc="Write Interrupt Flag" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="RIF" edc:desc="Read Interrupt Flag" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x816" edc:access="nnnnnnnn" edc:cname="MBAUD" edc:nzwidth="0x8" ltx:memberofperipheral="TWI0"/>
        <edc:SFRDef edc:_addr="0x817" edc:access="nnnnnnnn" edc:cname="MADDR" edc:nzwidth="0x8" ltx:memberofperipheral="TWI0"/>
        <edc:SFRDef edc:_addr="0x818" edc:access="nnnnnnnn" edc:cname="MDATA" edc:nzwidth="0x8" ltx:memberofperipheral="TWI0"/>
        <edc:SFRDef edc:_addr="0x819" edc:access="nnn--nnn" edc:cname="SCTRLA" edc:nzwidth="0x8" ltx:memberofperipheral="TWI0">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="ENABLE" edc:desc="Enable TWI Slave" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="SMEN" edc:desc="Smart Mode Enable" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="PMEN" edc:desc="Promiscuous Mode Enable" edc:nzwidth="0x1"/>
              <edc:AdjustPoint edc:offset="0x2"/>
              <edc:SFRFieldDef edc:cname="PIEN" edc:desc="Stop Interrupt Enable" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="APIEN" edc:desc="Address/Stop Interrupt Enable" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="DIEN" edc:desc="Data Interrupt Enable" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x81A" edc:access="-----nnn" edc:cname="SCTRLB" edc:nzwidth="0x8" ltx:memberofperipheral="TWI0">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="SCMD" edc:desc="Command" edc:nzwidth="0x2">
                <edc:SFRFieldSemantic edc:cname="NOACT" edc:desc="No Action" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="COMPTRANS" edc:desc="Used To Complete a Transaction" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="RESPONSE" edc:desc="Used in Response to Address/Data Interrupt" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="ACKACT" edc:desc="Acknowledge Action" edc:nzwidth="0x1">
                <edc:SFRFieldSemantic edc:cname="ACK" edc:desc="Send ACK" edc:when="(field &amp; 0x1) == 0x0"/>
                <edc:SFRFieldSemantic edc:cname="NACK" edc:desc="Send NACK" edc:when="(field &amp; 0x1) == 0x1"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x81B" edc:access="nnnnnnnn" edc:cname="SSTATUS" edc:nzwidth="0x8" ltx:memberofperipheral="TWI0">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="AP" edc:desc="Slave Address or Stop" edc:nzwidth="0x1">
                <edc:SFRFieldSemantic edc:cname="STOP" edc:desc="Stop condition generated APIF" edc:when="(field &amp; 0x1) == 0x0"/>
                <edc:SFRFieldSemantic edc:cname="ADR" edc:desc="Address detection generated APIF" edc:when="(field &amp; 0x1) == 0x1"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="DIR" edc:desc="Read/Write Direction" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="BUSERR" edc:desc="Bus Error" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="COLL" edc:desc="Collision" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="RXACK" edc:desc="Received Acknowledge" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="CLKHOLD" edc:desc="Clock Hold" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="APIF" edc:desc="Address/Stop Interrupt Flag" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="DIF" edc:desc="Data Interrupt Flag" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x81C" edc:access="nnnnnnnn" edc:cname="SADDR" edc:nzwidth="0x8" ltx:memberofperipheral="TWI0"/>
        <edc:SFRDef edc:_addr="0x81D" edc:access="nnnnnnnn" edc:cname="SDATA" edc:nzwidth="0x8" ltx:memberofperipheral="TWI0"/>
        <edc:SFRDef edc:_addr="0x81E" edc:access="nnnnnnnn" edc:cname="SADDRMASK" edc:nzwidth="0x8" ltx:memberofperipheral="TWI0">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="ADDREN" edc:desc="Address Enable" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="ADDRMASK" edc:desc="Address Mask" edc:nzwidth="0x7"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:_addr="0x81F" edc:offset="0x1"/>
        <edc:SFRDef edc:_addr="0x820" edc:access="-nnn-nnn" edc:cname="CTRLA" edc:nzwidth="0x8" ltx:memberofperipheral="SPI0">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="ENABLE" edc:desc="Enable Module" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="PRESC" edc:desc="Prescaler" edc:nzwidth="0x2">
                <edc:SFRFieldSemantic edc:cname="DIV4" edc:desc="System Clock / 4" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="DIV16" edc:desc="System Clock / 16" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="DIV64" edc:desc="System Clock / 64" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="DIV128" edc:desc="System Clock / 128" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="CLK2X" edc:desc="Enable Double Speed" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="MASTER" edc:desc="Master Operation Enable" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="DORD" edc:desc="Data Order Setting" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x821" edc:access="nn---nnn" edc:cname="CTRLB" edc:nzwidth="0x8" ltx:memberofperipheral="SPI0">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="MODE" edc:desc="SPI Mode" edc:nzwidth="0x2">
                <edc:SFRFieldSemantic edc:cname="0" edc:desc="SPI Mode 0" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="1" edc:desc="SPI Mode 1" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="2" edc:desc="SPI Mode 2" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="3" edc:desc="SPI Mode 3" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="SSD" edc:desc="Slave Select Disable" edc:nzwidth="0x1"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="BUFWR" edc:desc="Buffer Write Mode" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="BUFEN" edc:desc="Buffer Mode Enable" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x822" edc:access="nnnn---n" edc:cname="INTCTRL" edc:nzwidth="0x8" ltx:memberofperipheral="SPI0">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="IE" edc:desc="Interrupt Enable" edc:nzwidth="0x1"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="SSIE" edc:desc="Slave Select Trigger Interrupt Enable" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="DREIE" edc:desc="Data Register Empty Interrupt Enable" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="TXCIE" edc:desc="Transfer Complete Interrupt Enable" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="RXCIE" edc:desc="Receive Complete Interrupt Enable" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x823" edc:access="nnnnnnnn" edc:cname="INTFLAGS" edc:nzwidth="0x8" ltx:memberofperipheral="SPI0"/>
        <edc:SFRDef edc:_addr="0x824" edc:access="nnnnnnnn" edc:cname="DATA" edc:nzwidth="0x8" ltx:memberofperipheral="SPI0"/>
        <edc:AdjustPoint edc:_addr="0x825" edc:offset="0x21B"/>
        <edc:SFRDef edc:_addr="0xA40" edc:access="-n-n-nnn" edc:cname="CTRLA" edc:nzwidth="0x8" ltx:memberofperipheral="TCB0">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="ENABLE" edc:desc="Enable" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="CLKSEL" edc:desc="Clock Select" edc:nzwidth="0x2">
                <edc:SFRFieldSemantic edc:cname="CLKDIV1" edc:desc="CLK_PER (No Prescaling)" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="CLKDIV2" edc:desc="CLK_PER/2 (From Prescaler)" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="CLKTCA" edc:desc="Use Clock from TCA" edc:when="(field &amp; 0x3) == 0x02"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="SYNCUPD" edc:desc="Synchronize Update" edc:nzwidth="0x1"/>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:desc="Run Standby" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0xA41" edc:access="-nnn-nnn" edc:cname="CTRLB" edc:nzwidth="0x8" ltx:memberofperipheral="TCB0">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="CNTMODE" edc:desc="Timer Mode" edc:nzwidth="0x3">
                <edc:SFRFieldSemantic edc:cname="INT" edc:desc="Periodic Interrupt" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="TIMEOUT" edc:desc="Periodic Timeout" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="CAPT" edc:desc="Input Capture Event" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FRQ" edc:desc="Input Capture Frequency measurement" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="PW" edc:desc="Input Capture Pulse-Width measurement" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="FRQPW" edc:desc="Input Capture Frequency and Pulse-Width measurement" edc:when="(field &amp; 0x7) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="Single Shot" edc:when="(field &amp; 0x7) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="PWM8" edc:desc="8-bit PWM" edc:when="(field &amp; 0x7) == 0x07"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="CCMPEN" edc:desc="Pin Output Enable" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="CCMPINIT" edc:desc="Pin Initial State" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="ASYNC" edc:desc="Asynchronous Enable" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:_addr="0xA42" edc:offset="0x2"/>
        <edc:SFRDef edc:_addr="0xA44" edc:access="-n-n---n" edc:cname="EVCTRL" edc:nzwidth="0x8" ltx:memberofperipheral="TCB0">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="CAPTEI" edc:desc="Event Input Enable" edc:nzwidth="0x1"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="EDGE" edc:desc="Event Edge" edc:nzwidth="0x1"/>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="FILTER" edc:desc="Input Capture Noise Cancellation Filter" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0xA45" edc:access="-------n" edc:cname="INTCTRL" edc:nzwidth="0x8" ltx:memberofperipheral="TCB0">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="CAPT" edc:desc="Capture or Timeout" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0xA46" edc:access="-------n" edc:cname="INTFLAGS" edc:nzwidth="0x8" ltx:memberofperipheral="TCB0">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="CAPT" edc:desc="Capture or Timeout" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0xA47" edc:access="-------r" edc:cname="STATUS" edc:nzwidth="0x8" ltx:memberofperipheral="TCB0">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="RUN" edc:desc="Run" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0xA48" edc:access="-------n" edc:cname="DBGCTRL" edc:nzwidth="0x8" ltx:memberofperipheral="TCB0">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="DBGRUN" edc:desc="Debug Run" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0xA49" edc:access="nnnnnnnn" edc:cname="TEMP" edc:nzwidth="0x8" ltx:memberofperipheral="TCB0"/>
        <edc:SFRDef edc:_addr="0xA4A" edc:access="nnnnnnnnnnnnnnnn" edc:cname="CNT" edc:nzwidth="0x10" ltx:memberofperipheral="TCB0"/>
        <edc:SFRDef edc:_addr="0xA4C" edc:access="nnnnnnnnnnnnnnnn" edc:cname="CCMP" edc:nzwidth="0x10" ltx:memberofperipheral="TCB0"/>
        <edc:AdjustPoint edc:_addr="0xA4E" edc:offset="0x2"/>
        <edc:SFRDef edc:_addr="0xA50" edc:access="-n-n-nnn" edc:cname="CTRLA" edc:nzwidth="0x8" ltx:memberofperipheral="TCB1">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="ENABLE" edc:desc="Enable" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="CLKSEL" edc:desc="Clock Select" edc:nzwidth="0x2">
                <edc:SFRFieldSemantic edc:cname="CLKDIV1" edc:desc="CLK_PER (No Prescaling)" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="CLKDIV2" edc:desc="CLK_PER/2 (From Prescaler)" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="CLKTCA" edc:desc="Use Clock from TCA" edc:when="(field &amp; 0x3) == 0x02"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="SYNCUPD" edc:desc="Synchronize Update" edc:nzwidth="0x1"/>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:desc="Run Standby" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0xA51" edc:access="-nnn-nnn" edc:cname="CTRLB" edc:nzwidth="0x8" ltx:memberofperipheral="TCB1">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="CNTMODE" edc:desc="Timer Mode" edc:nzwidth="0x3">
                <edc:SFRFieldSemantic edc:cname="INT" edc:desc="Periodic Interrupt" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="TIMEOUT" edc:desc="Periodic Timeout" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="CAPT" edc:desc="Input Capture Event" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FRQ" edc:desc="Input Capture Frequency measurement" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="PW" edc:desc="Input Capture Pulse-Width measurement" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="FRQPW" edc:desc="Input Capture Frequency and Pulse-Width measurement" edc:when="(field &amp; 0x7) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="Single Shot" edc:when="(field &amp; 0x7) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="PWM8" edc:desc="8-bit PWM" edc:when="(field &amp; 0x7) == 0x07"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="CCMPEN" edc:desc="Pin Output Enable" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="CCMPINIT" edc:desc="Pin Initial State" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="ASYNC" edc:desc="Asynchronous Enable" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:_addr="0xA52" edc:offset="0x2"/>
        <edc:SFRDef edc:_addr="0xA54" edc:access="-n-n---n" edc:cname="EVCTRL" edc:nzwidth="0x8" ltx:memberofperipheral="TCB1">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="CAPTEI" edc:desc="Event Input Enable" edc:nzwidth="0x1"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="EDGE" edc:desc="Event Edge" edc:nzwidth="0x1"/>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="FILTER" edc:desc="Input Capture Noise Cancellation Filter" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0xA55" edc:access="-------n" edc:cname="INTCTRL" edc:nzwidth="0x8" ltx:memberofperipheral="TCB1">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="CAPT" edc:desc="Capture or Timeout" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0xA56" edc:access="-------n" edc:cname="INTFLAGS" edc:nzwidth="0x8" ltx:memberofperipheral="TCB1">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="CAPT" edc:desc="Capture or Timeout" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0xA57" edc:access="-------r" edc:cname="STATUS" edc:nzwidth="0x8" ltx:memberofperipheral="TCB1">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="RUN" edc:desc="Run" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0xA58" edc:access="-------n" edc:cname="DBGCTRL" edc:nzwidth="0x8" ltx:memberofperipheral="TCB1">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="DBGRUN" edc:desc="Debug Run" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0xA59" edc:access="nnnnnnnn" edc:cname="TEMP" edc:nzwidth="0x8" ltx:memberofperipheral="TCB1"/>
        <edc:SFRDef edc:_addr="0xA5A" edc:access="nnnnnnnnnnnnnnnn" edc:cname="CNT" edc:nzwidth="0x10" ltx:memberofperipheral="TCB1"/>
        <edc:SFRDef edc:_addr="0xA5C" edc:access="nnnnnnnnnnnnnnnn" edc:cname="CCMP" edc:nzwidth="0x10" ltx:memberofperipheral="TCB1"/>
        <edc:AdjustPoint edc:_addr="0xA5E" edc:offset="0x22"/>
        <edc:SFRDef edc:_addr="0xA80" edc:access="-nnnnnnn" edc:cname="CTRLA" edc:nzwidth="0x8" ltx:memberofperipheral="TCD0">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="ENABLE" edc:desc="Enable" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="SYNCPRES" edc:desc="Syncronization prescaler" edc:nzwidth="0x2">
                <edc:SFRFieldSemantic edc:cname="DIV1" edc:desc="Selevted clock source divided by 1" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="DIV2" edc:desc="Selevted clock source divided by 2" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="DIV4" edc:desc="Selevted clock source divided by 4" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="DIV8" edc:desc="Selevted clock source divided by 8" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="CNTPRES" edc:desc="counter prescaler" edc:nzwidth="0x2">
                <edc:SFRFieldSemantic edc:cname="DIV1" edc:desc="Sync clock divided by 1" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="DIV4" edc:desc="Sync clock divided by 4" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="DIV32" edc:desc="Sync clock divided by 32" edc:when="(field &amp; 0x3) == 0x02"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="CLKSEL" edc:desc="clock select" edc:nzwidth="0x2">
                <edc:SFRFieldSemantic edc:cname="20MHZ" edc:desc="20 MHz oscillator" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="EXTCLK" edc:desc="External clock" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="SYSCLK" edc:desc="System clock" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0xA81" edc:access="------nn" edc:cname="CTRLB" edc:nzwidth="0x8" ltx:memberofperipheral="TCD0">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="WGMODE" edc:desc="Waveform generation mode" edc:nzwidth="0x2">
                <edc:SFRFieldSemantic edc:cname="ONERAMP" edc:desc="One ramp mode" edc:when="(field &amp; 0x3) == 0x0"/>
                <edc:SFRFieldSemantic edc:cname="TWORAMP" edc:desc="Two ramp mode" edc:when="(field &amp; 0x3) == 0x1"/>
                <edc:SFRFieldSemantic edc:cname="FOURRAMP" edc:desc="Four ramp mode" edc:when="(field &amp; 0x3) == 0x2"/>
                <edc:SFRFieldSemantic edc:cname="DS" edc:desc="Dual slope mode" edc:when="(field &amp; 0x3) == 0x3"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0xA82" edc:access="nn--n-nn" edc:cname="CTRLC" edc:nzwidth="0x8" ltx:memberofperipheral="TCD0">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="CMPOVR" edc:desc="Compare output value override" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="AUPDATE" edc:desc="Auto update" edc:nzwidth="0x1"/>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="FIFTY" edc:desc="Fifty percent waveform" edc:nzwidth="0x1"/>
              <edc:AdjustPoint edc:offset="0x2"/>
              <edc:SFRFieldDef edc:cname="CMPCSEL" edc:desc="Compare C output select" edc:nzwidth="0x1">
                <edc:SFRFieldSemantic edc:cname="PWMA" edc:desc="PWM A output" edc:when="(field &amp; 0x1) == 0x0"/>
                <edc:SFRFieldSemantic edc:cname="PWMB" edc:desc="PWM B output" edc:when="(field &amp; 0x1) == 0x1"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="CMPDSEL" edc:desc="Compare D output select" edc:nzwidth="0x1">
                <edc:SFRFieldSemantic edc:cname="PWMA" edc:desc="PWM A output" edc:when="(field &amp; 0x1) == 0x0"/>
                <edc:SFRFieldSemantic edc:cname="PWMB" edc:desc="PWM B output" edc:when="(field &amp; 0x1) == 0x1"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0xA83" edc:access="nnnnnnnn" edc:cname="CTRLD" edc:nzwidth="0x8" ltx:memberofperipheral="TCD0">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="CMPAVAL" edc:desc="Compare A value" edc:nzwidth="0x4"/>
              <edc:SFRFieldDef edc:cname="CMPBVAL" edc:desc="Compare B value" edc:nzwidth="0x4"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0xA84" edc:access="n--nnnnn" edc:cname="CTRLE" edc:nzwidth="0x8" ltx:memberofperipheral="TCD0">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="SYNCEOC" edc:desc="synchronize end of cycle strobe" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="SYNC" edc:desc="synchronize strobe" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="RESTART" edc:desc="Restart strobe" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="SCAPTUREA" edc:desc="Software Capture A Strobe" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="SCAPTUREB" edc:desc="Software Capture B Strobe" edc:nzwidth="0x1"/>
              <edc:AdjustPoint edc:offset="0x2"/>
              <edc:SFRFieldDef edc:cname="DISEOC" edc:desc="Disable at end of cycle" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:_addr="0xA85" edc:offset="0x3"/>
        <edc:SFRDef edc:_addr="0xA88" edc:access="nn-n-n-n" edc:cname="EVCTRLA" edc:nzwidth="0x8" ltx:memberofperipheral="TCD0">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="TRIGEI" edc:desc="Trigger event enable" edc:nzwidth="0x1"/>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="ACTION" edc:desc="event action" edc:nzwidth="0x1">
                <edc:SFRFieldSemantic edc:cname="FAULT" edc:desc="Event trigger a fault" edc:when="(field &amp; 0x1) == 0x0"/>
                <edc:SFRFieldSemantic edc:cname="CAPTURE" edc:desc="Event trigger a fault and capture" edc:when="(field &amp; 0x1) == 0x1"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="EDGE" edc:desc="edge select" edc:nzwidth="0x1">
                <edc:SFRFieldSemantic edc:cname="FALL_LOW" edc:desc="The falling edge or low level of event generates retrigger or fault action" edc:when="(field &amp; 0x1) == 0x0"/>
                <edc:SFRFieldSemantic edc:cname="RISE_HIGH" edc:desc="The rising edge or high level of event generates retrigger or fault action" edc:when="(field &amp; 0x1) == 0x1"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="CFG" edc:desc="event config" edc:nzwidth="0x2">
                <edc:SFRFieldSemantic edc:cname="NEITHER" edc:desc="Neither Filter nor Asynchronous Event is enabled" edc:when="(field &amp; 0x3) == 0x0"/>
                <edc:SFRFieldSemantic edc:cname="FILTER" edc:desc="Input Capture Noise Cancellation Filter enabled" edc:when="(field &amp; 0x3) == 0x1"/>
                <edc:SFRFieldSemantic edc:cname="ASYNC" edc:desc="Asynchronous Event output qualification enabled" edc:when="(field &amp; 0x3) == 0x2"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0xA89" edc:access="nn-n-n-n" edc:cname="EVCTRLB" edc:nzwidth="0x8" ltx:memberofperipheral="TCD0">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="TRIGEI" edc:desc="Trigger event enable" edc:nzwidth="0x1"/>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="ACTION" edc:desc="event action" edc:nzwidth="0x1">
                <edc:SFRFieldSemantic edc:cname="FAULT" edc:desc="Event trigger a fault" edc:when="(field &amp; 0x1) == 0x0"/>
                <edc:SFRFieldSemantic edc:cname="CAPTURE" edc:desc="Event trigger a fault and capture" edc:when="(field &amp; 0x1) == 0x1"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="EDGE" edc:desc="edge select" edc:nzwidth="0x1">
                <edc:SFRFieldSemantic edc:cname="FALL_LOW" edc:desc="The falling edge or low level of event generates retrigger or fault action" edc:when="(field &amp; 0x1) == 0x0"/>
                <edc:SFRFieldSemantic edc:cname="RISE_HIGH" edc:desc="The rising edge or high level of event generates retrigger or fault action" edc:when="(field &amp; 0x1) == 0x1"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="CFG" edc:desc="event config" edc:nzwidth="0x2">
                <edc:SFRFieldSemantic edc:cname="NEITHER" edc:desc="Neither Filter nor Asynchronous Event is enabled" edc:when="(field &amp; 0x3) == 0x0"/>
                <edc:SFRFieldSemantic edc:cname="FILTER" edc:desc="Input Capture Noise Cancellation Filter enabled" edc:when="(field &amp; 0x3) == 0x1"/>
                <edc:SFRFieldSemantic edc:cname="ASYNC" edc:desc="Asynchronous Event output qualification enabled" edc:when="(field &amp; 0x3) == 0x2"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:_addr="0xA8A" edc:offset="0x2"/>
        <edc:SFRDef edc:_addr="0xA8C" edc:access="----nn-n" edc:cname="INTCTRL" edc:nzwidth="0x8" ltx:memberofperipheral="TCD0">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="OVF" edc:desc="Overflow interrupt enable" edc:nzwidth="0x1"/>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="TRIGA" edc:desc="Trigger A interrupt enable" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="TRIGB" edc:desc="Trigger B interrupt enable" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0xA8D" edc:access="----nn-n" edc:cname="INTFLAGS" edc:nzwidth="0x8" ltx:memberofperipheral="TCD0">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="OVF" edc:desc="Overflow interrupt enable" edc:nzwidth="0x1"/>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="TRIGA" edc:desc="Trigger A interrupt enable" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="TRIGB" edc:desc="Trigger B interrupt enable" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0xA8E" edc:access="nn----nn" edc:cname="STATUS" edc:nzwidth="0x8" ltx:memberofperipheral="TCD0">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="ENRDY" edc:desc="Enable ready" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="CMDRDY" edc:desc="Command ready" edc:nzwidth="0x1"/>
              <edc:AdjustPoint edc:offset="0x4"/>
              <edc:SFRFieldDef edc:cname="PWMACTA" edc:desc="PWM activity on A" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="PWMACTB" edc:desc="PWM activity on B" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:_addr="0xA8F" edc:offset="0x1"/>
        <edc:SFRDef edc:_addr="0xA90" edc:access="----nnnn" edc:cname="INPUTCTRLA" edc:nzwidth="0x8" ltx:memberofperipheral="TCD0">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="INPUTMODE" edc:desc="Input mode" edc:nzwidth="0x4">
                <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="Input has no actions" edc:when="(field &amp; 0xF) == 0x0"/>
                <edc:SFRFieldSemantic edc:cname="JMPWAIT" edc:desc="Stop output, jump to opposite compare cycle and wait" edc:when="(field &amp; 0xF) == 0x1"/>
                <edc:SFRFieldSemantic edc:cname="EXECWAIT" edc:desc="Stop output, execute opposite compare cycle and wait" edc:when="(field &amp; 0xF) == 0x2"/>
                <edc:SFRFieldSemantic edc:cname="EXECFAULT" edc:desc="stop output, execute opposite compare cycle while fault active" edc:when="(field &amp; 0xF) == 0x3"/>
                <edc:SFRFieldSemantic edc:cname="FREQ" edc:desc="Stop all outputs, maintain frequency" edc:when="(field &amp; 0xF) == 0x4"/>
                <edc:SFRFieldSemantic edc:cname="EXECDT" edc:desc="Stop all outputs, execute dead time while fault active" edc:when="(field &amp; 0xF) == 0x5"/>
                <edc:SFRFieldSemantic edc:cname="WAIT" edc:desc="Stop all outputs, jump to next compare cycle and wait" edc:when="(field &amp; 0xF) == 0x6"/>
                <edc:SFRFieldSemantic edc:cname="WAITSW" edc:desc="Stop all outputs, wait for software action" edc:when="(field &amp; 0xF) == 0x7"/>
                <edc:SFRFieldSemantic edc:cname="EDGETRIG" edc:desc="Stop output on edge, jump to next compare cycle" edc:when="(field &amp; 0xF) == 0x8"/>
                <edc:SFRFieldSemantic edc:cname="EDGETRIGFREQ" edc:desc="Stop output on edge, maintain frequency" edc:when="(field &amp; 0xF) == 0x9"/>
                <edc:SFRFieldSemantic edc:cname="LVLTRIGFREQ" edc:desc="Stop output at level, maintain frequency" edc:when="(field &amp; 0xF) == 0xA"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0xA91" edc:access="----nnnn" edc:cname="INPUTCTRLB" edc:nzwidth="0x8" ltx:memberofperipheral="TCD0">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="INPUTMODE" edc:desc="Input mode" edc:nzwidth="0x4">
                <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="Input has no actions" edc:when="(field &amp; 0xF) == 0x0"/>
                <edc:SFRFieldSemantic edc:cname="JMPWAIT" edc:desc="Stop output, jump to opposite compare cycle and wait" edc:when="(field &amp; 0xF) == 0x1"/>
                <edc:SFRFieldSemantic edc:cname="EXECWAIT" edc:desc="Stop output, execute opposite compare cycle and wait" edc:when="(field &amp; 0xF) == 0x2"/>
                <edc:SFRFieldSemantic edc:cname="EXECFAULT" edc:desc="stop output, execute opposite compare cycle while fault active" edc:when="(field &amp; 0xF) == 0x3"/>
                <edc:SFRFieldSemantic edc:cname="FREQ" edc:desc="Stop all outputs, maintain frequency" edc:when="(field &amp; 0xF) == 0x4"/>
                <edc:SFRFieldSemantic edc:cname="EXECDT" edc:desc="Stop all outputs, execute dead time while fault active" edc:when="(field &amp; 0xF) == 0x5"/>
                <edc:SFRFieldSemantic edc:cname="WAIT" edc:desc="Stop all outputs, jump to next compare cycle and wait" edc:when="(field &amp; 0xF) == 0x6"/>
                <edc:SFRFieldSemantic edc:cname="WAITSW" edc:desc="Stop all outputs, wait for software action" edc:when="(field &amp; 0xF) == 0x7"/>
                <edc:SFRFieldSemantic edc:cname="EDGETRIG" edc:desc="Stop output on edge, jump to next compare cycle" edc:when="(field &amp; 0xF) == 0x8"/>
                <edc:SFRFieldSemantic edc:cname="EDGETRIGFREQ" edc:desc="Stop output on edge, maintain frequency" edc:when="(field &amp; 0xF) == 0x9"/>
                <edc:SFRFieldSemantic edc:cname="LVLTRIGFREQ" edc:desc="Stop output at level, maintain frequency" edc:when="(field &amp; 0xF) == 0xA"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0xA92" edc:access="nnnnnnnn" edc:cname="FAULTCTRL" edc:nzwidth="0x8" ltx:memberofperipheral="TCD0">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="CMPA" edc:desc="Compare A value" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="CMPB" edc:desc="Compare B value" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="CMPC" edc:desc="Compare C value" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="CMPD" edc:desc="Compare D vaule" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="CMPAEN" edc:desc="Compare A enable" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="CMPBEN" edc:desc="Compare B enable" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="CMPCEN" edc:desc="Compare C enable" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="CMPDEN" edc:desc="Compare D enable" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:_addr="0xA93" edc:offset="0x1"/>
        <edc:SFRDef edc:_addr="0xA94" edc:access="--nnnnnn" edc:cname="DLYCTRL" edc:nzwidth="0x8" ltx:memberofperipheral="TCD0">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="DLYSEL" edc:desc="Delay select" edc:nzwidth="0x2">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="No delay" edc:when="(field &amp; 0x3) == 0x0"/>
                <edc:SFRFieldSemantic edc:cname="INBLANK" edc:desc="Input blanking enabled" edc:when="(field &amp; 0x3) == 0x1"/>
                <edc:SFRFieldSemantic edc:cname="EVENT" edc:desc="Event delay enabled" edc:when="(field &amp; 0x3) == 0x2"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="DLYTRIG" edc:desc="Delay trigger" edc:nzwidth="0x2">
                <edc:SFRFieldSemantic edc:cname="CMPASET" edc:desc="Compare A set" edc:when="(field &amp; 0x3) == 0x0"/>
                <edc:SFRFieldSemantic edc:cname="CMPACLR" edc:desc="Compare A clear" edc:when="(field &amp; 0x3) == 0x1"/>
                <edc:SFRFieldSemantic edc:cname="CMPBSET" edc:desc="Compare B set" edc:when="(field &amp; 0x3) == 0x2"/>
                <edc:SFRFieldSemantic edc:cname="CMPBCLR" edc:desc="Compare B clear" edc:when="(field &amp; 0x3) == 0x3"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="DLYPRESC" edc:desc="Delay prescaler" edc:nzwidth="0x2">
                <edc:SFRFieldSemantic edc:cname="DIV1" edc:desc="No prescaling" edc:when="(field &amp; 0x3) == 0x0"/>
                <edc:SFRFieldSemantic edc:cname="DIV2" edc:desc="Prescale with 2" edc:when="(field &amp; 0x3) == 0x1"/>
                <edc:SFRFieldSemantic edc:cname="DIV4" edc:desc="Prescale with 4" edc:when="(field &amp; 0x3) == 0x2"/>
                <edc:SFRFieldSemantic edc:cname="DIV8" edc:desc="Prescale with 8" edc:when="(field &amp; 0x3) == 0x3"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0xA95" edc:access="nnnnnnnn" edc:cname="DLYVAL" edc:nzwidth="0x8" ltx:memberofperipheral="TCD0">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="DLYVAL" edc:desc="Delay value" edc:nzwidth="0x8"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:_addr="0xA96" edc:offset="0x2"/>
        <edc:SFRDef edc:_addr="0xA98" edc:access="------nn" edc:cname="DITCTRL" edc:nzwidth="0x8" ltx:memberofperipheral="TCD0">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="DITHERSEL" edc:desc="dither select" edc:nzwidth="0x2">
                <edc:SFRFieldSemantic edc:cname="ONTIMEB" edc:desc="On-time ramp B" edc:when="(field &amp; 0x3) == 0x0"/>
                <edc:SFRFieldSemantic edc:cname="ONTIMEAB" edc:desc="On-time ramp A and B" edc:when="(field &amp; 0x3) == 0x1"/>
                <edc:SFRFieldSemantic edc:cname="DEADTIMEB" edc:desc="Dead-time rampB" edc:when="(field &amp; 0x3) == 0x2"/>
                <edc:SFRFieldSemantic edc:cname="DEADTIMEAB" edc:desc="Dead-time ramp A and B" edc:when="(field &amp; 0x3) == 0x3"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0xA99" edc:access="----nnnn" edc:cname="DITVAL" edc:nzwidth="0x8" ltx:memberofperipheral="TCD0">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="DITHER" edc:desc="Dither value" edc:nzwidth="0x4"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:_addr="0xA9A" edc:offset="0x4"/>
        <edc:SFRDef edc:_addr="0xA9E" edc:access="-----n-n" edc:cname="DBGCTRL" edc:nzwidth="0x8" ltx:memberofperipheral="TCD0">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="DBGRUN" edc:desc="Debug run" edc:nzwidth="0x1"/>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="FAULTDET" edc:desc="Fault detection" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:_addr="0xA9F" edc:offset="0x3"/>
        <edc:SFRDef edc:_addr="0xAA2" edc:access="rrrrrrrrrrrrrrrr" edc:cname="CAPTUREA" edc:nzwidth="0x10" ltx:memberofperipheral="TCD0"/>
        <edc:SFRDef edc:_addr="0xAA4" edc:access="rrrrrrrrrrrrrrrr" edc:cname="CAPTUREB" edc:nzwidth="0x10" ltx:memberofperipheral="TCD0"/>
        <edc:AdjustPoint edc:_addr="0xAA6" edc:offset="0x2"/>
        <edc:SFRDef edc:_addr="0xAA8" edc:access="nnnnnnnnnnnnnnnn" edc:cname="CMPASET" edc:nzwidth="0x10" ltx:memberofperipheral="TCD0"/>
        <edc:SFRDef edc:_addr="0xAAA" edc:access="nnnnnnnnnnnnnnnn" edc:cname="CMPACLR" edc:nzwidth="0x10" ltx:memberofperipheral="TCD0"/>
        <edc:SFRDef edc:_addr="0xAAC" edc:access="nnnnnnnnnnnnnnnn" edc:cname="CMPBSET" edc:nzwidth="0x10" ltx:memberofperipheral="TCD0"/>
        <edc:SFRDef edc:_addr="0xAAE" edc:access="nnnnnnnnnnnnnnnn" edc:cname="CMPBCLR" edc:nzwidth="0x10" ltx:memberofperipheral="TCD0"/>
        <edc:AdjustPoint edc:_addr="0xAB0" edc:offset="0x451"/>
        <edc:SFRDef edc:_addr="0xF01" edc:access="nnnnnnnn" edc:cname="REVID" edc:nzwidth="0x8" ltx:memberofperipheral="SYSCFG"/>
        <edc:SFRDef edc:_addr="0xF02" edc:access="-------n" edc:cname="EXTBRK" edc:nzwidth="0x8" ltx:memberofperipheral="SYSCFG">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="ENEXTBRK" edc:desc="External break enable" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:_addr="0xF03" edc:offset="0xFD"/>
        <edc:SFRDef edc:_addr="0x1000" edc:access="-----nnn" edc:cname="CTRLA" edc:nzwidth="0x8" ltx:memberofperipheral="NVMCTRL">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="CMD" edc:desc="Command" edc:nzwidth="0x3">
                <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Command" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="PAGEWRITE" edc:desc="Write page" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="PAGEERASE" edc:desc="Erase page" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="PAGEERASEWRITE" edc:desc="Erase and write page" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="PAGEBUFCLR" edc:desc="Page buffer clear" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="CHIPERASE" edc:desc="Chip erase" edc:when="(field &amp; 0x7) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="EEERASE" edc:desc="EEPROM erase" edc:when="(field &amp; 0x7) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="FUSEWRITE" edc:desc="Write fuse (PDI only)" edc:when="(field &amp; 0x7) == 0x07"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x1001" edc:access="------nn" edc:cname="CTRLB" edc:nzwidth="0x8" ltx:memberofperipheral="NVMCTRL">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="APCWP" edc:desc="Application code write protect" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="BOOTLOCK" edc:desc="Boot Lock" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x1002" edc:access="-----rrr" edc:cname="STATUS" edc:nzwidth="0x8" ltx:memberofperipheral="NVMCTRL">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="FBUSY" edc:desc="Flash busy" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="EEBUSY" edc:desc="EEPROM busy" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="WRERROR" edc:desc="Write error" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x1003" edc:access="-------n" edc:cname="INTCTRL" edc:nzwidth="0x8" ltx:memberofperipheral="NVMCTRL">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="EEREADY" edc:desc="EEPROM Ready" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x1004" edc:access="-------n" edc:cname="INTFLAGS" edc:nzwidth="0x8" ltx:memberofperipheral="NVMCTRL">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0">
              <edc:SFRFieldDef edc:cname="EEREADY" edc:desc="EEPROM Ready" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:_addr="0x1005" edc:offset="0x1"/>
        <edc:SFRDef edc:_addr="0x1006" edc:access="nnnnnnnnnnnnnnnn" edc:cname="DATA" edc:nzwidth="0x10" ltx:memberofperipheral="NVMCTRL"/>
        <edc:SFRDef edc:_addr="0x1008" edc:access="nnnnnnnnnnnnnnnn" edc:cname="ADDR" edc:nzwidth="0x10" ltx:memberofperipheral="NVMCTRL"/>
      </edc:SFRDataSector>
      <edc:SFRDataSector edc:beginaddr="0x8000" edc:endaddr="0x10000" edc:regionid="MAPPED_PROGMEM"/>
    </edc:RegardlessOfMode>
  </edc:DataSpace>
  <edc:PinList edc:ppsflavor="atmel">
    <edc:Pin>
      <edc:VirtualPin edc:name="PA2"/>
      <edc:VirtualPin edc:name="AIN2" edc:ppsfunction="AIN0"/>
      <edc:VirtualPin edc:name="EVAPA2" edc:ppsfunction="EVAINCH0"/>
      <edc:VirtualPin edc:name="EVOUT0" edc:ppsfunction="EVSYS"/>
      <edc:VirtualPin edc:name="EVSPA2" edc:ppsfunction="EVSINCH0"/>
      <edc:VirtualPin edc:name="LUT0_IN2" edc:ppsfunction="CCL"/>
      <edc:VirtualPin edc:name="MISO" edc:ppsfunction="SPI0"/>
      <edc:VirtualPin edc:name="PIN2" edc:ppsfunction="IOPORT"/>
      <edc:VirtualPin edc:name="RXD" edc:ppsfunction="USART0_ALT"/>
      <edc:VirtualPin edc:name="SCL" edc:ppsfunction="TWI0_ALT"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA3"/>
      <edc:VirtualPin edc:name="AIN3" edc:ppsfunction="AIN0"/>
      <edc:VirtualPin edc:name="CLKI" edc:ppsfunction="CLKCTRL"/>
      <edc:VirtualPin edc:name="EVAPA3" edc:ppsfunction="EVAINCH0"/>
      <edc:VirtualPin edc:name="EVSPA3" edc:ppsfunction="EVSINCH0"/>
      <edc:VirtualPin edc:name="PIN3" edc:ppsfunction="IOPORT"/>
      <edc:VirtualPin edc:name="SCK" edc:ppsfunction="SPI0"/>
      <edc:VirtualPin edc:name="WO0" edc:ppsfunction="TCB1"/>
      <edc:VirtualPin edc:name="WO3" edc:ppsfunction="TCA0"/>
      <edc:VirtualPin edc:name="XCK" edc:ppsfunction="USART0_ALT"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="GND"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="VDD"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA4"/>
      <edc:VirtualPin edc:name="AIN0" edc:ppsfunction="AIN1"/>
      <edc:VirtualPin edc:name="AIN4" edc:ppsfunction="AIN0"/>
      <edc:VirtualPin edc:name="EVAPA4" edc:ppsfunction="EVAINCH0"/>
      <edc:VirtualPin edc:name="EVSPA4" edc:ppsfunction="EVSINCH0"/>
      <edc:VirtualPin edc:name="LUT0_OUT0" edc:ppsfunction="CCL"/>
      <edc:VirtualPin edc:name="PIN4" edc:ppsfunction="IOPORT"/>
      <edc:VirtualPin edc:name="SS" edc:ppsfunction="SPI0"/>
      <edc:VirtualPin edc:name="WO4" edc:ppsfunction="TCA0"/>
      <edc:VirtualPin edc:name="WOA" edc:ppsfunction="TCD0"/>
      <edc:VirtualPin edc:name="X0" edc:ppsfunction="PTC_X"/>
      <edc:VirtualPin edc:name="XDIR" edc:ppsfunction="USART0_ALT"/>
      <edc:VirtualPin edc:name="Y0" edc:ppsfunction="PTC_Y"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA5"/>
      <edc:VirtualPin edc:name="AIN1" edc:ppsfunction="AIN1"/>
      <edc:VirtualPin edc:name="AIN5" edc:ppsfunction="AIN0"/>
      <edc:VirtualPin edc:name="EVAPA5" edc:ppsfunction="EVAINCH0"/>
      <edc:VirtualPin edc:name="EVSPA5" edc:ppsfunction="EVSINCH0"/>
      <edc:VirtualPin edc:name="N0" edc:ppsfunction="AC1"/>
      <edc:VirtualPin edc:name="OUT0" edc:ppsfunction="AC0"/>
      <edc:VirtualPin edc:name="PIN5" edc:ppsfunction="IOPORT"/>
      <edc:VirtualPin edc:name="WO0" edc:ppsfunction="TCB0"/>
      <edc:VirtualPin edc:name="WO5" edc:ppsfunction="TCA0"/>
      <edc:VirtualPin edc:name="WOB" edc:ppsfunction="TCD0"/>
      <edc:VirtualPin edc:name="X1" edc:ppsfunction="PTC_X"/>
      <edc:VirtualPin edc:name="Y1" edc:ppsfunction="PTC_Y"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA6"/>
      <edc:VirtualPin edc:name="AIN2" edc:ppsfunction="AIN1"/>
      <edc:VirtualPin edc:name="AIN6" edc:ppsfunction="AIN0"/>
      <edc:VirtualPin edc:name="EVAPA6" edc:ppsfunction="EVAINCH0"/>
      <edc:VirtualPin edc:name="EVSPA6" edc:ppsfunction="EVSINCH0"/>
      <edc:VirtualPin edc:name="N0" edc:ppsfunction="AC0"/>
      <edc:VirtualPin edc:name="OUT0" edc:ppsfunction="DAC0"/>
      <edc:VirtualPin edc:name="P0" edc:ppsfunction="AC2"/>
      <edc:VirtualPin edc:name="P1" edc:ppsfunction="AC1"/>
      <edc:VirtualPin edc:name="PIN6" edc:ppsfunction="IOPORT"/>
      <edc:VirtualPin edc:name="X2" edc:ppsfunction="PTC_X"/>
      <edc:VirtualPin edc:name="Y2" edc:ppsfunction="PTC_Y"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA7"/>
      <edc:VirtualPin edc:name="AIN3" edc:ppsfunction="AIN1"/>
      <edc:VirtualPin edc:name="AIN7" edc:ppsfunction="AIN0"/>
      <edc:VirtualPin edc:name="EVAPA7" edc:ppsfunction="EVAINCH0"/>
      <edc:VirtualPin edc:name="EVSPA7" edc:ppsfunction="EVSINCH0"/>
      <edc:VirtualPin edc:name="LUT1_OUT0" edc:ppsfunction="CCL"/>
      <edc:VirtualPin edc:name="N0" edc:ppsfunction="AC2"/>
      <edc:VirtualPin edc:name="P0" edc:ppsfunction="AC0"/>
      <edc:VirtualPin edc:name="P0" edc:ppsfunction="AC1"/>
      <edc:VirtualPin edc:name="PIN7" edc:ppsfunction="IOPORT"/>
      <edc:VirtualPin edc:name="X3" edc:ppsfunction="PTC_X"/>
      <edc:VirtualPin edc:name="Y3" edc:ppsfunction="PTC_Y"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PB7"/>
      <edc:VirtualPin edc:name="AIN4" edc:ppsfunction="AIN1"/>
      <edc:VirtualPin edc:name="EVAPB7" edc:ppsfunction="EVAINCH1"/>
      <edc:VirtualPin edc:name="EVSPB7" edc:ppsfunction="EVSINCH1"/>
      <edc:VirtualPin edc:name="N1" edc:ppsfunction="AC1"/>
      <edc:VirtualPin edc:name="P3" edc:ppsfunction="AC2"/>
      <edc:VirtualPin edc:name="PIN7" edc:ppsfunction="IOPORT"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PB6"/>
      <edc:VirtualPin edc:name="AIN5" edc:ppsfunction="AIN1"/>
      <edc:VirtualPin edc:name="EVAPB6" edc:ppsfunction="EVAINCH1"/>
      <edc:VirtualPin edc:name="EVSPB6" edc:ppsfunction="EVSINCH1"/>
      <edc:VirtualPin edc:name="N1" edc:ppsfunction="AC2"/>
      <edc:VirtualPin edc:name="P3" edc:ppsfunction="AC0"/>
      <edc:VirtualPin edc:name="PIN6" edc:ppsfunction="IOPORT"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PB5"/>
      <edc:VirtualPin edc:name="AIN8" edc:ppsfunction="AIN0"/>
      <edc:VirtualPin edc:name="CLKO" edc:ppsfunction="CLKCTRL"/>
      <edc:VirtualPin edc:name="EVAPB5" edc:ppsfunction="EVAINCH1"/>
      <edc:VirtualPin edc:name="EVSPB5" edc:ppsfunction="EVSINCH1"/>
      <edc:VirtualPin edc:name="P1" edc:ppsfunction="AC0"/>
      <edc:VirtualPin edc:name="P2" edc:ppsfunction="AC2"/>
      <edc:VirtualPin edc:name="PIN5" edc:ppsfunction="IOPORT"/>
      <edc:VirtualPin edc:name="WO2" edc:ppsfunction="TCA0_ALT"/>
      <edc:VirtualPin edc:name="X12" edc:ppsfunction="PTC_X"/>
      <edc:VirtualPin edc:name="Y12" edc:ppsfunction="PTC_Y"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PB4"/>
      <edc:VirtualPin edc:name="AIN9" edc:ppsfunction="AIN0"/>
      <edc:VirtualPin edc:name="DS1" edc:ppsfunction="PTC_DS"/>
      <edc:VirtualPin edc:name="EVAPB4" edc:ppsfunction="EVAINCH1"/>
      <edc:VirtualPin edc:name="EVSPB4" edc:ppsfunction="EVSINCH1"/>
      <edc:VirtualPin edc:name="LUT0_OUT0" edc:ppsfunction="CCL_ALT"/>
      <edc:VirtualPin edc:name="N1" edc:ppsfunction="AC0"/>
      <edc:VirtualPin edc:name="P3" edc:ppsfunction="AC1"/>
      <edc:VirtualPin edc:name="PIN4" edc:ppsfunction="IOPORT"/>
      <edc:VirtualPin edc:name="WO1" edc:ppsfunction="TCA0_ALT"/>
      <edc:VirtualPin edc:name="X13" edc:ppsfunction="PTC_X"/>
      <edc:VirtualPin edc:name="Y13" edc:ppsfunction="PTC_Y"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PB3"/>
      <edc:VirtualPin edc:name="EVAPB3" edc:ppsfunction="EVAINCH1"/>
      <edc:VirtualPin edc:name="EVSPB3" edc:ppsfunction="EVSINCH1"/>
      <edc:VirtualPin edc:name="OUT0" edc:ppsfunction="AC1"/>
      <edc:VirtualPin edc:name="PIN3" edc:ppsfunction="IOPORT"/>
      <edc:VirtualPin edc:name="RXD" edc:ppsfunction="USART0"/>
      <edc:VirtualPin edc:name="TOSC1" edc:ppsfunction="CLKCTRL"/>
      <edc:VirtualPin edc:name="WO0" edc:ppsfunction="TCA0_ALT"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PB2"/>
      <edc:VirtualPin edc:name="DS0" edc:ppsfunction="PTC_DS"/>
      <edc:VirtualPin edc:name="EVAPB2" edc:ppsfunction="EVAINCH1"/>
      <edc:VirtualPin edc:name="EVOUT1" edc:ppsfunction="EVSYS"/>
      <edc:VirtualPin edc:name="EVSPB2" edc:ppsfunction="EVSINCH1"/>
      <edc:VirtualPin edc:name="OUT0" edc:ppsfunction="AC2"/>
      <edc:VirtualPin edc:name="PIN2" edc:ppsfunction="IOPORT"/>
      <edc:VirtualPin edc:name="TOSC2" edc:ppsfunction="CLKCTRL"/>
      <edc:VirtualPin edc:name="TXD" edc:ppsfunction="USART0"/>
      <edc:VirtualPin edc:name="WO2" edc:ppsfunction="TCA0"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PB1"/>
      <edc:VirtualPin edc:name="AIN10" edc:ppsfunction="AIN0"/>
      <edc:VirtualPin edc:name="EVAPB1" edc:ppsfunction="EVAINCH1"/>
      <edc:VirtualPin edc:name="EVSPB1" edc:ppsfunction="EVSINCH1"/>
      <edc:VirtualPin edc:name="P2" edc:ppsfunction="AC0"/>
      <edc:VirtualPin edc:name="PIN1" edc:ppsfunction="IOPORT"/>
      <edc:VirtualPin edc:name="SDA" edc:ppsfunction="TWI0"/>
      <edc:VirtualPin edc:name="WO1" edc:ppsfunction="TCA0"/>
      <edc:VirtualPin edc:name="X4" edc:ppsfunction="PTC_X"/>
      <edc:VirtualPin edc:name="XCK" edc:ppsfunction="USART0"/>
      <edc:VirtualPin edc:name="Y4" edc:ppsfunction="PTC_Y"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PB0"/>
      <edc:VirtualPin edc:name="AIN11" edc:ppsfunction="AIN0"/>
      <edc:VirtualPin edc:name="EVAPB0" edc:ppsfunction="EVAINCH1"/>
      <edc:VirtualPin edc:name="EVSPB0" edc:ppsfunction="EVSINCH1"/>
      <edc:VirtualPin edc:name="P1" edc:ppsfunction="AC2"/>
      <edc:VirtualPin edc:name="P2" edc:ppsfunction="AC1"/>
      <edc:VirtualPin edc:name="PIN0" edc:ppsfunction="IOPORT"/>
      <edc:VirtualPin edc:name="SCL" edc:ppsfunction="TWI0"/>
      <edc:VirtualPin edc:name="WO0" edc:ppsfunction="TCA0"/>
      <edc:VirtualPin edc:name="X5" edc:ppsfunction="PTC_X"/>
      <edc:VirtualPin edc:name="XDIR" edc:ppsfunction="USART0"/>
      <edc:VirtualPin edc:name="Y5" edc:ppsfunction="PTC_Y"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PC0"/>
      <edc:VirtualPin edc:name="AIN6" edc:ppsfunction="AIN1"/>
      <edc:VirtualPin edc:name="EVAPC0" edc:ppsfunction="EVAINCH2"/>
      <edc:VirtualPin edc:name="EVSPC0" edc:ppsfunction="EVSINCH0"/>
      <edc:VirtualPin edc:name="PIN0" edc:ppsfunction="IOPORT"/>
      <edc:VirtualPin edc:name="SCK" edc:ppsfunction="SPI0_ALT"/>
      <edc:VirtualPin edc:name="WO0" edc:ppsfunction="TCB0_ALT"/>
      <edc:VirtualPin edc:name="WOC" edc:ppsfunction="TCD0"/>
      <edc:VirtualPin edc:name="X6" edc:ppsfunction="PTC_X"/>
      <edc:VirtualPin edc:name="Y6" edc:ppsfunction="PTC_Y"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PC1"/>
      <edc:VirtualPin edc:name="AIN7" edc:ppsfunction="AIN1"/>
      <edc:VirtualPin edc:name="EVAPC1" edc:ppsfunction="EVAINCH2"/>
      <edc:VirtualPin edc:name="EVSPC1" edc:ppsfunction="EVSINCH0"/>
      <edc:VirtualPin edc:name="LUT1_OUT0" edc:ppsfunction="CCL_ALT"/>
      <edc:VirtualPin edc:name="MISO" edc:ppsfunction="SPI0_ALT"/>
      <edc:VirtualPin edc:name="PIN1" edc:ppsfunction="IOPORT"/>
      <edc:VirtualPin edc:name="WOD" edc:ppsfunction="TCD0"/>
      <edc:VirtualPin edc:name="X7" edc:ppsfunction="PTC_X"/>
      <edc:VirtualPin edc:name="Y7" edc:ppsfunction="PTC_Y"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PC2"/>
      <edc:VirtualPin edc:name="AIN8" edc:ppsfunction="AIN1"/>
      <edc:VirtualPin edc:name="EVAPC2" edc:ppsfunction="EVAINCH2"/>
      <edc:VirtualPin edc:name="EVOUT2" edc:ppsfunction="EVSYS"/>
      <edc:VirtualPin edc:name="EVSPC2" edc:ppsfunction="EVSINCH0"/>
      <edc:VirtualPin edc:name="MOSI" edc:ppsfunction="SPI0_ALT"/>
      <edc:VirtualPin edc:name="PIN2" edc:ppsfunction="IOPORT"/>
      <edc:VirtualPin edc:name="X8" edc:ppsfunction="PTC_X"/>
      <edc:VirtualPin edc:name="Y8" edc:ppsfunction="PTC_Y"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PC3"/>
      <edc:VirtualPin edc:name="AIN9" edc:ppsfunction="AIN1"/>
      <edc:VirtualPin edc:name="EVAPC3" edc:ppsfunction="EVAINCH2"/>
      <edc:VirtualPin edc:name="EVSPC3" edc:ppsfunction="EVSINCH0"/>
      <edc:VirtualPin edc:name="LUT1_IN0" edc:ppsfunction="CCL"/>
      <edc:VirtualPin edc:name="PIN3" edc:ppsfunction="IOPORT"/>
      <edc:VirtualPin edc:name="SS" edc:ppsfunction="SPI0_ALT"/>
      <edc:VirtualPin edc:name="WO3" edc:ppsfunction="TCA0_ALT"/>
      <edc:VirtualPin edc:name="X9" edc:ppsfunction="PTC_X"/>
      <edc:VirtualPin edc:name="Y9" edc:ppsfunction="PTC_Y"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PC4"/>
      <edc:VirtualPin edc:name="AIN10" edc:ppsfunction="AIN1"/>
      <edc:VirtualPin edc:name="BREAK" edc:ppsfunction="BREAK_ALT"/>
      <edc:VirtualPin edc:name="EVAPC4" edc:ppsfunction="EVAINCH2"/>
      <edc:VirtualPin edc:name="EVSPC4" edc:ppsfunction="EVSINCH0"/>
      <edc:VirtualPin edc:name="LUT1_IN1" edc:ppsfunction="CCL"/>
      <edc:VirtualPin edc:name="PIN4" edc:ppsfunction="IOPORT"/>
      <edc:VirtualPin edc:name="WO0" edc:ppsfunction="TCB1_ALT"/>
      <edc:VirtualPin edc:name="WO4" edc:ppsfunction="TCA0_ALT"/>
      <edc:VirtualPin edc:name="X10" edc:ppsfunction="PTC_X"/>
      <edc:VirtualPin edc:name="Y10" edc:ppsfunction="PTC_Y"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PC5"/>
      <edc:VirtualPin edc:name="AIN11" edc:ppsfunction="AIN1"/>
      <edc:VirtualPin edc:name="EVAPC5" edc:ppsfunction="EVAINCH2"/>
      <edc:VirtualPin edc:name="EVSPC5" edc:ppsfunction="EVSINCH0"/>
      <edc:VirtualPin edc:name="LUT1_IN2" edc:ppsfunction="CCL"/>
      <edc:VirtualPin edc:name="PIN5" edc:ppsfunction="IOPORT"/>
      <edc:VirtualPin edc:name="WO5" edc:ppsfunction="TCA0_ALT"/>
      <edc:VirtualPin edc:name="X11" edc:ppsfunction="PTC_X"/>
      <edc:VirtualPin edc:name="Y11" edc:ppsfunction="PTC_Y"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA0"/>
      <edc:VirtualPin edc:name="AIN0" edc:ppsfunction="AIN0"/>
      <edc:VirtualPin edc:name="EVAPA0" edc:ppsfunction="EVAINCH0"/>
      <edc:VirtualPin edc:name="EVSPA0" edc:ppsfunction="EVSINCH0"/>
      <edc:VirtualPin edc:name="LUT0_IN0" edc:ppsfunction="CCL"/>
      <edc:VirtualPin edc:name="PIN0" edc:ppsfunction="IOPORT"/>
      <edc:VirtualPin edc:name="RESET" edc:ppsfunction="OTHER"/>
      <edc:VirtualPin edc:name="UPDI" edc:ppsfunction="OTHER"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA1"/>
      <edc:VirtualPin edc:name="AIN1" edc:ppsfunction="AIN0"/>
      <edc:VirtualPin edc:name="BREAK" edc:ppsfunction="BREAK"/>
      <edc:VirtualPin edc:name="EVAPA1" edc:ppsfunction="EVAINCH0"/>
      <edc:VirtualPin edc:name="EVSPA1" edc:ppsfunction="EVSINCH0"/>
      <edc:VirtualPin edc:name="LUT0_IN1" edc:ppsfunction="CCL"/>
      <edc:VirtualPin edc:name="MOSI" edc:ppsfunction="SPI0"/>
      <edc:VirtualPin edc:name="PIN1" edc:ppsfunction="IOPORT"/>
      <edc:VirtualPin edc:name="SDA" edc:ppsfunction="TWI0_ALT"/>
      <edc:VirtualPin edc:name="TXD" edc:ppsfunction="USART0_ALT"/>
    </edc:Pin>
  </edc:PinList>
</edc:PIC>