<?xml version="1.0" encoding="UTF-8" standalone="no"?><edc:PIC xmlns:edc="http://crownking/edc" xmlns:atdf="http://crownking/atdf" xmlns:ltx="http://crownking/ltx" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" atdf:architecture="AVR8" atdf:family="megaAVR" edc:arch="avr8" edc:hasfreeze="false" edc:name="ATmega8515" edc:procid="0x0000" xsi:schemaLocation="http://crownking/edc edc/PIC.xsd">
  <edc:Properties>
    <edc:Property edc:propkey="file.registers.are.odd.address.accessible" edc:propvalue="true"/>
  </edc:Properties>
  <edc:Power>
    <edc:VDD edc:maxvoltage="5.5" edc:minvoltage="2.7" edc:nominalvoltage="5.000"/>
  </edc:Power>
  <edc:Programming edc:haschecksum="false" edc:haslvp2="true">
    <edc:ProgrammingRowSize edc:nzsize="64" edc:progop="pgm"/>
    <edc:ProgrammingRowSize edc:nzsize="1" edc:progop="cfg"/>
    <edc:ProgrammingRowSize edc:nzsize="4" edc:progop="eedata"/>
  </edc:Programming>
  <edc:ArchDef edc:desc="avr8" edc:name="avr8">
    <edc:MemTraits>
      <edc:ProgramMemTraits edc:addrinc="0x1" edc:locsize="0x2" edc:wordimpl="0xFFFF" edc:wordinit="0xFFFF" edc:wordsafe="0xFFFF" edc:wordsize="0xFFFF"/>
      <edc:DataMemTraits edc:addrinc="0x1" edc:locsize="0x1" edc:wordimpl="0xFF" edc:wordinit="0xFF" edc:wordsafe="0xFF" edc:wordsize="0x1"/>
      <edc:EEDataMemTraits edc:magicoffset="0x810000"/>
    </edc:MemTraits>
  </edc:ArchDef>
  <edc:InstructionSet edc:instructionsetid="avr8">
    <edc:InstructionSet edc:instructionsetid="avr8base"/>
    <edc:InstructionSet edc:instructionsetid="avr8movw"/>
    <edc:InstructionSet edc:instructionsetid="avr8lpm"/>
    <edc:InstructionSet edc:instructionsetid="avr8lpmx"/>
    <edc:InstructionSet edc:instructionsetid="avr8sram"/>
    <edc:InstructionSet edc:instructionsetid="avr8mul"/>
    <edc:InstructionSet edc:instructionsetid="avr8spm"/>
  </edc:InstructionSet>
  <edc:InterruptList>
    <edc:Interrupt edc:cname="RESET" edc:desc="External Reset, Power-on Reset and Watchdog Reset" edc:irq="0"/>
    <edc:Interrupt edc:cname="INT0" edc:desc="External Interrupt Request 0" edc:irq="1"/>
    <edc:Interrupt edc:cname="INT1" edc:desc="External Interrupt Request 1" edc:irq="2"/>
    <edc:Interrupt edc:cname="TIMER1_CAPT" edc:desc="Timer/Counter1 Capture Event" edc:irq="3"/>
    <edc:Interrupt edc:cname="TIMER1_COMPA" edc:desc="Timer/Counter1 Compare Match A" edc:irq="4"/>
    <edc:Interrupt edc:cname="TIMER1_COMPB" edc:desc="Timer/Counter1 Compare MatchB" edc:irq="5"/>
    <edc:Interrupt edc:cname="TIMER1_OVF" edc:desc="Timer/Counter1 Overflow" edc:irq="6"/>
    <edc:Interrupt edc:cname="TIMER0_OVF" edc:desc="Timer/Counter0 Overflow" edc:irq="7"/>
    <edc:Interrupt edc:cname="SPI_STC" edc:desc="Serial Transfer Complete" edc:irq="8"/>
    <edc:Interrupt edc:cname="USART_RX" edc:desc="USART, Rx Complete" edc:irq="9"/>
    <edc:Interrupt edc:cname="USART_UDRE" edc:desc="USART Data Register Empty" edc:irq="10"/>
    <edc:Interrupt edc:cname="USART_TX" edc:desc="USART, Tx Complete" edc:irq="11"/>
    <edc:Interrupt edc:cname="ANA_COMP" edc:desc="Analog Comparator" edc:irq="12"/>
    <edc:Interrupt edc:cname="INT2" edc:desc="External Interrupt Request 2" edc:irq="13"/>
    <edc:Interrupt edc:cname="TIMER0_COMP" edc:desc="Timer 0 Compare Match" edc:irq="14"/>
    <edc:Interrupt edc:cname="EE_RDY" edc:desc="EEPROM Ready" edc:irq="15"/>
    <edc:Interrupt edc:cname="SPM_RDY" edc:desc="Store Program Memory Ready" edc:irq="16"/>
  </edc:InterruptList>
  <edc:PeripheralList>
    <edc:Peripheral edc:cname="AC" edc:desc="Analog Comparator"/>
    <edc:Peripheral edc:cname="USART" edc:desc="USART"/>
    <edc:Peripheral edc:cname="SPI" edc:desc="Serial Peripheral Interface"/>
    <edc:Peripheral edc:cname="CPU" edc:desc="CPU Registers"/>
    <edc:Peripheral edc:cname="EXINT" edc:desc="External Interrupts"/>
    <edc:Peripheral edc:cname="WDT" edc:desc="Watchdog Timer"/>
    <edc:Peripheral edc:cname="TC0" edc:desc="Timer/Counter, 8-bit"/>
    <edc:Peripheral edc:cname="TC1" edc:desc="Timer/Counter, 16-bit"/>
    <edc:Peripheral edc:cname="PORTA" edc:desc="I/O Port"/>
    <edc:Peripheral edc:cname="PORTB" edc:desc="I/O Port"/>
    <edc:Peripheral edc:cname="PORTC" edc:desc="I/O Port"/>
    <edc:Peripheral edc:cname="PORTD" edc:desc="I/O Port"/>
    <edc:Peripheral edc:cname="PORTE" edc:desc="I/O Port"/>
    <edc:Peripheral edc:cname="EEPROM" edc:desc="EEPROM"/>
    <edc:Peripheral edc:cname="FUSE" edc:desc="Fuses"/>
    <edc:Peripheral edc:cname="LOCKBIT" edc:desc="Lockbits"/>
  </edc:PeripheralList>
  <edc:ProgramSpace>
    <edc:CodeSector atdf:pagesize="0x40" edc:beginaddr="0x0" edc:endaddr="0x1000" edc:regionid="IFLASH"/>
    <edc:CodeSector atdf:pagesize="0x40" edc:beginaddr="0xF80" edc:endaddr="0x1000" edc:regionid="BOOT_SECTION_1"/>
    <edc:CodeSector atdf:pagesize="0x40" edc:beginaddr="0xF00" edc:endaddr="0x1000" edc:regionid="BOOT_SECTION_2"/>
    <edc:CodeSector atdf:pagesize="0x40" edc:beginaddr="0xE00" edc:endaddr="0x1000" edc:regionid="BOOT_SECTION_3"/>
    <edc:CodeSector atdf:pagesize="0x40" edc:beginaddr="0xC00" edc:endaddr="0x1000" edc:regionid="BOOT_SECTION_4"/>
  </edc:ProgramSpace>
  <edc:DataSpace edc:magicoffset="0x800000">
    <edc:RegardlessOfMode>
      <edc:NMMRPlace edc:regionid="corenmmrs">
        <edc:SFRDef edc:access="nnnnnnnnnnnnnnnn" edc:cname="PC" edc:desc="Program Counter" edc:impl="0xFFFF" edc:mclr="0000000000000000" edc:nmmrid="60" edc:nzwidth="0x10" edc:por="0000000000000000"/>
      </edc:NMMRPlace>
      <edc:SFRDataSector edc:beginaddr="0x0" edc:endaddr="0x20" edc:regionid="REGISTERS">
        <edc:SFRDef edc:_addr="0x0" edc:access="nnnnnnnn" edc:cname="R0" edc:desc="General-Purpose Register" edc:impl="0xFF" edc:mclr="xxxxxxxx" edc:nzwidth="0x8" edc:por="xxxxxxxx"/>
        <edc:SFRDef edc:_addr="0x1" edc:access="nnnnnnnn" edc:cname="R1" edc:desc="General-Purpose Register" edc:impl="0xFF" edc:mclr="xxxxxxxx" edc:nzwidth="0x8" edc:por="xxxxxxxx"/>
        <edc:SFRDef edc:_addr="0x2" edc:access="nnnnnnnn" edc:cname="R2" edc:desc="General-Purpose Register" edc:impl="0xFF" edc:mclr="xxxxxxxx" edc:nzwidth="0x8" edc:por="xxxxxxxx"/>
        <edc:SFRDef edc:_addr="0x3" edc:access="nnnnnnnn" edc:cname="R3" edc:desc="General-Purpose Register" edc:impl="0xFF" edc:mclr="xxxxxxxx" edc:nzwidth="0x8" edc:por="xxxxxxxx"/>
        <edc:SFRDef edc:_addr="0x4" edc:access="nnnnnnnn" edc:cname="R4" edc:desc="General-Purpose Register" edc:impl="0xFF" edc:mclr="xxxxxxxx" edc:nzwidth="0x8" edc:por="xxxxxxxx"/>
        <edc:SFRDef edc:_addr="0x5" edc:access="nnnnnnnn" edc:cname="R5" edc:desc="General-Purpose Register" edc:impl="0xFF" edc:mclr="xxxxxxxx" edc:nzwidth="0x8" edc:por="xxxxxxxx"/>
        <edc:SFRDef edc:_addr="0x6" edc:access="nnnnnnnn" edc:cname="R6" edc:desc="General-Purpose Register" edc:impl="0xFF" edc:mclr="xxxxxxxx" edc:nzwidth="0x8" edc:por="xxxxxxxx"/>
        <edc:SFRDef edc:_addr="0x7" edc:access="nnnnnnnn" edc:cname="R7" edc:desc="General-Purpose Register" edc:impl="0xFF" edc:mclr="xxxxxxxx" edc:nzwidth="0x8" edc:por="xxxxxxxx"/>
        <edc:SFRDef edc:_addr="0x8" edc:access="nnnnnnnn" edc:cname="R8" edc:desc="General-Purpose Register" edc:impl="0xFF" edc:mclr="xxxxxxxx" edc:nzwidth="0x8" edc:por="xxxxxxxx"/>
        <edc:SFRDef edc:_addr="0x9" edc:access="nnnnnnnn" edc:cname="R9" edc:desc="General-Purpose Register" edc:impl="0xFF" edc:mclr="xxxxxxxx" edc:nzwidth="0x8" edc:por="xxxxxxxx"/>
        <edc:SFRDef edc:_addr="0xA" edc:access="nnnnnnnn" edc:cname="R10" edc:desc="General-Purpose Register" edc:impl="0xFF" edc:mclr="xxxxxxxx" edc:nzwidth="0x8" edc:por="xxxxxxxx"/>
        <edc:SFRDef edc:_addr="0xB" edc:access="nnnnnnnn" edc:cname="R11" edc:desc="General-Purpose Register" edc:impl="0xFF" edc:mclr="xxxxxxxx" edc:nzwidth="0x8" edc:por="xxxxxxxx"/>
        <edc:SFRDef edc:_addr="0xC" edc:access="nnnnnnnn" edc:cname="R12" edc:desc="General-Purpose Register" edc:impl="0xFF" edc:mclr="xxxxxxxx" edc:nzwidth="0x8" edc:por="xxxxxxxx"/>
        <edc:SFRDef edc:_addr="0xD" edc:access="nnnnnnnn" edc:cname="R13" edc:desc="General-Purpose Register" edc:impl="0xFF" edc:mclr="xxxxxxxx" edc:nzwidth="0x8" edc:por="xxxxxxxx"/>
        <edc:SFRDef edc:_addr="0xE" edc:access="nnnnnnnn" edc:cname="R14" edc:desc="General-Purpose Register" edc:impl="0xFF" edc:mclr="xxxxxxxx" edc:nzwidth="0x8" edc:por="xxxxxxxx"/>
        <edc:SFRDef edc:_addr="0xF" edc:access="nnnnnnnn" edc:cname="R15" edc:desc="General-Purpose Register" edc:impl="0xFF" edc:mclr="xxxxxxxx" edc:nzwidth="0x8" edc:por="xxxxxxxx"/>
        <edc:SFRDef edc:_addr="0x10" edc:access="nnnnnnnn" edc:cname="R16" edc:desc="General-Purpose Register" edc:impl="0xFF" edc:mclr="xxxxxxxx" edc:nzwidth="0x8" edc:por="xxxxxxxx"/>
        <edc:SFRDef edc:_addr="0x11" edc:access="nnnnnnnn" edc:cname="R17" edc:desc="General-Purpose Register" edc:impl="0xFF" edc:mclr="xxxxxxxx" edc:nzwidth="0x8" edc:por="xxxxxxxx"/>
        <edc:SFRDef edc:_addr="0x12" edc:access="nnnnnnnn" edc:cname="R18" edc:desc="General-Purpose Register" edc:impl="0xFF" edc:mclr="xxxxxxxx" edc:nzwidth="0x8" edc:por="xxxxxxxx"/>
        <edc:SFRDef edc:_addr="0x13" edc:access="nnnnnnnn" edc:cname="R19" edc:desc="General-Purpose Register" edc:impl="0xFF" edc:mclr="xxxxxxxx" edc:nzwidth="0x8" edc:por="xxxxxxxx"/>
        <edc:SFRDef edc:_addr="0x14" edc:access="nnnnnnnn" edc:cname="R20" edc:desc="General-Purpose Register" edc:impl="0xFF" edc:mclr="xxxxxxxx" edc:nzwidth="0x8" edc:por="xxxxxxxx"/>
        <edc:SFRDef edc:_addr="0x15" edc:access="nnnnnnnn" edc:cname="R21" edc:desc="General-Purpose Register" edc:impl="0xFF" edc:mclr="xxxxxxxx" edc:nzwidth="0x8" edc:por="xxxxxxxx"/>
        <edc:SFRDef edc:_addr="0x16" edc:access="nnnnnnnn" edc:cname="R22" edc:desc="General-Purpose Register" edc:impl="0xFF" edc:mclr="xxxxxxxx" edc:nzwidth="0x8" edc:por="xxxxxxxx"/>
        <edc:SFRDef edc:_addr="0x17" edc:access="nnnnnnnn" edc:cname="R23" edc:desc="General-Purpose Register" edc:impl="0xFF" edc:mclr="xxxxxxxx" edc:nzwidth="0x8" edc:por="xxxxxxxx"/>
        <edc:SFRDef edc:_addr="0x18" edc:access="nnnnnnnn" edc:cname="R24" edc:desc="General-Purpose Register" edc:impl="0xFF" edc:mclr="xxxxxxxx" edc:nzwidth="0x8" edc:por="xxxxxxxx"/>
        <edc:SFRDef edc:_addr="0x19" edc:access="nnnnnnnn" edc:cname="R25" edc:desc="General-Purpose Register" edc:impl="0xFF" edc:mclr="xxxxxxxx" edc:nzwidth="0x8" edc:por="xxxxxxxx"/>
        <edc:SFRDef edc:_addr="0x1A" edc:access="nnnnnnnn" edc:cname="R26" edc:desc="General-Purpose Register" edc:impl="0xFF" edc:mclr="xxxxxxxx" edc:nzwidth="0x8" edc:por="xxxxxxxx"/>
        <edc:SFRDef edc:_addr="0x1B" edc:access="nnnnnnnn" edc:cname="R27" edc:desc="General-Purpose Register" edc:impl="0xFF" edc:mclr="xxxxxxxx" edc:nzwidth="0x8" edc:por="xxxxxxxx"/>
        <edc:SFRDef edc:_addr="0x1C" edc:access="nnnnnnnn" edc:cname="R28" edc:desc="General-Purpose Register" edc:impl="0xFF" edc:mclr="xxxxxxxx" edc:nzwidth="0x8" edc:por="xxxxxxxx"/>
        <edc:SFRDef edc:_addr="0x1D" edc:access="nnnnnnnn" edc:cname="R29" edc:desc="General-Purpose Register" edc:impl="0xFF" edc:mclr="xxxxxxxx" edc:nzwidth="0x8" edc:por="xxxxxxxx"/>
        <edc:SFRDef edc:_addr="0x1E" edc:access="nnnnnnnn" edc:cname="R30" edc:desc="General-Purpose Register" edc:impl="0xFF" edc:mclr="xxxxxxxx" edc:nzwidth="0x8" edc:por="xxxxxxxx"/>
        <edc:SFRDef edc:_addr="0x1F" edc:access="nnnnnnnn" edc:cname="R31" edc:desc="General-Purpose Register" edc:impl="0xFF" edc:mclr="xxxxxxxx" edc:nzwidth="0x8" edc:por="xxxxxxxx"/>
      </edc:SFRDataSector>
      <edc:SFRDataSector edc:beginaddr="0x20" edc:endaddr="0x60" edc:regionid="MAPPED_IO">
        <edc:AdjustPoint edc:_addr="0x20" edc:offset="0x4"/>
        <edc:SFRDef edc:_addr="0x24" edc:access="nnnnnnnn" edc:cname="OSCCAL" edc:nzwidth="0x8" ltx:memberofperipheral="CPU">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CPU">
              <edc:SFRFieldDef edc:cname="OSCCAL" edc:desc="Oscillator Calibration " edc:nzwidth="0x8"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x25" edc:access="nnnnnnnn" edc:cname="PINE" edc:nzwidth="0x8" ltx:memberofperipheral="PORTE"/>
        <edc:SFRDef edc:_addr="0x26" edc:access="nnnnnnnn" edc:cname="DDRE" edc:nzwidth="0x8" ltx:memberofperipheral="PORTE"/>
        <edc:SFRDef edc:_addr="0x27" edc:access="nnnnnnnn" edc:cname="PORTE" edc:nzwidth="0x8" ltx:memberofperipheral="PORTE"/>
        <edc:SFRDef edc:_addr="0x28" edc:access="nnnnnnnn" edc:cname="ACSR" edc:nzwidth="0x8" ltx:memberofperipheral="AC">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="AC">
              <edc:SFRFieldDef edc:cname="ACIS" edc:desc="Analog Comparator Interrupt Mode Select bits" edc:nzwidth="0x2">
                <edc:SFRFieldSemantic edc:cname="VAL_0x00" edc:desc="Interrupt on Toggle" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="VAL_0x01" edc:desc="Reserved" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="VAL_0x02" edc:desc="Interrupt on Falling Edge" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="VAL_0x03" edc:desc="Interrupt on Rising Edge" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="ACIC" edc:desc="Analog Comparator Input Capture Enable" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="ACIE" edc:desc="Analog Comparator Interrupt Enable" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="ACI" edc:desc="Analog Comparator Interrupt Flag" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="ACO" edc:desc="Analog Compare Output" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="ACBG" edc:desc="Analog Comparator Bandgap Select" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="ACD" edc:desc="Analog Comparator Disable" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x29" edc:access="nnnnnnnn" edc:cname="UBRRL" edc:nzwidth="0x8" ltx:memberofperipheral="USART"/>
        <edc:SFRDef edc:_addr="0x2A" edc:access="nnnnnnnn" edc:cname="UCSRB" edc:nzwidth="0x8" ltx:memberofperipheral="USART">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART">
              <edc:SFRFieldDef edc:cname="TXB8" edc:desc="Transmit Data Bit 8" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="RXB8" edc:desc="Receive Data Bit 8" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="UCSZ2" edc:desc="Character Size Bit 2" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="TXEN" edc:desc="Transmitter Enable" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="RXEN" edc:desc="Receiver Enable" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="UDRIE" edc:desc="USART Data register Empty Interrupt Enable" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="TXCIE" edc:desc="TX Complete Interrupt Enable" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="RXCIE" edc:desc="RX Complete Interrupt Enable" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x2B" edc:access="nnnnnnnn" edc:cname="UCSRA" edc:nzwidth="0x8" ltx:memberofperipheral="USART">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART">
              <edc:SFRFieldDef edc:cname="MPCM" edc:desc="Multi-processor Communication Mode" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="U2X" edc:desc="Double the USART transmission speed" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="UPE" edc:desc="Parity Error" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="DOR" edc:desc="Data overRun" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="FE" edc:desc="Framing Error" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="UDRE" edc:desc="USART Data Register Empty" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="TXC" edc:desc="USART Transmitt Complete" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="RXC" edc:desc="USART Receive Complete" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x2C" edc:access="nnnnnnnn" edc:cname="UDR" edc:nzwidth="0x8" ltx:memberofperipheral="USART"/>
        <edc:SFRDef edc:_addr="0x2D" edc:access="nnnnnnnn" edc:cname="SPCR" edc:nzwidth="0x8" ltx:memberofperipheral="SPI">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPI">
              <edc:SFRFieldDef edc:cname="SPR" edc:desc="SPI Clock Rate Selects" edc:nzwidth="0x2">
                <edc:SFRFieldSemantic edc:cname="VAL_0x00" edc:desc="fosc/4" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="VAL_0x01" edc:desc="fosc/16" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="VAL_0x02" edc:desc="fosc/64" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="VAL_0x03" edc:desc="fosc/128" edc:when="(field &amp; 0x3) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="VAL_0x04" edc:desc="fosc/2" edc:when="(field &amp; 0x3) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="VAL_0x05" edc:desc="fosc/8" edc:when="(field &amp; 0x3) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="VAL_0x06" edc:desc="fosc/32" edc:when="(field &amp; 0x3) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="VAL_0x07" edc:desc="fosc/64" edc:when="(field &amp; 0x3) == 0x07"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="CPHA" edc:desc="Clock Phase" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="CPOL" edc:desc="Clock polarity" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="MSTR" edc:desc="Master/Slave Select" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="DORD" edc:desc="Data Order" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="SPE" edc:desc="SPI Enable" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="SPIE" edc:desc="SPI Interrupt Enable" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x2E" edc:access="nn-----n" edc:cname="SPSR" edc:impl="0xC1" edc:nzwidth="0x8" ltx:memberofperipheral="SPI">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPI">
              <edc:SFRFieldDef edc:cname="SPI2X" edc:desc="Double SPI Speed Bit" edc:nzwidth="0x1"/>
              <edc:AdjustPoint edc:offset="0x5"/>
              <edc:SFRFieldDef edc:cname="WCOL" edc:desc="Write Collision Flag" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="SPIF" edc:desc="SPI Interrupt Flag" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x2F" edc:access="nnnnnnnn" edc:cname="SPDR" edc:nzwidth="0x8" ltx:memberofperipheral="SPI"/>
        <edc:SFRDef edc:_addr="0x30" edc:access="nnnnnnnn" edc:cname="PIND" edc:nzwidth="0x8" ltx:memberofperipheral="PORTD"/>
        <edc:SFRDef edc:_addr="0x31" edc:access="nnnnnnnn" edc:cname="DDRD" edc:nzwidth="0x8" ltx:memberofperipheral="PORTD"/>
        <edc:SFRDef edc:_addr="0x32" edc:access="nnnnnnnn" edc:cname="PORTD" edc:nzwidth="0x8" ltx:memberofperipheral="PORTD"/>
        <edc:SFRDef edc:_addr="0x33" edc:access="nnnnnnnn" edc:cname="PINC" edc:nzwidth="0x8" ltx:memberofperipheral="PORTC"/>
        <edc:SFRDef edc:_addr="0x34" edc:access="nnnnnnnn" edc:cname="DDRC" edc:nzwidth="0x8" ltx:memberofperipheral="PORTC"/>
        <edc:SFRDef edc:_addr="0x35" edc:access="nnnnnnnn" edc:cname="PORTC" edc:nzwidth="0x8" ltx:memberofperipheral="PORTC"/>
        <edc:SFRDef edc:_addr="0x36" edc:access="nnnnnnnn" edc:cname="PINB" edc:nzwidth="0x8" ltx:memberofperipheral="PORTB"/>
        <edc:SFRDef edc:_addr="0x37" edc:access="nnnnnnnn" edc:cname="DDRB" edc:nzwidth="0x8" ltx:memberofperipheral="PORTB"/>
        <edc:SFRDef edc:_addr="0x38" edc:access="nnnnnnnn" edc:cname="PORTB" edc:nzwidth="0x8" ltx:memberofperipheral="PORTB"/>
        <edc:SFRDef edc:_addr="0x39" edc:access="nnnnnnnn" edc:cname="PINA" edc:nzwidth="0x8" ltx:memberofperipheral="PORTA"/>
        <edc:SFRDef edc:_addr="0x3A" edc:access="nnnnnnnn" edc:cname="DDRA" edc:nzwidth="0x8" ltx:memberofperipheral="PORTA"/>
        <edc:SFRDef edc:_addr="0x3B" edc:access="nnnnnnnn" edc:cname="PORTA" edc:nzwidth="0x8" ltx:memberofperipheral="PORTA"/>
        <edc:SFRDef edc:_addr="0x3C" edc:access="----nnnn" edc:cname="EECR" edc:impl="0xF" edc:nzwidth="0x8" ltx:memberofperipheral="EEPROM">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EEPROM">
              <edc:SFRFieldDef edc:cname="EERE" edc:desc="EEPROM Read Enable" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="EEWE" edc:desc="EEPROM Write Enable" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="EEMWE" edc:desc="EEPROM Master Write Enable" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="EERIE" edc:desc="EEPROM Ready Interrupt Enable" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x3D" edc:access="nnnnnnnn" edc:cname="EEDR" edc:nzwidth="0x8" ltx:memberofperipheral="EEPROM"/>
        <edc:SFRDef edc:_addr="0x3E" edc:access="nnnnnnnnnnnnnnnn" edc:cname="EEAR" edc:nzwidth="0x10" ltx:memberofperipheral="EEPROM"/>
        <edc:MuxedSFRDef edc:_addr="0x40" edc:nzwidth="0x8">
          <edc:SelectSFR>
            <edc:SFRDef edc:_addr="0x40" edc:access="nnnnnnnn" edc:cname="UCSRC" edc:nzwidth="0x8" ltx:memberofperipheral="USART">
              <edc:SFRModeList>
                <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART">
                  <edc:SFRFieldDef edc:cname="UCPOL" edc:desc="Clock Polarity" edc:nzwidth="0x1"/>
                  <edc:SFRFieldDef edc:cname="UCSZ" edc:desc="Character Size Bits" edc:nzwidth="0x2"/>
                  <edc:SFRFieldDef edc:cname="USBS" edc:desc="Stop Bit Select" edc:nzwidth="0x1">
                    <edc:SFRFieldSemantic edc:cname="VAL_0x00" edc:desc="1-bit" edc:when="(field &amp; 0x1) == 0x00"/>
                    <edc:SFRFieldSemantic edc:cname="VAL_0x01" edc:desc="2-bit" edc:when="(field &amp; 0x1) == 0x01"/>
                  </edc:SFRFieldDef>
                  <edc:SFRFieldDef edc:cname="UPM" edc:desc="Parity Mode Bits" edc:nzwidth="0x2">
                    <edc:SFRFieldSemantic edc:cname="VAL_0x00" edc:desc="Disabled" edc:when="(field &amp; 0x3) == 0x00"/>
                    <edc:SFRFieldSemantic edc:cname="VAL_0x01" edc:desc="Reserved" edc:when="(field &amp; 0x3) == 0x01"/>
                    <edc:SFRFieldSemantic edc:cname="VAL_0x02" edc:desc="Enabled, Even Parity" edc:when="(field &amp; 0x3) == 0x02"/>
                    <edc:SFRFieldSemantic edc:cname="VAL_0x03" edc:desc="Enabled, Odd Parity" edc:when="(field &amp; 0x3) == 0x03"/>
                  </edc:SFRFieldDef>
                  <edc:SFRFieldDef edc:cname="UMSEL" edc:desc="USART Mode Select" edc:nzwidth="0x1">
                    <edc:SFRFieldSemantic edc:cname="VAL_0x00" edc:desc="Asynchronous Operation" edc:when="(field &amp; 0x1) == 0x00"/>
                    <edc:SFRFieldSemantic edc:cname="VAL_0x01" edc:desc="Synchronous Operation" edc:when="(field &amp; 0x1) == 0x01"/>
                  </edc:SFRFieldDef>
                  <edc:SFRFieldDef edc:cname="URSEL" edc:desc="Register Select" edc:nzwidth="0x1"/>
                </edc:SFRMode>
              </edc:SFRModeList>
            </edc:SFRDef>
          </edc:SelectSFR>
          <edc:SelectSFR>
            <edc:SFRDef edc:_addr="0x40" edc:access="n---nnnn" edc:cname="UBRRH" edc:impl="0x8F" edc:nzwidth="0x8" ltx:memberofperipheral="USART">
              <edc:SFRModeList>
                <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART">
                  <edc:SFRFieldDef edc:cname="UBRR" edc:desc="USART Baud Rate Register bits" edc:nzwidth="0x2"/>
                  <edc:SFRFieldDef edc:cname="UBRR1" edc:desc="USART Baud Rate Register bit 11" edc:nzwidth="0x2"/>
                  <edc:AdjustPoint edc:offset="0x3"/>
                  <edc:SFRFieldDef edc:cname="URSEL" edc:desc="Register Select" edc:nzwidth="0x1"/>
                </edc:SFRMode>
              </edc:SFRModeList>
            </edc:SFRDef>
          </edc:SelectSFR>
        </edc:MuxedSFRDef>
        <edc:SFRDef edc:_addr="0x41" edc:access="---nnnnn" edc:cname="WDTCR" edc:impl="0x1F" edc:nzwidth="0x8" ltx:memberofperipheral="WDT">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="WDT">
              <edc:SFRFieldDef edc:cname="WDP" edc:desc="Watch Dog Timer Prescaler bits" edc:nzwidth="0x3">
                <edc:SFRFieldSemantic edc:cname="VAL_0x00" edc:desc="Oscillator Cycles 16K" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="VAL_0x01" edc:desc="Oscillator Cycles 32K" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="VAL_0x02" edc:desc="Oscillator Cycles 64K" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="VAL_0x03" edc:desc="Oscillator Cycles 128K" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="VAL_0x04" edc:desc="Oscillator Cycles 256K" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="VAL_0x05" edc:desc="Oscillator Cycles 512K" edc:when="(field &amp; 0x7) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="VAL_0x06" edc:desc="Oscillator Cycles 1024K" edc:when="(field &amp; 0x7) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="VAL_0x07" edc:desc="Oscillator Cycles 2048K" edc:when="(field &amp; 0x7) == 0x07"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="WDE" edc:desc="Watch Dog Enable" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="WDCE" edc:desc="Watchdog Change Enable" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:_addr="0x42" edc:offset="0x2"/>
        <edc:SFRDef edc:_addr="0x44" edc:access="nnnnnnnnnnnnnnnn" edc:cname="ICR1" edc:nzwidth="0x10" ltx:memberofperipheral="TC1"/>
        <edc:AdjustPoint edc:_addr="0x46" edc:offset="0x2"/>
        <edc:SFRDef edc:_addr="0x48" edc:access="nnnnnnnnnnnnnnnn" edc:cname="OCR1B" edc:nzwidth="0x10" ltx:memberofperipheral="TC1"/>
        <edc:SFRDef edc:_addr="0x4A" edc:access="nnnnnnnnnnnnnnnn" edc:cname="OCR1A" edc:nzwidth="0x10" ltx:memberofperipheral="TC1"/>
        <edc:SFRDef edc:_addr="0x4C" edc:access="nnnnnnnnnnnnnnnn" edc:cname="TCNT1" edc:nzwidth="0x10" ltx:memberofperipheral="TC1"/>
        <edc:SFRDef edc:_addr="0x4E" edc:access="nn-nnnnn" edc:cname="TCCR1B" edc:impl="0xDF" edc:nzwidth="0x8" ltx:memberofperipheral="TC1">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
              <edc:SFRFieldDef edc:cname="CS1" edc:desc="Clock Select1 bits" edc:nzwidth="0x3">
                <edc:SFRFieldSemantic edc:cname="VAL_0x00" edc:desc="No Clock Source (Stopped)" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="VAL_0x01" edc:desc="Running, No Prescaling" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="VAL_0x02" edc:desc="Running, CLK/8" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="VAL_0x03" edc:desc="Running, CLK/64" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="VAL_0x04" edc:desc="Running, CLK/256" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="VAL_0x05" edc:desc="Running, CLK/1024" edc:when="(field &amp; 0x7) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="VAL_0x06" edc:desc="Running, ExtClk Tx Falling Edge" edc:when="(field &amp; 0x7) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="VAL_0x07" edc:desc="Running, ExtClk Tx Rising Edge" edc:when="(field &amp; 0x7) == 0x07"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="WGM1" edc:desc="Pulse Width Modulator Select Bits" edc:nzwidth="0x2"/>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="ICES1" edc:desc="Input Capture 1 Edge Select" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="ICNC1" edc:desc="Input Capture 1 Noise Canceler" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x4F" edc:access="nnnnnnnn" edc:cname="TCCR1A" edc:nzwidth="0x8" ltx:memberofperipheral="TC1">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
              <edc:SFRFieldDef edc:cname="WGM1" edc:desc="Pulse Width Modulator Select Bits" edc:nzwidth="0x2"/>
              <edc:SFRFieldDef edc:cname="FOC1B" edc:desc="Force Output Compare for Channel B" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="FOC1A" edc:desc="Force Output Compare for Channel A" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="COM1B" edc:desc="Compare Output Mode 1B, bits" edc:nzwidth="0x2"/>
              <edc:SFRFieldDef edc:cname="COM1A" edc:desc="Compare Output Mode 1A, bits" edc:nzwidth="0x2"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x50" edc:access="-nnnnn-n" edc:cname="SFIOR" edc:impl="0x7D" edc:nzwidth="0x8" ltx:memberofperipheral="CPU">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CPU">
              <edc:SFRFieldDef edc:cname="PSR10" edc:desc="Prescaler Reset Timer / Counter 1 and Timer / Counter 0" edc:nzwidth="0x1"/>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="PUD" edc:desc="Pull-up Disable" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="XMM" edc:desc="External Memory High Mask Bits" edc:nzwidth="0x3"/>
              <edc:SFRFieldDef edc:cname="XMBK" edc:desc="External Memory Bus Keeper Enable" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x51" edc:access="nnnnnnnn" edc:cname="OCR0" edc:nzwidth="0x8" ltx:memberofperipheral="TC0"/>
        <edc:SFRDef edc:_addr="0x52" edc:access="nnnnnnnn" edc:cname="TCNT0" edc:nzwidth="0x8" ltx:memberofperipheral="TC0"/>
        <edc:SFRDef edc:_addr="0x53" edc:access="nnnnnnnn" edc:cname="TCCR0" edc:nzwidth="0x8" ltx:memberofperipheral="TC0">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
              <edc:SFRFieldDef edc:cname="CS0" edc:desc="Clock Selects" edc:nzwidth="0x3">
                <edc:SFRFieldSemantic edc:cname="VAL_0x00" edc:desc="No Clock Source (Stopped)" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="VAL_0x01" edc:desc="Running, No Prescaling" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="VAL_0x02" edc:desc="Running, CLK/8" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="VAL_0x03" edc:desc="Running, CLK/64" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="VAL_0x04" edc:desc="Running, CLK/256" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="VAL_0x05" edc:desc="Running, CLK/1024" edc:when="(field &amp; 0x7) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="VAL_0x06" edc:desc="Running, ExtClk Tx Falling Edge" edc:when="(field &amp; 0x7) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="VAL_0x07" edc:desc="Running, ExtClk Tx Rising Edge" edc:when="(field &amp; 0x7) == 0x07"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="WGM01" edc:desc="Waveform Generation Mode 1" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="COM0" edc:desc="Compare Match Output Modes" edc:nzwidth="0x2"/>
              <edc:SFRFieldDef edc:cname="WGM00" edc:desc="Waveform Generation Mode 0" edc:nzwidth="0x1">
                <edc:SFRFieldSemantic edc:cname="VAL_0x00" edc:desc="Normal" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="VAL_0x02" edc:desc="PWM, Phase Correct" edc:when="(field &amp; 0x1) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="VAL_0x01" edc:desc="CTC" edc:when="(field &amp; 0x1) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="VAL_0x03" edc:desc="Fast PWM" edc:when="(field &amp; 0x1) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="FOC0" edc:desc="Force Output Compare" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x54" edc:access="--n-nnnn" edc:cname="MCUCSR" edc:impl="0x2F" edc:nzwidth="0x8" ltx:memberofperipheral="CPU">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CPU">
              <edc:SFRFieldDef edc:cname="PORF" edc:desc="Power-on reset flag" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="EXTRF" edc:desc="External Reset Flag" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="BORF" edc:desc="Brown-out Reset Flag" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="WDRF" edc:desc="Watchdog Reset Flag" edc:nzwidth="0x1"/>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="SM2" edc:desc="Sleep Mode Select Bit 2" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x55" edc:access="nnnnnnnn" edc:cname="MCUCR" edc:nzwidth="0x8" ltx:memberofperipheral="CPU">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CPU">
              <edc:SFRFieldDef edc:cname="ISC0" edc:desc="Interrupt Sense Control 0 Bits" edc:nzwidth="0x2">
                <edc:SFRFieldSemantic edc:cname="VAL_0x00" edc:desc="Low Level of INTX" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="VAL_0x01" edc:desc="Any Logical Change in INTX" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="VAL_0x02" edc:desc="Falling Edge of INTX" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="VAL_0x03" edc:desc="Rising Edge of INTX" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="ISC1" edc:desc="Interrupt Sense Control 1 Bits" edc:nzwidth="0x2">
                <edc:SFRFieldSemantic edc:cname="VAL_0x00" edc:desc="Low Level of INTX" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="VAL_0x01" edc:desc="Any Logical Change in INTX" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="VAL_0x02" edc:desc="Falling Edge of INTX" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="VAL_0x03" edc:desc="Rising Edge of INTX" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="SM1" edc:desc="Sleep Mode Select Bit 1" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="SE" edc:desc="Sleep Enable" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="SRW10" edc:desc="Wait State Select Bits for Upper Sector, bit 0" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="SRE" edc:desc="External SRAM/XMEM Enable" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x56" edc:access="nnnnnnnn" edc:cname="EMCUCR" edc:nzwidth="0x8" ltx:memberofperipheral="CPU">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CPU">
              <edc:SFRFieldDef edc:cname="ISC2" edc:desc="Interrupt Sense Control 2" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="SRW11" edc:desc="Wait State Select Bits for Upper Sector, bit 1" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="SRW0" edc:desc="Wait State Select Bits for Lower Sector, bits" edc:nzwidth="0x2">
                <edc:SFRFieldSemantic edc:cname="VAL_0x00" edc:desc="No wait-states" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="VAL_0x01" edc:desc="Wait one cycle during read/write strobe" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="VAL_0x02" edc:desc="Wait two cycles during read/write strobe" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="VAL_0x03" edc:desc="Wait two cycles during read/write and wait one cycle before driving out new address" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="SRL" edc:desc="Wait State Selector Limit bits" edc:nzwidth="0x3">
                <edc:SFRFieldSemantic edc:cname="VAL_0x00" edc:desc="LS = N/A, US = 0x1100 - 0xFFFF" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="VAL_0x01" edc:desc="LS = 0x1100 - 0x1FFF, US = 0x2000 - 0xFFFF" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="VAL_0x02" edc:desc="LS = 0x1100 - 0x3FFF, US = 0x4000 - 0xFFFF" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="VAL_0x03" edc:desc="LS = 0x1100 - 0x5FFF, US = 0x6000 - 0xFFFF" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="VAL_0x04" edc:desc="LS = 0x1100 - 0x7FFF, US = 0x8000 - 0xFFFF" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="VAL_0x05" edc:desc="LS = 0x1100 - 0x9FFF, US = 0xA000 - 0xFFFF" edc:when="(field &amp; 0x7) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="VAL_0x06" edc:desc="LS = 0x1100 - 0xBFFF, US = 0xC000 - 0xFFFF" edc:when="(field &amp; 0x7) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="VAL_0x07" edc:desc="LS = 0x1100 - 0xDFFF, US = 0xE000 - 0xFFFF" edc:when="(field &amp; 0x7) == 0x07"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="SM0" edc:desc="Sleep Mode Select Bit 0" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x57" edc:access="nn-nnnnn" edc:cname="SPMCR" edc:impl="0xDF" edc:nzwidth="0x8" ltx:memberofperipheral="CPU">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CPU">
              <edc:SFRFieldDef edc:cname="SPMEN" edc:desc="Store Program Memory Enable" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="PGERS" edc:desc="Page Erase" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="PGWRT" edc:desc="Page Write" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="BLBSET" edc:desc="Boot Lock Bit Set" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="RWWSRE" edc:desc="Read-While-Write Section Read Enable" edc:nzwidth="0x1"/>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="RWWSB" edc:desc="Read-While-Write Section Busy" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="SPMIE" edc:desc="SPM Interrupt Enable" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x58" edc:access="nnn-n-nn" edc:cname="TIFR" edc:impl="0xEB" edc:nzwidth="0x8" ltx:memberofperipheral="TC0 TC1">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
              <edc:SFRFieldDef edc:cname="OCF0" edc:desc="Output Compare Flag 0" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="TOV0" edc:desc="Timer/Counter0 Overflow Flag" edc:nzwidth="0x1"/>
            </edc:SFRMode>
            <edc:SFRMode edc:id="DS.1" ltx:memberofperipheral="TC1">
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="ICF1" edc:desc="Input Capture Flag 1" edc:nzwidth="0x1"/>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="OCF1B" edc:desc="Output Compare Flag 1B" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="OCF1A" edc:desc="Output Compare Flag 1A" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="TOV1" edc:desc="Timer/Counter1 Overflow Flag" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x59" edc:access="nnn-n-nn" edc:cname="TIMSK" edc:impl="0xEB" edc:nzwidth="0x8" ltx:memberofperipheral="TC0 TC1">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
              <edc:SFRFieldDef edc:cname="OCIE0" edc:desc="Timer/Counter0 Output Compare Match Interrupt register" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="TOIE0" edc:desc="Timer/Counter0 Overflow Interrupt Enable" edc:nzwidth="0x1"/>
            </edc:SFRMode>
            <edc:SFRMode edc:id="DS.1" ltx:memberofperipheral="TC1">
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="TICIE1" edc:desc="Timer/Counter1 Input Capture Interrupt Enable" edc:nzwidth="0x1"/>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="OCIE1B" edc:desc="Timer/Counter1 Output CompareB Match Interrupt Enable" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="OCIE1A" edc:desc="Timer/Counter1 Output CompareA Match Interrupt Enable" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="TOIE1" edc:desc="Timer/Counter1 Overflow Interrupt Enable" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x5A" edc:access="nnn-----" edc:cname="GIFR" edc:impl="0xE0" edc:nzwidth="0x8" ltx:memberofperipheral="EXINT">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EXINT">
              <edc:AdjustPoint edc:offset="0x5"/>
              <edc:SFRFieldDef edc:cname="INTF2" edc:desc="External Interrupt Flag 2" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="INTF" edc:desc="External Interrupt Flags" edc:nzwidth="0x2"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef edc:_addr="0x5B" edc:access="nnn---nn" edc:cname="GICR" edc:impl="0xE3" edc:nzwidth="0x8" ltx:memberofperipheral="EXINT">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EXINT">
              <edc:SFRFieldDef edc:cname="IVCE" edc:desc="Interrupt Vector Change Enable" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="IVSEL" edc:desc="Interrupt Vector Select" edc:nzwidth="0x1"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="INT2" edc:desc="External Interrupt Request 2 Enable" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="INT0" edc:desc="External Interrupt Request 0 Enable" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="INT1" edc:desc="External Interrupt Request 1 Enable" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:_addr="0x5C" edc:offset="0x1"/>
        <edc:SFRDef edc:_addr="0x5D" edc:access="nnnnnnnnnnnnnnnn" edc:cname="SP" edc:nzwidth="0x10" ltx:memberofperipheral="CPU"/>
        <edc:SFRDef edc:_addr="0x5F" edc:access="nnnnnnnn" edc:cname="SREG" edc:nzwidth="0x8" ltx:memberofperipheral="CPU">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CPU">
              <edc:SFRFieldDef edc:cname="C" edc:desc="Carry Flag" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="Z" edc:desc="Zero Flag" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="N" edc:desc="Negative Flag" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="V" edc:desc="Two's Complement Overflow Flag" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="S" edc:desc="Sign Bit" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="H" edc:desc="Half Carry Flag" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="T" edc:desc="Bit Copy Storage" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="I" edc:desc="Global Interrupt Enable" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
      </edc:SFRDataSector>
      <edc:GPRDataSector edc:beginaddr="0x60" edc:endaddr="0x260" edc:regionid="IRAM"/>
      <edc:GPRDataSector edc:beginaddr="0x260" edc:endaddr="0x10000" edc:regionid="XRAM"/>
    </edc:RegardlessOfMode>
  </edc:DataSpace>
  <edc:DataFlashSpace edc:endaddr="0x400" edc:magicoffset="0x810000"/>
  <edc:SignaturesSpace edc:magicoffset="0x840000">
    <edc:DeviceIDSector edc:beginaddr="0x0" edc:endaddr="0x3" edc:regionid="SIGNATURES" edc:value="0x1E9306"/>
  </edc:SignaturesSpace>
  <edc:FusesSpace edc:magicoffset="0x820000">
    <edc:ConfigFuseSector edc:beginaddr="0x0" edc:endaddr="0x2" edc:regionid="FUSES">
      <edc:DCRDef edc:_addr="0x0" edc:access="nnnnnnnn" edc:cname="LOW" edc:factorydefault="0xE1" edc:impl="0xFF" edc:nzwidth="0x8" edc:unused="0x0" edc:useinchecksum="0xFF" ltx:memberofperipheral="FUSE">
        <edc:DCRModeList>
          <edc:DCRMode edc:id="DS.0" ltx:memberofperipheral="FUSE">
            <edc:DCRFieldDef edc:cname="SUT_CKSEL" edc:desc="Select Clock Source" edc:nzwidth="0x6">
              <edc:DCRFieldSemantic edc:cname="EXTCLK_6CK_0MS" edc:desc="Ext. Clock; Start-up time: 6 CK + 0 ms" edc:when="(field &amp; 0x3F) == 0x00"/>
              <edc:DCRFieldSemantic edc:cname="EXTCLK_6CK_4MS" edc:desc="Ext. Clock; Start-up time: 6 CK + 4 ms" edc:when="(field &amp; 0x3F) == 0x10"/>
              <edc:DCRFieldSemantic edc:cname="EXTCLK_6CK_64MS" edc:desc="Ext. Clock; Start-up time: 6 CK + 64 ms" edc:when="(field &amp; 0x3F) == 0x20"/>
              <edc:DCRFieldSemantic edc:cname="INTRCOSC_1MHZ_6CK_0MS" edc:desc="Int. RC Osc. 1 MHz; Start-up time: 6 CK + 0 ms" edc:when="(field &amp; 0x3F) == 0x01"/>
              <edc:DCRFieldSemantic edc:cname="INTRCOSC_1MHZ_6CK_4MS" edc:desc="Int. RC Osc. 1 MHz; Start-up time: 6 CK + 4 ms" edc:when="(field &amp; 0x3F) == 0x11"/>
              <edc:DCRFieldSemantic edc:cname="INTRCOSC_1MHZ_6CK_64MS" edc:desc="Int. RC Osc. 1 MHz; Start-up time: 6 CK + 64 ms" edc:when="(field &amp; 0x3F) == 0x21"/>
              <edc:DCRFieldSemantic edc:cname="INTRCOSC_2MHZ_6CK_0MS" edc:desc="Int. RC Osc. 2 MHz; Start-up time: 6 CK + 0 ms" edc:when="(field &amp; 0x3F) == 0x02"/>
              <edc:DCRFieldSemantic edc:cname="INTRCOSC_2MHZ_6CK_4MS" edc:desc="Int. RC Osc. 2 MHz; Start-up time: 6 CK + 4 ms" edc:when="(field &amp; 0x3F) == 0x12"/>
              <edc:DCRFieldSemantic edc:cname="INTRCOSC_2MHZ_6CK_64MS" edc:desc="Int. RC Osc. 2 MHz; Start-up time: 6 CK + 64 ms" edc:when="(field &amp; 0x3F) == 0x22"/>
              <edc:DCRFieldSemantic edc:cname="INTRCOSC_4MHZ_6CK_0MS" edc:desc="Int. RC Osc. 4 MHz; Start-up time: 6 CK + 0 ms" edc:when="(field &amp; 0x3F) == 0x03"/>
              <edc:DCRFieldSemantic edc:cname="INTRCOSC_4MHZ_6CK_4MS" edc:desc="Int. RC Osc. 4 MHz; Start-up time: 6 CK + 4 ms" edc:when="(field &amp; 0x3F) == 0x13"/>
              <edc:DCRFieldSemantic edc:cname="INTRCOSC_4MHZ_6CK_64MS" edc:desc="Int. RC Osc. 4 MHz; Start-up time: 6 CK + 64 ms" edc:when="(field &amp; 0x3F) == 0x23"/>
              <edc:DCRFieldSemantic edc:cname="INTRCOSC_8MHZ_6CK_0MS" edc:desc="Int. RC Osc. 8 MHz; Start-up time: 6 CK + 0 ms" edc:when="(field &amp; 0x3F) == 0x04"/>
              <edc:DCRFieldSemantic edc:cname="INTRCOSC_8MHZ_6CK_4MS" edc:desc="Int. RC Osc. 8 MHz; Start-up time: 6 CK + 4 ms" edc:when="(field &amp; 0x3F) == 0x14"/>
              <edc:DCRFieldSemantic edc:cname="INTRCOSC_8MHZ_6CK_64MS" edc:desc="Int. RC Osc. 8 MHz; Start-up time: 6 CK + 64 ms" edc:when="(field &amp; 0x3F) == 0x24"/>
              <edc:DCRFieldSemantic edc:cname="EXTRCOSC_XX_0MHZ9_18CK_0MS" edc:desc="Ext. RC Osc.         -  0.9 MHz; Start-up time: 18 CK + 0 ms" edc:when="(field &amp; 0x3F) == 0x05"/>
              <edc:DCRFieldSemantic edc:cname="EXTRCOSC_XX_0MHZ9_18CK_4MS" edc:desc="Ext. RC Osc.         -  0.9 MHz; Start-up time: 18 CK + 4 ms" edc:when="(field &amp; 0x3F) == 0x15"/>
              <edc:DCRFieldSemantic edc:cname="EXTRCOSC_XX_0MHZ9_18CK_64MS" edc:desc="Ext. RC Osc.         -  0.9 MHz; Start-up time: 18 CK + 64 ms" edc:when="(field &amp; 0x3F) == 0x25"/>
              <edc:DCRFieldSemantic edc:cname="EXTRCOSC_XX_0MHZ9_6CK_4MS" edc:desc="Ext. RC Osc.         -  0.9 MHz; Start-up time: 6 CK + 4 ms" edc:when="(field &amp; 0x3F) == 0x35"/>
              <edc:DCRFieldSemantic edc:cname="EXTRCOSC_0MHZ9_3MHZ_18CK_0MS" edc:desc="Ext. RC Osc. 0.9 MHz -  3.0 MHz; Start-up time: 18 CK + 0 ms" edc:when="(field &amp; 0x3F) == 0x06"/>
              <edc:DCRFieldSemantic edc:cname="EXTRCOSC_0MHZ9_3MHZ_18CK_4MS" edc:desc="Ext. RC Osc. 0.9 MHz -  3.0 MHz; Start-up time: 18 CK + 4 ms" edc:when="(field &amp; 0x3F) == 0x16"/>
              <edc:DCRFieldSemantic edc:cname="EXTRCOSC_0MHZ9_3MHZ_18CK_64MS" edc:desc="Ext. RC Osc. 0.9 MHz -  3.0 MHz; Start-up time: 18 CK + 64 ms" edc:when="(field &amp; 0x3F) == 0x26"/>
              <edc:DCRFieldSemantic edc:cname="EXTRCOSC_0MHZ9_3MHZ_6CK_4MS" edc:desc="Ext. RC Osc. 0.9 MHz -  3.0 MHz; Start-up time: 6 CK + 4 ms" edc:when="(field &amp; 0x3F) == 0x36"/>
              <edc:DCRFieldSemantic edc:cname="EXTRCOSC_3MHZ_8MHZ_18CK_0MS" edc:desc="Ext. RC Osc. 3.0 MHz -  8.0 MHz; Start-up time: 18 CK + 0 ms" edc:when="(field &amp; 0x3F) == 0x07"/>
              <edc:DCRFieldSemantic edc:cname="EXTRCOSC_3MHZ_8MHZ_18CK_4MS" edc:desc="Ext. RC Osc. 3.0 MHz -  8.0 MHz; Start-up time: 18 CK + 4 ms" edc:when="(field &amp; 0x3F) == 0x17"/>
              <edc:DCRFieldSemantic edc:cname="EXTRCOSC_3MHZ_8MHZ_18CK_64MS" edc:desc="Ext. RC Osc. 3.0 MHz -  8.0 MHz; Start-up time: 18 CK + 64 ms" edc:when="(field &amp; 0x3F) == 0x27"/>
              <edc:DCRFieldSemantic edc:cname="EXTRCOSC_3MHZ_8MHZ_6CK_4MS" edc:desc="Ext. RC Osc. 3.0 MHz -  8.0 MHz; Start-up time: 6 CK + 4 ms" edc:when="(field &amp; 0x3F) == 0x37"/>
              <edc:DCRFieldSemantic edc:cname="EXTRCOSC_8MHZ_12MHZ_18CK_0MS" edc:desc="Ext. RC Osc. 8.0 MHz - 12.0 MHz; Start-up time: 18 CK + 0 ms" edc:when="(field &amp; 0x3F) == 0x08"/>
              <edc:DCRFieldSemantic edc:cname="EXTRCOSC_8MHZ_12MHZ_18CK_4MS" edc:desc="Ext. RC Osc. 8.0 MHz - 12.0 MHz; Start-up time: 18 CK + 4 ms" edc:when="(field &amp; 0x3F) == 0x18"/>
              <edc:DCRFieldSemantic edc:cname="EXTRCOSC_8MHZ_12MHZ_18CK_64MS" edc:desc="Ext. RC Osc. 8.0 MHz - 12.0 MHz; Start-up time: 18 CK + 64 ms" edc:when="(field &amp; 0x3F) == 0x28"/>
              <edc:DCRFieldSemantic edc:cname="EXTRCOSC_8MHZ_12MHZ_6CK_4MS" edc:desc="Ext. RC Osc. 8.0 MHz - 12.0 MHz; Start-up time: 6 CK + 4 ms" edc:when="(field &amp; 0x3F) == 0x38"/>
              <edc:DCRFieldSemantic edc:cname="EXTLOFXTAL_1KCK_4MS" edc:desc="Ext. Low-Freq. Crystal; Start-up time: 1K CK + 4 ms" edc:when="(field &amp; 0x3F) == 0x09"/>
              <edc:DCRFieldSemantic edc:cname="EXTLOFXTAL_1KCK_64MS" edc:desc="Ext. Low-Freq. Crystal; Start-up time: 1K CK + 64 ms" edc:when="(field &amp; 0x3F) == 0x19"/>
              <edc:DCRFieldSemantic edc:cname="EXTLOFXTAL_32KCK_64MS" edc:desc="Ext. Low-Freq. Crystal; Start-up time: 32K CK + 64 ms" edc:when="(field &amp; 0x3F) == 0x29"/>
              <edc:DCRFieldSemantic edc:cname="EXTLOFXTALRES_258CK_4MS" edc:desc="Ext. Crystal/Resonator Low Freq.; Start-up time: 258 CK + 4 ms" edc:when="(field &amp; 0x3F) == 0x0A"/>
              <edc:DCRFieldSemantic edc:cname="EXTLOFXTALRES_258CK_64MS" edc:desc="Ext. Crystal/Resonator Low Freq.; Start-up time: 258 CK + 64 ms" edc:when="(field &amp; 0x3F) == 0x1A"/>
              <edc:DCRFieldSemantic edc:cname="EXTLOFXTALRES_1KCK_0MS" edc:desc="Ext. Crystal/Resonator Low Freq.; Start-up time: 1K CK + 0 ms" edc:when="(field &amp; 0x3F) == 0x2A"/>
              <edc:DCRFieldSemantic edc:cname="EXTLOFXTALRES_1KCK_4MS" edc:desc="Ext. Crystal/Resonator Low Freq.; Start-up time: 1K CK + 4 ms" edc:when="(field &amp; 0x3F) == 0x3A"/>
              <edc:DCRFieldSemantic edc:cname="EXTLOFXTALRES_1KCK_64MS" edc:desc="Ext. Crystal/Resonator Low Freq.; Start-up time: 1K CK + 64 ms" edc:when="(field &amp; 0x3F) == 0x0B"/>
              <edc:DCRFieldSemantic edc:cname="EXTLOFXTALRES_16KCK_0MS" edc:desc="Ext. Crystal/Resonator Low Freq.; Start-up time: 16K CK + 0 ms" edc:when="(field &amp; 0x3F) == 0x1B"/>
              <edc:DCRFieldSemantic edc:cname="EXTLOFXTALRES_16KCK_4MS" edc:desc="Ext. Crystal/Resonator Low Freq.; Start-up time: 16K CK + 4 ms" edc:when="(field &amp; 0x3F) == 0x2B"/>
              <edc:DCRFieldSemantic edc:cname="EXTLOFXTALRES_16KCK_64MS" edc:desc="Ext. Crystal/Resonator Low Freq.; Start-up time: 16K CK + 64 ms" edc:when="(field &amp; 0x3F) == 0x3B"/>
              <edc:DCRFieldSemantic edc:cname="EXTMEDFXTALRES_258CK_4MS" edc:desc="Ext. Crystal/Resonator Medium Freq.; Start-up time: 258 CK + 4 ms" edc:when="(field &amp; 0x3F) == 0x0C"/>
              <edc:DCRFieldSemantic edc:cname="EXTMEDFXTALRES_258CK_64MS" edc:desc="Ext. Crystal/Resonator Medium Freq.; Start-up time: 258 CK + 64 ms" edc:when="(field &amp; 0x3F) == 0x1C"/>
              <edc:DCRFieldSemantic edc:cname="EXTMEDFXTALRES_1KCK_0MS" edc:desc="Ext. Crystal/Resonator Medium Freq.; Start-up time: 1K CK + 0 ms" edc:when="(field &amp; 0x3F) == 0x2C"/>
              <edc:DCRFieldSemantic edc:cname="EXTMEDFXTALRES_1KCK_4MS" edc:desc="Ext. Crystal/Resonator Medium Freq.; Start-up time: 1K CK + 4 ms" edc:when="(field &amp; 0x3F) == 0x3C"/>
              <edc:DCRFieldSemantic edc:cname="EXTMEDFXTALRES_1KCK_64MS" edc:desc="Ext. Crystal/Resonator Medium Freq.; Start-up time: 1K CK + 64 ms" edc:when="(field &amp; 0x3F) == 0x0D"/>
              <edc:DCRFieldSemantic edc:cname="EXTMEDFXTALRES_16KCK_0MS" edc:desc="Ext. Crystal/Resonator Medium Freq.; Start-up time: 16K CK + 0 ms" edc:when="(field &amp; 0x3F) == 0x1D"/>
              <edc:DCRFieldSemantic edc:cname="EXTMEDFXTALRES_16KCK_4MS" edc:desc="Ext. Crystal/Resonator Medium Freq.; Start-up time: 16K CK + 4 ms" edc:when="(field &amp; 0x3F) == 0x2D"/>
              <edc:DCRFieldSemantic edc:cname="EXTMEDFXTALRES_16KCK_64MS" edc:desc="Ext. Crystal/Resonator Medium Freq.; Start-up time: 16K CK + 64 ms" edc:when="(field &amp; 0x3F) == 0x3D"/>
              <edc:DCRFieldSemantic edc:cname="EXTHIFXTALRES_258CK_4MS" edc:desc="Ext. Crystal/Resonator High Freq.; Start-up time: 258 CK + 4 ms" edc:when="(field &amp; 0x3F) == 0x0E"/>
              <edc:DCRFieldSemantic edc:cname="EXTHIFXTALRES_258CK_64MS" edc:desc="Ext. Crystal/Resonator High Freq.; Start-up time: 258 CK + 64 ms" edc:when="(field &amp; 0x3F) == 0x1E"/>
              <edc:DCRFieldSemantic edc:cname="EXTHIFXTALRES_1KCK_0MS" edc:desc="Ext. Crystal/Resonator High Freq.; Start-up time: 1K CK + 0 ms" edc:when="(field &amp; 0x3F) == 0x2E"/>
              <edc:DCRFieldSemantic edc:cname="EXTHIFXTALRES_1KCK_4MS" edc:desc="Ext. Crystal/Resonator High Freq.; Start-up time: 1K CK + 4 ms" edc:when="(field &amp; 0x3F) == 0x3E"/>
              <edc:DCRFieldSemantic edc:cname="EXTHIFXTALRES_1KCK_64MS" edc:desc="Ext. Crystal/Resonator High Freq.; Start-up time: 1K CK + 64 ms" edc:when="(field &amp; 0x3F) == 0x0F"/>
              <edc:DCRFieldSemantic edc:cname="EXTHIFXTALRES_16KCK_0MS" edc:desc="Ext. Crystal/Resonator High Freq.; Start-up time: 16K CK + 0 ms" edc:when="(field &amp; 0x3F) == 0x1F"/>
              <edc:DCRFieldSemantic edc:cname="EXTHIFXTALRES_16KCK_4MS" edc:desc="Ext. Crystal/Resonator High Freq.; Start-up time: 16K CK + 4 ms" edc:when="(field &amp; 0x3F) == 0x2F"/>
              <edc:DCRFieldSemantic edc:cname="EXTHIFXTALRES_16KCK_64MS" edc:desc="Ext. Crystal/Resonator High Freq.; Start-up time: 16K CK + 64 ms" edc:when="(field &amp; 0x3F) == 0x3F"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="BODEN" edc:desc="Brown-out detection enabled" edc:nzwidth="0x1">
              <edc:DCRFieldSemantic edc:cname="SET" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:DCRFieldSemantic edc:cname="CLEAR" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="BODLEVEL" edc:desc="Brownout detector trigger level" edc:nzwidth="0x1">
              <edc:DCRFieldSemantic edc:cname="4V0" edc:desc="Brown-out detection at VCC=4.0 V" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:DCRFieldSemantic edc:cname="2V7" edc:desc="Brown-out detection at VCC=2.7 V" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:DCRFieldDef>
          </edc:DCRMode>
        </edc:DCRModeList>
      </edc:DCRDef>
      <edc:DCRDef edc:_addr="0x1" edc:access="nnnnnnnn" edc:cname="HIGH" edc:factorydefault="0xD9" edc:impl="0xFF" edc:nzwidth="0x8" edc:unused="0x0" edc:useinchecksum="0xFF" ltx:memberofperipheral="FUSE">
        <edc:DCRModeList>
          <edc:DCRMode edc:id="DS.0" ltx:memberofperipheral="FUSE">
            <edc:DCRFieldDef edc:cname="BOOTRST" edc:desc="Boot Reset vector Enabled" edc:nzwidth="0x1">
              <edc:DCRFieldSemantic edc:cname="SET" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:DCRFieldSemantic edc:cname="CLEAR" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="BOOTSZ" edc:desc="Select Boot Size" edc:nzwidth="0x2">
              <edc:DCRFieldSemantic edc:cname="128W_0F80" edc:desc="Boot Flashsize=128 words Boot address=$0F80" edc:when="(field &amp; 0x3) == 0x03"/>
              <edc:DCRFieldSemantic edc:cname="256W_0F00" edc:desc="Boot Flash size=256 words Boot address=$0F00" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:DCRFieldSemantic edc:cname="512W_0E00" edc:desc="Boot Flash size=512 words Boot address=$0E00" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:DCRFieldSemantic edc:cname="1024W_0C00" edc:desc="Boot Flash size=1024 words Boot address=$0C00" edc:when="(field &amp; 0x3) == 0x00"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="EESAVE" edc:desc="Preserve EEPROM through the Chip Erase cycle" edc:nzwidth="0x1">
              <edc:DCRFieldSemantic edc:cname="SET" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:DCRFieldSemantic edc:cname="CLEAR" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="CKOPT" edc:desc="CKOPT fuse (operation dependent of CKSEL fuses)]" edc:nzwidth="0x1">
              <edc:DCRFieldSemantic edc:cname="SET" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:DCRFieldSemantic edc:cname="CLEAR" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="SPIEN" edc:desc="Serial program downloading (SPI) enabled" edc:nzwidth="0x1">
              <edc:DCRFieldSemantic edc:cname="SET" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:DCRFieldSemantic edc:cname="CLEAR" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="WDTON" edc:desc="Watch-dog Timer always on" edc:nzwidth="0x1">
              <edc:DCRFieldSemantic edc:cname="SET" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:DCRFieldSemantic edc:cname="CLEAR" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="S8515C" edc:desc="AT90S4414/8515 compatibility mode" edc:nzwidth="0x1">
              <edc:DCRFieldSemantic edc:cname="SET" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:DCRFieldSemantic edc:cname="CLEAR" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:DCRFieldDef>
          </edc:DCRMode>
        </edc:DCRModeList>
      </edc:DCRDef>
    </edc:ConfigFuseSector>
  </edc:FusesSpace>
  <edc:LockbitsSpace edc:magicoffset="0x830000">
    <edc:ConfigFuseSector edc:beginaddr="0x0" edc:endaddr="0x1" edc:regionid="LOCKBITS">
      <edc:DCRDef edc:_addr="0x0" edc:access="--nnnnnn" edc:cname="LOCKBIT" edc:factorydefault="0xFF" edc:impl="0x3F" edc:nzwidth="0x8" edc:unused="0x0" edc:useinchecksum="0xFF" ltx:memberofperipheral="LOCKBIT">
        <edc:DCRModeList>
          <edc:DCRMode edc:id="DS.0" ltx:memberofperipheral="LOCKBIT">
            <edc:DCRFieldDef edc:cname="LB" edc:desc="Memory Lock" edc:nzwidth="0x2">
              <edc:DCRFieldSemantic edc:cname="PROG_VER_DISABLED" edc:desc="Further programming and verification disabled" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:DCRFieldSemantic edc:cname="PROG_DISABLED" edc:desc="Further programming disabled" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:DCRFieldSemantic edc:cname="NO_LOCK" edc:desc="No memory lock features enabled" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="BLB0" edc:desc="Boot Loader Protection Mode" edc:nzwidth="0x2">
              <edc:DCRFieldSemantic edc:cname="LPM_SPM_DISABLE" edc:desc="LPM and SPM prohibited in Application Section" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:DCRFieldSemantic edc:cname="LPM_DISABLE" edc:desc="LPM prohibited in Application Section" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:DCRFieldSemantic edc:cname="SPM_DISABLE" edc:desc="SPM prohibited in Application Section" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:DCRFieldSemantic edc:cname="NO_LOCK" edc:desc="No lock on SPM and LPM in Application Section" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="BLB1" edc:desc="Boot Loader Protection Mode" edc:nzwidth="0x2">
              <edc:DCRFieldSemantic edc:cname="LPM_SPM_DISABLE" edc:desc="LPM and SPM prohibited in Boot Section" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:DCRFieldSemantic edc:cname="LPM_DISABLE" edc:desc="LPM prohibited in Boot Section" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:DCRFieldSemantic edc:cname="SPM_DISABLE" edc:desc="SPM prohibited in Boot Section" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:DCRFieldSemantic edc:cname="NO_LOCK" edc:desc="No lock on SPM and LPM in Boot Section" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:DCRFieldDef>
          </edc:DCRMode>
        </edc:DCRModeList>
      </edc:DCRDef>
    </edc:ConfigFuseSector>
  </edc:LockbitsSpace>
</edc:PIC>